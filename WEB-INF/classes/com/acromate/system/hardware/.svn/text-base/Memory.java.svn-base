/*
 * Memory.java
 *
 * Created on 2006년 10월 16일 (월), 오후 5:32
 * Copyright 2006 Acromate, Inc. All rights reserved.
 */

package com.acromate.system.hardware;

import com.acromate.data.DataIO;
import com.acromate.util.Logger;

/**
 *
 * @author 아크로메이트 기술연구소
 * @version 1.0.0
 */
public class Memory extends DataIO {
    private Logger log = Logger.getLogger(this.getClass());

    private int errorcode;
    private int total;
    private int used;

    public Memory() {

    }

    /**
     *
     * @param total
     */
    public void setTotal(int total) {
        this.total = total;
    }

    /**
     *
     * @param used
     */
    public void setUsed(int used) {
        this.used = used;
    }

    /**
     *
     * @return
     */
    public int getTotal() {
        return this.total;
    }

    /**
     *
     * @return
     */
    public int getUsed() {
        return this.used;
    }

    /**
     *
     * @return
     */

    public int getUsage() {
        if ( total == 0 ) return 0;
	 else return 100 *  this.used / this.total ;
    }


    /**
     *
     * @param field
     * @param value
     * @return
     */
    protected int setFieldData(String field, String value) {
        StringBuilder temp = new StringBuilder(field);
        if(compareFieldID(temp, "usage") == true) {
            return 0;
        }
        if(compareFieldID(temp, "total") == true) {
            if(!value.equals("")) total = Integer.valueOf(value);
            return 0;
        }
        if(compareFieldID(temp, "used") == true) {
            if(!value.equals("")) used = Integer.valueOf(value);
            return 0;
        }
        log.error("Memory - Not founded field :" + field);
        return(-1);
    }

    /**
     *
     * @param field
     * @param index
     * @param value
     * @param length
     * @return
     */
    protected int getFieldData(String field, Index idx, StringBuilder value) {
        boolean resultVal = false;
        StringBuilder fldAlias;
        if(field != null && !field.equals("")) resultVal = true;
        if(field == null) {  fldAlias = new StringBuilder(); fldAlias.append(""); }
        else {  fldAlias = new StringBuilder(); fldAlias.append(field); }

        if(compareFieldID(fldAlias, "total", idx, value) == true) {
            errorcode = getInteger(total, value);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "used", idx, value) == true) {
            errorcode = getInteger(used, value);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "usage", idx, value) == true) {
            errorcode = getInteger(getUsage(), value);
            if(resultVal || errorcode < 0) return errorcode;
        }
        return(0);
    }

}
