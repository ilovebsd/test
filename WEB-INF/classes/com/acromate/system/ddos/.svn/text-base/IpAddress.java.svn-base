/*
 * IpAddress.java
 *
 * Created on 2006년 10월 16일 (월), 오후 5:32
 * Copyright 2006 Acromate, Inc. All rights reserved.
 */

package com.acromate.system.ddos ;

import com.acromate.data.DataIO ;
import com.acromate.util.Console ;
import com.acromate.util.Logger;

/**
 *
 * @author 아크로메이트 기술연구소
 * @version 1.0.0
 */
public class IpAddress extends DataIO {
    private Logger log = Logger.getLogger(this.getClass());

    private int           errorcode;
    private StringBuilder id ;
    private StringBuilder ipAddress ;
    private StringBuilder port ;

    public IpAddress() {
        this.id    = new StringBuilder();
        this.ipAddress    = new StringBuilder();
        this.port    = new StringBuilder();
    }

    /**
     *
     * @return
     */

    public String getClassID() {
        return id.toString();
    }

    public void setClassID(String value) {
        this.id.delete(0, id.length());
        this.id.append(value) ;
    }

    public String getIpAddress() {
        return ipAddress.toString();
    }

    public void setIpAddress ( String value ) {
        this.ipAddress.delete(0, ipAddress.length());
        this.ipAddress.append(value) ;
    }

    public String getPort() {
        return port.toString();
    }

    public void setPort ( String value ) {
        this.port.delete(0, port.length());
        this.port.append(value) ;
    }

    protected int setFieldData(String field, String value) {
        StringBuilder temp = new StringBuilder(field);
        if(compareFieldID(temp, "ip") == true) {
            return setString(ipAddress, value);
        }
        if(compareFieldID(temp, "id") == true) {
            return setString(id, value);
        }
        if(compareFieldID(temp, "port") == true) {
            return setString(port, value);
        }
        log.error("IpAddress - Not founded field :" + field);
        return(-1);
    }

    /**
     *
     * @param field
     * @param index
     * @param value
     * @param length
     * @return
     */
    protected int getFieldData(String field, Index idx, StringBuilder value) {
        boolean resultVal = false;
        StringBuilder fldAlias;
        if(field != null && !field.equals("")) resultVal = true;
        if(field == null) {
            fldAlias = new StringBuilder(); fldAlias.append("");
        } else {
           fldAlias  = new StringBuilder(); fldAlias.append(field);
        }

        if(compareFieldID(fldAlias, "ip", idx, value) == true) {
            errorcode = getString(ipAddress.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "id", idx, value) == true) {
            errorcode = getString(id.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "port", idx, value) == true) {
            errorcode = getString(port.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        return(0);
    }

}
