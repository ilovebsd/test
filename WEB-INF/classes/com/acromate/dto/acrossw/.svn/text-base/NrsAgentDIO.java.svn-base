package com.acromate.dto.acrossw ;

import com.acromate.util.Logger;
import com.acromate.data.DataIO;
import com.acromate.util.Str;

public class NrsAgentDIO extends DataIO {
    private Logger log = Logger.getLogger(this.getClass());

    private int    errorcode;
    private int    inspectionPeriod ;
    private StringBuilder inspectionNumber = new StringBuilder();
    private NrsServerListDIO nrsServer = new NrsServerListDIO();

    public int    getInspectionPeriod() { return inspectionPeriod ; }
    public void   setInspectionPeriod( int inspectionPeriod ) { this.inspectionPeriod = inspectionPeriod ; }

    public String getInspectionNumber() { return inspectionNumber.toString() ; }
    public void   setInspectionNumber( String inspectionNumber ) {
        this.inspectionNumber.delete(0,inspectionNumber.length());
        this.inspectionNumber.append(inspectionNumber) ;
    }

    public NrsServerListDIO    getNrsServerDIO() { return nrsServer ; }
    public void   setNrsServerDIO( NrsServerListDIO nrsServer ) { this.nrsServer = nrsServer ; }


    protected int setFieldData(String field, String value) {
        StringBuilder temp = new StringBuilder(field.toLowerCase());
        if(compareFieldID(temp, "inspectionPeriod".toLowerCase()) == true) {
            if(!value.equals("")) inspectionPeriod = Str.CheckNullInt(value);
            return 0;
        }
        if(compareFieldID(temp, "inspectionNumber".toLowerCase()) == true) {
            return setString(inspectionNumber, value);
        }
        if(compareFieldID(temp, "nrsServer".toLowerCase()) == true) {
            return nrsServer.setParam(temp.toString(), value);
        }
        log.error("NrsAgentDIO - Not founded field :" + field);
        return 0;
    }

    protected int getFieldData(String field, Index idx, StringBuilder value) {
        boolean resultVal = false;
        StringBuilder fldAlias;
        if(field != null && !field.equals("")) resultVal = true;
        if(field == null) {
            fldAlias = new StringBuilder(); fldAlias.append("");
        } else {
           fldAlias  = new StringBuilder(); fldAlias.append(field);
        }
        if(compareFieldID(fldAlias, "inspectionPeriod", idx, value) == true) {
            errorcode = getInteger(inspectionPeriod, value);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "inspectionNumber", idx, value) == true) {
            errorcode = getString(inspectionNumber.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "nrsServer", idx, value) == true) {
            errorcode = nrsServer.getParam(fldAlias.toString(), value);
            if(resultVal || errorcode < 0) return errorcode;
        }
        return(0);
    }
}
