package com.acromate.dto.reporttool.templet ;

import com.acromate.util.Logger;
import com.acromate.data.DataIO;
import com.acromate.util.Str;

public class SystemDTO extends DataIO {
    private Logger log = Logger.getLogger(this.getClass());

    private int    errorcode;
    private StringBuilder id = new StringBuilder();
    private StringBuilder name = new StringBuilder();

    public String getId() { return id.toString() ; }
    public void   setId( String id ) {
        this.id.delete(0,id.length());
        this.id.append(id) ;
    }

    public String getName() { return name.toString() ; }
    public void   setName( String name ) {
        this.name.delete(0,name.length());
        this.name.append(name) ;
    }

    protected int setFieldData(String field, String value) {
        StringBuilder temp = new StringBuilder(field.toLowerCase());
        if(compareFieldID(temp, "id".toLowerCase()) == true) {
            return setString(id, value);
        }
        if(compareFieldID(temp, "name".toLowerCase()) == true) {
            return setString(name, value);
        }
        log.error("SystemDIO - Not founded field :" + field);
        return(-1);
    }

    protected int getFieldData(String field, Index idx, StringBuilder value) {
        boolean resultVal = false;
        StringBuilder fldAlias;
        if(field != null && !field.equals("")) resultVal = true;
        if(field == null) {
            fldAlias = new StringBuilder(); fldAlias.append("");
        } else {
           fldAlias  = new StringBuilder(); fldAlias.append(field);
        }
        if(compareFieldID(fldAlias, "id", idx, value) == true) {
            errorcode = getString(id.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "name", idx, value) == true) {
            errorcode = getString(name.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        return(0);
    }
}

