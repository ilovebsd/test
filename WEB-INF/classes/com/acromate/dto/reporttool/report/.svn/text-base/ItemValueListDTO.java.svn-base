package com.acromate.dto.reporttool.report;

import com.acromate.data.ListIO;
import com.acromate.data.DataIO;
import com.acromate.util.Str;

public class ItemValueListDTO extends ListIO {

    String itemName;

    public ItemValueListDTO() {}
    public void setItemName(String itemName) { this.itemName = itemName; }
    public String getItemName() { return itemName; }

    public String getClassID() {
        return itemName;
    }

    public DataIO getFieldObject(String field) {
        DataIO result = null;
        if(field != null && field.trim().length() > 0) {
            StringBuilder temp = new StringBuilder(field);
            if(compareFieldID(temp, itemName.toString())  == true) {
                return this;
            }
        }   return super.getFieldObject(field);
    }

    protected int setFieldData(String field, String value) {
        StringBuilder temp = new StringBuilder(field);
        if(compareFieldID(temp, "itemName") == true) {
            if(!value.equals("")) itemName = value;
            return 0;
        }
        return super.setFieldData( field,  value);
    }

    protected int getFieldData(String field, Index idx , StringBuilder value) {

        int errorcode = 0;
        boolean resultVal = false;
        StringBuilder fldAlias;
        if (field != null && !field.equals("")) {
            resultVal = true;
        }
        if (field == null) {
            fldAlias = new StringBuilder();
            fldAlias.append("");
        } else {
            fldAlias = new StringBuilder();
            fldAlias.append(field);
        }

        if(compareFieldID(fldAlias, "itemName", idx, value) == true) {
            errorcode = getString(itemName.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }

        return super.getFieldData(field, idx, value);
    }

    @Override
    protected DataIO newListNode() {
        return new ItemValueDTO();
    }

    public void removeAll() {
        list.clear();
    }
}
