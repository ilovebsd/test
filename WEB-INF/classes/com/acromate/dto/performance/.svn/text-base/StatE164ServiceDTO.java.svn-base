package com.acromate.dto.performance ;
import com.acromate.util.Str ;

public class StatE164ServiceDTO
{
    // Common
    public final static int COMMON_CTF = 3 ;
    public final static int COMMON_MBOX = 8 ;

    // ¹ß½Å  Caller
    public final static int OUT_OCS = 32 + 1 ;
    public final static int OUT_SCID = 32 + 2 ;
    public final static int OUT_MONO = 32 + 4 ;

    // Âø½Å Answer
    public final static int IN_TCS = 32 + 32 + 1 ;
    public final static int IN_SCID = 32 + 32 + 2 ;

    public final static int IN_CFW_DIRECT = 32 + 32 + 3 + 100;
    public final static int IN_CFW_NO_ANSWER = 32 + 32 + 3 + 200;
    public final static int IN_CFW_BUSY = 32 + 32 + 3 + 300;

    public final static int IN_MONO = 32 + 32 + 4;
    public final static int IN_ChINFO = 32 + 32 + 5;
    public final static int IN_DND = 32 + 32 + 6;
    public final static int IN_FORK = 32 + 32 + 7;
    public final static int IN_CALL_WAIT = 32 + 32 + 8;

    public final static int Add_MRBT = 5011;
    public final static int Add_MOH =  5031;
    public final static int Add_PICK_UP = 5051;
    public final static int Add_RCF_IN = 5381;
    public final static int Add_CONFRENCE = 5371;
    public final static int Add_RCF_OUT = 5391;

    //===============================

    private String SysGroupID = "" ;
    private String StartTime = "" ;

    private int    CTF = 0;
    private int    MBOX = 0;

    private int    OutOCS = 0;
    private int    OutSCID = 0;
    private int    InTCS = 0;
    private int    InSCID = 0;

    private int    InCFW = 0;
    private int    InWAIT = 0;

    private int    InChINFO = 0;
    private int    InDND = 0;
    private int    InFORK = 0;

    private int    AddMRBT = 0;
    private int    AddMOH = 0;
    private int    AddPickUp = 0;
    private int    AddRcfIn = 0;
    private int    AddConfrence = 0;
    private int    AddRcfOut = 0;

    public String getSysGroupID() { return this.SysGroupID; }
    public void   setSysGroupID(String SysGroupID ) { this.SysGroupID = SysGroupID; }

    public String getStartTime() { return this.StartTime; }
    public void   setStartTime(String StartTime ) { this.StartTime = StartTime; }

    public int getOutOCS() { return this.OutOCS; }
    public int getOutSCID() { return this.OutSCID; }
    public int getInTCS() { return this.InTCS; }
    public int getInSCID() { return this.InSCID; }
    public int getInCFW() { return this.InCFW; }
    public int getInWAIT() { return this.InWAIT; }
    public int getInChINFO() { return this.InChINFO; }
    public int getInDND() { return this.InDND; }
    public int getInFORK() { return this.InFORK; }
    public int getCTF() { return this.CTF; }
    public int getMBOX() { return this.MBOX; }
    public int getAddMOH() { return this.AddMOH; }
    public int getAddMRBT() { return this.AddMRBT; }
    public int getAddPickUp() { return this.AddPickUp; }
    public int getAddRcfIn() { return this.AddRcfIn; }
    public int getAddConfrence() { return this.AddConfrence; }
    public int getAddRcfOut() { return this.AddRcfOut; }

    public void clear() {
        OutOCS = 0;
        OutSCID = 0;
        InTCS = 0;
        InSCID = 0;
        InCFW = 0;
        InWAIT = 0;
        InChINFO = 0;
        InDND = 0;
        InFORK = 0;
        CTF = 0;
        MBOX = 0;
        AddMRBT = 0;
        AddMOH = 0;
        AddPickUp = 0;
        AddRcfIn = 0;
        AddConfrence = 0;
        AddRcfOut = 0;
    }

    public void setPlus ( String strService ) {
        int nService = Str.CheckNullInt(strService) ;
        switch ( nService ) {
            case COMMON_CTF : CTF++ ; break ;
            case COMMON_MBOX : MBOX++ ; break ;
            case OUT_OCS  : OutOCS++ ; break ;
            case OUT_SCID : OutSCID++ ; break ;

            case IN_TCS : InTCS++ ; break ;
            case IN_SCID : InSCID++ ; break ;

            case IN_CFW_DIRECT : InCFW++ ; break ;
            case IN_CFW_NO_ANSWER : InCFW++ ; break ;
            case IN_CFW_BUSY : InCFW++ ; break ;

            case IN_MONO : InWAIT++ ; break ;
            case IN_ChINFO : InChINFO++ ; break ;
            case IN_DND : InDND++ ; break ;
            case IN_FORK : InFORK++ ; break ;
            case IN_CALL_WAIT : break ;

            case Add_MRBT : AddMRBT++ ; break ;
            case Add_MOH : AddMOH++ ; break ;
            case Add_PICK_UP : AddPickUp++ ; break ;
            case Add_RCF_IN : AddRcfIn++ ; break ;
            case Add_CONFRENCE : AddConfrence++ ; break ;
            case Add_RCF_OUT : AddRcfOut++ ; break ;
        }
    }
}
