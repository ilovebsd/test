package com.acromate.dto.service.number.data ;

import com.acromate.framework.util.Str;
public class AnswerService
{
    public int nANSWER_CALL_LIMIT   = 0 ; //착신제한
    public int nANSWER_SCREEN_CID    = 0 ;//착신시 발신자 번호 표시
    public int nANSWER_CALL_FORWARD = 0 ;//호전환(1.무조건 지정번호 포워딩, 2.Table_Forward(1.무응답, 2.통화중), 3.무조건 음성사서함)
    public int nANSWER_MONO_CALL = 1 ;//통화중 대기
    public int nANSWER_CHANGE_NUMBER_INFO = 0 ;//번호변경
    public int nANSWER_DND    = 0 ;//DND
    public int nANSWER_CALL_FORKING    = 1 ;//포킹

    public int getCallLimit() { return this.nANSWER_CALL_LIMIT; }
    public void   setCallLimit( int nANSWER_CALL_LIMIT ) { this.nANSWER_CALL_LIMIT = nANSWER_CALL_LIMIT ; }

    public int getScreenCID() { return this.nANSWER_SCREEN_CID; }
    public void setScreenCID( int nANSWER_SCREEN_CID ) { this.nANSWER_SCREEN_CID = nANSWER_SCREEN_CID ; }

    public int getCallForward() { return this.nANSWER_CALL_FORWARD; }
    public void setCallForward( int nANSWER_CALL_FORWARD ) { this.nANSWER_CALL_FORWARD = nANSWER_CALL_FORWARD ; }

    public int getMonoCall() { return this.nANSWER_MONO_CALL; }
    public void setMonoCall ( int nANSWER_MONO_CALL ) { this.nANSWER_MONO_CALL = nANSWER_MONO_CALL; }

    public int getChangeCallNumberInfo() { return this.nANSWER_CHANGE_NUMBER_INFO; }
    public void setChangeCallNumberInfo ( int nANSWER_CHANGE_NUMBER_INFO ) { this.nANSWER_CHANGE_NUMBER_INFO = nANSWER_CHANGE_NUMBER_INFO; }

    public int getDND() { return this.nANSWER_DND; }
    public void setDND ( int nANSWER_DND ) { this.nANSWER_DND = nANSWER_DND; }

    public int getCallForking() { return this.nANSWER_CALL_FORKING; }
    public void setCallForking( int nANSWER_CALL_FORKING ) { this.nANSWER_CALL_FORKING = nANSWER_CALL_FORKING; }

    public String get64ByteString() {
        String answerService = "0000000000000000000000000000000000000000000000000000000000000000" ;
        String strCallLimit = String.valueOf( nANSWER_CALL_LIMIT ) ;
        String strScreenCID = String.valueOf( nANSWER_SCREEN_CID ) ;
        String strCallForward = String.valueOf( nANSWER_CALL_FORWARD ) ;
        String strMonoCall = String.valueOf( nANSWER_MONO_CALL ) ;
        String strChangeCallNumberInfo = String.valueOf( nANSWER_CHANGE_NUMBER_INFO ) ;
        String strDND = String.valueOf( nANSWER_DND ) ;
        String strCallForking = String.valueOf( nANSWER_CALL_FORKING ) ;
        answerService = answerService.substring(0,1) +
			strCallLimit +
			strScreenCID +
			strCallForward +
			strMonoCall +
			strChangeCallNumberInfo +
			strDND +
			strCallForking +
			answerService.substring(8,64) ;
        return answerService ;
    }

    public void  set64ByteString ( String answerService ) {
//    	if( answerService.length() < 63){
//    		System.out.println( "answerService.length() : "+answerService.length());
//    		answerService = "0000000000000000000000000000000000000000000000000000000000000000" ;
//    	}
        String strCallLimit = answerService.substring(1,2) ;
        String strScreenCID = answerService.substring(2,3) ;
        String strCallForward = answerService.substring(3,4) ;
        String strMonoCall = answerService.substring(4,5) ;
        String strChangeCallNumberInfo = answerService.substring(5,6) ;
        String strDND = answerService.substring(6,7) ;
        String strCallForking = answerService.substring(7,8) ;
        this.nANSWER_CALL_LIMIT = Str.CheckNullInt(strCallLimit) ;
        this.nANSWER_SCREEN_CID = Str.CheckNullInt(strScreenCID) ;
        this.nANSWER_CALL_FORWARD = Str.CheckNullInt(strCallForward) ;
        this.nANSWER_MONO_CALL = Str.CheckNullInt(strMonoCall) ;
        this.nANSWER_CHANGE_NUMBER_INFO = Str.CheckNullInt(strChangeCallNumberInfo) ;
        this.nANSWER_DND = Str.CheckNullInt(strDND) ;
        this.nANSWER_CALL_FORKING = Str.CheckNullInt(strCallForking) ;
    }

    public String toString()
    {
        StringBuffer sb = new StringBuffer("") ;
        sb.append("[nANSWER_CALL_LIMIT:"                  + getCallLimit() + "] ") ;
        sb.append("[nANSWER_SCREEN_CID:"       + getScreenCID() + "] ") ;
        sb.append("[nANSWER_CALL_FORWARD:"      + getCallForward() + "] ") ;
        sb.append("[nANSWER_MONO_CALL:"      + getMonoCall() + "] ") ;
        sb.append("[nANSWER_CHANGE_NUMBER_INFO:"      + getMonoCall() + "] ") ;
        sb.append("[nANSWER_CALL_FORWARD:"      + getChangeCallNumberInfo() + "] ") ;
        sb.append("[nANSWER_DND:"      + getDND() + "] ") ;
        sb.append("[nANSWER_CALL_FORKING:"      + getCallForking() + "] ") ;
        return sb.toString();
    }
}

