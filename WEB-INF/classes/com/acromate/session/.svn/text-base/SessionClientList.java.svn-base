package com.acromate.session;

import java.util.Collections;
import java.util.LinkedList;
import java.util.List;
import com.acromate.util.Logger;
import com.acromate.util.LabelObject;
import com.acromate.util.Str;

public class SessionClientList {
    List list = Collections.synchronizedList(new LinkedList());

    private Logger log = Logger.getLogger(this.getClass());
    public SessionClientList() {}

    public void addSessionClient(String groupID, SessionClient sessionClient) {
        LabelObject label = new LabelObject(sessionClient,groupID);
        list.add(label);
    }

    public SessionClient getSessionClient(String groupID) {
        LabelObject label = null;

        int labelSize = list.size();
        for ( int i=0; i<labelSize; i++ ) {
            label = (LabelObject)list.get(i);
            if ( label.getLabel().equals(groupID) ) {
                return (SessionClient)label.getObject();
            }
        }
        return null;
    }

    public SessionClient getSessionClientByPath(String systemPath) {
        LabelObject label = null;

        int labelSize = list.size();
        for ( int i=0; i<labelSize; i++ ) {
            label = (LabelObject)list.get(i);
            if ( systemPath.startsWith(Str.cover(label.getLabel()))) {
                return (SessionClient)label.getObject();
            }
        }
        return null;
    }

    public void removeSessionClient(String groupID) {
        LabelObject label = null;

        int labelSize = list.size();
        for ( int i=0; i<labelSize; i++ ) {
            label = (LabelObject)list.get(i);
            if ( label.getLabel().equals(groupID) ) {
                list.remove(i);
                return;
            }
        }
    }
    public void clear() {
    	list.clear();
    }
}
