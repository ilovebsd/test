/*
 * Console.java
 *
 * Created on 2006. 8. 17 7:32
 *
 * To change this template, choose Tools | Template Manager
 * and open the template in the editor.
 */

package com.acromate.util;

import java.util.Date;
import java.util.Locale;
import java.text.SimpleDateFormat;
import com.acromate.util.Logger;

/**
 *
 * @author Acromate Research Institute
 * @version 1.0.0
 */
public class Console {

    /**
     *
     * @param args
     * @return
     */
    private static String constructArgument(Object... args) {
        String message = "";
        for(int index = 0; index < args.length; index++) {
            message += "," + String.valueOf(args[index]);
        }   return message;
    }

    /**
     *  Display message value
     */
    private static void DisplayConsole(String message, int type) {
        SimpleDateFormat simpleFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.KOREAN);
        Date today = new Date();
        String output = simpleFormat.format(today);
        switch(type) {
            case 0:
                    System.out.println(output + " [notice] - " + message);
                    break;

            case 1:
                    System.out.println(output + " [ warn ] * " + message);
                    break;

            case 2:
                    System.out.println(output + " [ fatal] % " + message);
                    break;

            default:
                    System.out.println(output + " [ stop ] $ " + message);
        }
    }

    /**
     *
     * @param arg1
     */
    public static void DisplayConsole(StringBuilder arg1) {
        String message = arg1.toString();
        //if(SystemObject.getInstance().getNoticeTrace()) {
        if(true) {
            Console.DisplayConsole(message, 0);
        }
    }

    /**
     *  Display message value
     */
    public static void DisplayConsole(String arg) {
//        if(SystemObject.getInstance().getNoticeTrace()) {
        if(true) {
            Console.DisplayConsole(arg, 0);
        }
    }

    /**
     *  Display message value
     */
    public static void DisplayConsole(Object... args) {
 //       if(SystemObject.getInstance().getNoticeTrace()) {
        if(true) {
           String message= constructArgument(args);
            Console.DisplayConsole(message, 0);
        }
    }

    /**
     *  Display warning
     */
    public static void DisplayWarning(String arg) {
//        if(SystemObject.getInstance().getWarningTrace()) {
        if(true) {
            Console.DisplayConsole(arg, 1);
        }
    }

    /**
     *
     * @param args
     */
    public static void DisplayWarning(Object... args) {
//        if(SystemObject.getInstance().getWarningTrace()) {
        if(true) {
            String message = constructArgument(args);
            Console.DisplayConsole(message, 1);
        }
    }

    /**
     *  Display warning
     */
    public static void DisplayFatal(String arg) {
//        if(SystemObject.getInstance().getFatalTrace()) {
        if(true) {
            Console.DisplayConsole(arg, 2);
        }
    }

    /**
     *
     * @param args
     */
    public static void DisplayFatal(Object... args) {
//       if(SystemObject.getInstance().getFatalTrace()) {
        if(true) {
           String message = constructArgument(args);
           Console.DisplayConsole(message, 2);
       }
    }

    /**
     *  Display warning
     */
    public static void DisplayStop(String arg) {
//        if(SystemObject.getInstance().getStoppingTrace()) {
        if(true) {
            Console.DisplayConsole(arg, 3);
        }
    }

    /**
     *
     * @param args
     */
   public static void DisplayStop(Object... args) {
//        if(SystemObject.getInstance().getStoppingTrace()) {
        if(true) {
           String message = constructArgument(args);
           Console.DisplayConsole(message, 3);
        }
   }
}
