/*
 * TextFile.java
 *
 * Created on 2006년 9월 30일 (토), 오후 12:02
 * Copyright 2006 Acromate, Inc. All rights reserved.
 */

package com.acromate.framework.data.file;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;

/**
 *
 * @author 아크로메이트 기술연구소
 * @version 1.0.0
 */
public class TextFile extends GeneralFile {
    private BufferedReader bufferedReader ;
    private BufferedWriter bufferedWriter ;

    /** File read/write buffers */
    protected ArrayList<String> buffers;
    /**
     * TextFile constructor - String fileName
     * @param fileName
     */
    public TextFile() {
        this.buffers = new ArrayList<String>();
    }

    /**
     * Returns saving file buffer
     * @return
     */
    public ArrayList<String> getBuffer() {
        return buffers;
    }

    /**
     * Reading buffer from exists file
     * @return
     */
    public boolean load(String fileName) {
        BufferedReader reader = null;
        try {
        	File file = new File(fileName);
            reader = new BufferedReader(new FileReader(file));
            String readData = null;
            while((readData = reader.readLine()) != null) {
                readData.trim();
                buffers.add(readData);
            }
        } 
        catch (IOException ex){ 
         	return false;
        } finally {
            if(reader != null) {
                try { 
                	reader.close(); 
                }catch(IOException ex){}
            }
        }
        return true;
    }

    /**
     * 
     * @param fileName
     * @return
     */
    public BufferedReader readOpen(String fileName) {
        try {
            bufferedReader = new BufferedReader(new FileReader(fileName));
        } catch (IOException ex) { 
        	return null;
        }
        return bufferedReader;
    }

    /**
     * 
     * @param fileName
     * @return
     */
    public BufferedWriter writerOpen(String fileName) {
        try {
            bufferedWriter = new BufferedWriter(new FileWriter(fileName));
        } catch (IOException ex) { 
        	return null;
        }
        return bufferedWriter;
    }

    /**
     * 
     */
    public void readClose() {
        if(bufferedReader != null) {
            try { 
            	bufferedReader.close(); 
            } catch (IOException ex){
            }
        }
        return ;
    }

    /**
     * 
     */
    public void writeClose() {
        if(bufferedWriter != null) {
            try { 
            	bufferedWriter.close(); 
            } catch (IOException ex){ 
            }
        }
        return ;
    }

    /**
     * Saving buffer data to file
     * @return
     */
    public boolean save(String fileName) {
        BufferedWriter writer = null;
        try {
            writer = new BufferedWriter(new FileWriter(fileName));
            Iterator<?> iter = buffers.iterator();
            while(iter.hasNext()) {
                writer.write((String)iter.next()+"\n");
            }
        } catch (IOException ex) {
            return false;
        } finally {
            if(writer != null) {
                try { 
                	writer.close(); 
                } catch (IOException ex) { 
                }
                return false;
            }
        }
        return true;
    }
}

