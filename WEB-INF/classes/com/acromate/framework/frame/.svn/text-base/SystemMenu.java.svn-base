package com.acromate.framework.frame;

import com.acromate.data.DataIO;
import com.acromate.data.DataIO.Index;
import com.acromate.data.code.AppCode;
import com.acromate.framework.util.Str;

/* /////////////////////////////////////////////////////////////////////// */
/* ems system menu */
/* system menu //////////////////////// */
public class SystemMenu extends DataIO
{
	// construction
	public SystemMenu( ) {
		lstMenuSet.pSystemMenu = this ;
		systemName = new StringBuilder();
	}
	public SystemMenu(String pSystemID) {
		if(pSystemID == null){
			systemID = null;
		}
		else systemID = new StringBuilder(pSystemID);
		lstMenuSet.pSystemMenu = this ;
		systemName = new StringBuilder();
	}

// attribute
	protected StringBuilder systemID;
	protected StringBuilder systemName;
	// menus
	public MenuSetList		lstMenuSet = new MenuSetList();

	// class data i/o
	public int getFieldData( String field, Index indx, StringBuilder value ) {
		boolean stop = (field != null) ;
		int  errcode ;
		StringBuilder sbfield = new StringBuilder(field);
		if   ( compareFieldID( sbfield, "name", indx, value ) )
		{    errcode = getString( systemID.toString(), value, ! stop ) ;
		     if   ( stop || errcode != AppCode.ERR_NOERROR )	return errcode ;
		}
		if   ( compareFieldID( sbfield, "menu", indx, value) )
		{    errcode = lstMenuSet.getParam( sbfield.toString(), value) ;
		     if   ( stop || errcode != AppCode.ERR_NOERROR )	return errcode ;
		}
		if   ( compareFieldID( sbfield, "systemName", indx, value) )
		{    errcode = getString( Str.CheckNullString(systemName), value, ! stop ) ;
		     if   ( stop || errcode != AppCode.ERR_NOERROR )	return errcode ;
		}
		return AppCode.ERR_NOERROR ;

	}
	public int setFieldData( String field, String value ) {
		System.out.println("SystemMenu.setFieldData ["+field+"]"+"["+value+"]");
		StringBuilder sbfield = new StringBuilder(field);
		if   ( compareFieldID( sbfield, "menu" ) )
		{    return lstMenuSet.setParam( field, value ) ;
		}
		if   ( compareFieldID( sbfield, "name" ) )
		{    return setString( systemID, value ) ;
		}
		if   ( compareFieldID( sbfield, "systemName" ) )
		{    return setString( systemName, value ) ;
		}
		return (AppCode.ERR_MEMBER_IO | AppCode.ERR_UNDEFINED_MEMBER) ;	}
	// object identifier
	public String getSystemID()	{ if(systemID != null)return systemID.toString(); else return null; }
	public String getClassID()	{ return getSystemID() ; }
	// object member
	public DataIO getFieldObject( String field ) {
		StringBuilder sbfield = new StringBuilder(field);
		if   ( compareFieldID( sbfield, "menu" ) )
		     return lstMenuSet.getFieldObject( sbfield.toString() ) ;
		return super.getFieldObject( field ) ;

	}
	// menu control
	public MenuSet getMenuHead()	{ return (MenuSet)lstMenuSet.getHead() ; }
	public MenuSet getMenuTail()	{ return (MenuSet)lstMenuSet.getTail() ; }
	public MenuSet searchMenuSet( String pMenuID ) {
		MenuSet pMenuSet = null;
		if( pMenuID != null){
			for(int i=0 ; i < lstMenuSet.getCount() ; i++){
				pMenuSet = (MenuSet)lstMenuSet.getNode(i);
				if(pMenuID.equals(pMenuSet.getMenuID())) return pMenuSet;
			}

		}
		// search most reliable menu set
		for(int i=0 ; i < lstMenuSet.getCount() ; i++){
			pMenuSet = (MenuSet)lstMenuSet.getNode(i);
			if(pMenuID.equals(pMenuSet.getMenuID())) return pMenuSet;
		}
		return null;
	}

	public void appendMenuSet( MenuSet pMenuSet ) {
		if   ((pMenuSet.getMenuID())!= null )
		     lstMenuSet.appendTail( pMenuSet ) ;
		else lstMenuSet.appendHead( pMenuSet ) ;

	}
	public void removeMenuSet( MenuSet pMenuSet ) { lstMenuSet.removeNode( pMenuSet ) ; }


}
