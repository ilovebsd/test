
package com.acromate.client;

import java.util.*;
import java.sql.*;
import java.rmi.*;
import com.acromate.server.*;

public class DataDriver implements java.sql.Driver{
	 
	static IRemoteDriver remoteDriver = null; 
	private static final String URL_PREFIX = "jdbc:DataDriver:";
	
	private static final int MAJOR_VERSION = 1;
	private static final int MINOR_VERSION = 0;
	private static String activeUser = "";
	
	/*******************************************************************
	 * 
	 */
	static
	{
		try {			
			DataDriver driverInst = new DataDriver();
			DriverManager.registerDriver(driverInst);			
		}
		catch(Exception e) {}
	}

	/*******************************************************************
	 * 
	 * @return
	 */
	public static String getURLPrefix()
	{
		return URL_PREFIX;
	}
	
	/*******************************************************************
	 * 
	 */
	public Connection connect(String url, Properties loginProp)
			throws SQLException
	{	
		DataConnection localConInstance = null;		
		if(acceptsURL(url))
		{			
			try
			{	
				//------------------------------------------------------------------------------------------
				//2006.03.13 유저 구분 코드 추가				
				activeUser = loginProp.getProperty("userid");							
				String serverName = url.substring(URL_PREFIX.length(),url.length());								
				connectRemote(serverName);
				IRemoteConnection remoteConInstance = (IRemoteConnection)remoteDriver.getConnection(activeUser);				
				localConInstance = new DataConnection(remoteConInstance);
			}
			catch(RemoteException ex)
			{	
				throw(new SQLException(ex.getMessage()));
			}
			catch(Exception ex)
			{
				throw(new SQLException(ex.getMessage()));
			}
		}
					
		return (Connection)localConInstance;
	}
	
	/*******************************************************************
	 * 
	 * @param serverName
	 * @throws Exception
	 */
	private void connectRemote(String serverName) throws Exception
	{
		try
		{				
			if(remoteDriver == null)
			{	
				remoteDriver = (IRemoteDriver)Naming.lookup("rmi://192.168.1.135:1099/acromate");
			}
		}
		catch(Exception ex)
		{ 
			throw ex;
		}
	}

	/*******************************************************************
	 * 
	 */
	public boolean acceptsURL(String url)
		   throws SQLException
	{						
		return url.startsWith(URL_PREFIX);
	}	

	/*******************************************************************
	 * 
	 */
	public int getMajorVersion()
	{
		return MAJOR_VERSION;
	}

	/*******************************************************************
	 * 
	 */
	public int getMinorVersion()
	{
		return MINOR_VERSION;
	}

	/*******************************************************************
	 * 
	 */
	public java.sql.DriverPropertyInfo[] getPropertyInfo(String url,Properties loginProps)
		throws SQLException
	{
		return new DriverPropertyInfo[0];
	}

	/*******************************************************************
	 * 
	 */
	public boolean jdbcCompliant()
	{
		return false;
	}	
}
