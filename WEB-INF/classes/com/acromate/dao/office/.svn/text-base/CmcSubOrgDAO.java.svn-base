package com.acromate.dao.office;


import com.acromate.dto.office.CmcSubOrgDTO;
import com.acromate.db.QueryStatement ;
import java.util.ArrayList;
import com.acromate.util.Str;
import java.sql.ResultSet;
import java.util.Hashtable;
import com.acromate.util.Logger;




public class CmcSubOrgDAO {
    private Logger log = Logger.getLogger(this.getClass());

    private CmcSubOrgDTO cmcSubOrgDTO ;
    Hashtable hConditionValue;
    QueryStatement statement ;

    public CmcSubOrgDAO() {}

    public CmcSubOrgDAO(Hashtable hConditionValue) {
        this.hConditionValue = hConditionValue;
    }

    public CmcSubOrgDAO(CmcSubOrgDTO cmcSubOrgDTO) {
        this.cmcSubOrgDTO = cmcSubOrgDTO;
    }

    public CmcSubOrgDAO( QueryStatement statement, CmcSubOrgDTO cmcSubOrgDTO ) {
        this.statement = statement ;
        this.cmcSubOrgDTO = cmcSubOrgDTO ;
    }


    public CmcSubOrgDTO getDTO(QueryStatement statement , String subOrgID) {    //detail 정보 = info 정보임
        ArrayList list = new ArrayList();
        CmcSubOrgDTO cmcSubOrgDTO = null;
        ResultSet rs = null;

        try {
            String queryString = "SELECT subOrgID, subOrgName, groupID, useFlag ";
            queryString += " From Table_CmcSubOrg Where subOrgID ='"+ subOrgID +"'";

            log.info(queryString) ;
            rs = statement.executeQuery(queryString) ;

            if ( rs.next() )  {
                cmcSubOrgDTO = new CmcSubOrgDTO() ;
                cmcSubOrgDTO.setSubOrgID(Str.CheckNullString(rs.getString(1)));
                cmcSubOrgDTO.setSubOrgName(Str.CheckNullString(rs.getString(2)));
                cmcSubOrgDTO.setGroupID(Str.CheckNullString(rs.getString(3)));
                cmcSubOrgDTO.setUseFlag(rs.getInt(4));
                list.add(cmcSubOrgDTO) ;
            }
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }

        return cmcSubOrgDTO;
    }

    public ArrayList getList(QueryStatement statement ) {
        ArrayList list = new ArrayList();
        CmcSubOrgDTO cmcSubOrgDTO = null;
        ResultSet rs = null;

        try {
            String queryString = "SELECT subOrgID, subOrgName, groupID, useFlag ";
            queryString += " From Table_CmcSubOrg ";

            log.info(queryString) ;
            rs = statement.executeQuery(queryString) ;

            while ( rs.next() )  {
                cmcSubOrgDTO = new CmcSubOrgDTO() ;
                cmcSubOrgDTO.setSubOrgID(Str.CheckNullString(rs.getString(1)));
                cmcSubOrgDTO.setSubOrgName(Str.CheckNullString(rs.getString(2)));
                cmcSubOrgDTO.setGroupID(Str.CheckNullString(rs.getString(3)));
                cmcSubOrgDTO.setUseFlag(rs.getInt(4));
                list.add(cmcSubOrgDTO) ;
            }
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }

        return list;
    }

    public boolean insert ( QueryStatement statement, CmcSubOrgDTO cmcSubOrgDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString =  " INSERT INTO Table_CmcSubOrg ";
            queryString += " (subOrgID, subOrgName, groupID, useFlag) ";
            queryString += " VALUES (" ;
            queryString += " '"+cmcSubOrgDTO.getSubOrgID()+"', ";
            queryString += " '"+cmcSubOrgDTO.getSubOrgName()+"', ";
            queryString += " '"+cmcSubOrgDTO.getGroupID()+"', ";
            queryString += "  "+cmcSubOrgDTO.getUseFlag()+")";

            log.info(queryString) ;
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }

    public boolean update ( QueryStatement statement, CmcSubOrgDTO cmcSubOrgDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
            //    return false;
            }

            queryString = " UPDATE Table_CmcSubOrg SET ";
            queryString += " subOrgName = '"+ cmcSubOrgDTO.getSubOrgName()+"', ";
            queryString += " groupID = '"+ cmcSubOrgDTO.getGroupID()+"', ";
            queryString += " useFlag = "+ cmcSubOrgDTO.getUseFlag()+" ";
            queryString += " WHERE subOrgID = '" + cmcSubOrgDTO.getSubOrgID() + "' ";
            count = statement.executeUpdate(queryString);
            log.info(queryString) ;
        } catch (Exception e) {
            log.error("exception occurred > ", e);
        //    return false;
        }
        return true ;
    }

    public boolean delete( QueryStatement statement,  CmcSubOrgDTO cmcSubOrgDTO) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            queryString = " DELETE FROM Table_CmcSubOrg WHERE subOrgID = '" + cmcSubOrgDTO.getSubOrgID()+ "' " ;
            count = statement.executeUpdate(queryString);
            log.info(queryString) ;
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }

    public boolean deleteAll( QueryStatement statement ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            queryString = " DELETE FROM Table_CmcSubOrg " ;
            count = statement.executeUpdate(queryString);
            log.info(queryString) ;
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }
}
