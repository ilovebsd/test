package com.acromate.dao.office ;

import java.sql.ResultSet;
import java.util.ArrayList;

import com.acromate.db.QueryStatement;
import com.acromate.dto.office.DeptNumberDTO;
import com.acromate.dto.office.DeptDTO;
import com.acromate.util.Str;

public class DeptNumberDAO {

    public DeptNumberDAO() {}

    public ArrayList getList(QueryStatement statement, int nDeptID ){
        ArrayList list = new ArrayList() ;
        DeptNumberDTO deptNumberDTO = null ;
        ResultSet rs = null ;
        String strWhere =  " " ;

        try {
            String queryString = "SELECT  E164, OrderNumber,Representation,Options  " ;
            queryString += " From Table_DeptNumber   " ;
            queryString += " DeptID = "+ nDeptID +"  " ;
            queryString  =  " order by OrderNumber asc  ";

            rs = statement.executeQuery(queryString) ;

            while ( rs.next() )  {
            	deptNumberDTO = new DeptNumberDTO() ;
            	deptNumberDTO.setDeptID(nDeptID);
            	deptNumberDTO.setE164(Str.CheckNullString(rs.getString(1)));
            	deptNumberDTO.setOrderNumber(rs.getInt(2));
            	deptNumberDTO.setRepresentation(Str.CheckNullString(rs.getString(3)));
            	deptNumberDTO.setOptions(rs.getInt(4));
              list.add(deptNumberDTO) ;
            }
        } catch(Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { e.printStackTrace(); }
        }

        return list ;
    }

    public DeptNumberDTO getDTO( QueryStatement statement, int nDeptID,  String E164 ) {
        DeptNumberDTO deptNumberDTO = null ;
        ResultSet rs = null ;

        try {
            String queryString = "SELECT  OrderNumber,Representation,Options  " ;
            queryString += " From Table_DeptNumber   " ;
            queryString += " DeptID = "+ nDeptID +" and " ;
            queryString += " E164 = '" + E164 + "' " ;

            rs = statement.executeQuery(queryString) ;
            System.out.println(queryString) ;

            while ( rs.next() )  {
            	deptNumberDTO = new DeptNumberDTO() ;
            	deptNumberDTO.setDeptID(nDeptID);
            	deptNumberDTO.setE164(E164);
            	deptNumberDTO.setOrderNumber(rs.getInt(1));
            	deptNumberDTO.setRepresentation(Str.CheckNullString(rs.getString(2)));
            	deptNumberDTO.setOptions(rs.getInt(3));
            }
        } catch(Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { e.printStackTrace(); }
        }

        return deptNumberDTO ;
    }

    public int getCount ( QueryStatement statement,  DeptNumberDTO deptNumberDTO  ) {
        int  nCount =  0 ;
        ResultSet rs = null ;

        try {
            String queryString = "SELECT  count(*) From Table_BuddyList " ;
            queryString += " WHERE DeptID = " + deptNumberDTO.getDeptID() +" " ;
            queryString += " AND E164 = '" + deptNumberDTO.getE164()+"'  " ;

            rs = statement.executeQuery(queryString) ;

            if ( rs.next() )  nCount = rs.getInt(1);
        } catch(Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { e.printStackTrace(); }
        }
        return nCount ;
    }

    public boolean insert ( QueryStatement statement, DeptNumberDTO deptNumberDTO ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            count = getCount(statement, deptNumberDTO) ;
            if (count > 0) return false;

            queryString = " INSERT INTO Table_DeptNumber ( DeptID,E164,OrderNumber,Representation,Options ) ";
            queryString += " VALUES (" + deptNumberDTO.getDeptID() + ", " ;
            queryString += " '" + deptNumberDTO.getE164() +"', " ;
            queryString += " " + deptNumberDTO.getOrderNumber()+", " ;
            queryString += " '" + deptNumberDTO.getRepresentation()+"', " ;
            queryString += "  " + deptNumberDTO.getOptions() +" ) " ;

            System.out.println(queryString) ;

            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
        return true ;
    }

    public boolean delete( QueryStatement statement,DeptNumberDTO deptNumberDTO ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString = " DELETE FROM Table_DeptNumber WHERE DeptID = " + deptNumberDTO.getDeptID()+ " " ;
            queryString += " AND E164 =  '" + deptNumberDTO.getE164() + "' " ;

            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
        return true ;
    }

}
