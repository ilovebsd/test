package com.acromate.dao.office;

import com.acromate.dto.office.WorkDeptDTO;
import com.acromate.db.QueryStatement ;
import java.util.ArrayList;
import com.acromate.util.Str;
import java.sql.ResultSet;
import com.acromate.util.Logger;


public class WorkDeptDAO {
    private Logger log = Logger.getLogger(this.getClass());

    private WorkDeptDTO workDeptDTO ;
    QueryStatement statement ;

    public WorkDeptDAO() {}

    public WorkDeptDAO( QueryStatement statement, WorkDeptDTO workDeptDTO ) {
        this.statement = statement ;
        this.workDeptDTO = workDeptDTO ;
    }


    public WorkDeptDTO getDTO(QueryStatement statement, String strSubscriberID, String strDeptID, String strSubOrgID) {
        ArrayList list = new ArrayList();
        WorkDeptDTO workDeptDTO = null;
        ResultSet rs = null;

        String strWhere = " where 1 = 1 ";

        strWhere += " AND dept.subscriberID = '"+strSubscriberID+"' ";
        strWhere += " AND dept.deptID = '"+strDeptID+"' ";
        strWhere += " AND dept.SubOrgID = '"+strSubOrgID+"' ";

        try {
            String queryString = "SELECT dept.subscriberID, dept.deptID, dept.idType, dept.subOrgID, dept.name, cmcdept.deptName, cmcdept.subOrgName, dept.position, dept.duty, dept.changeTime ";
            queryString += " From Table_WorkDept dept Join table_cmcdept cmcdept on cmcdept.SubOrgID = dept.SubOrgID  and cmcdept.DeptID = dept.DeptID ";
            queryString += strWhere ;

            log.info(queryString) ;
            rs = statement.executeQuery(queryString) ;


            if ( rs.next() )  {
                workDeptDTO = new WorkDeptDTO() ;

                workDeptDTO.setSubscriberID(Str.CheckNullString(rs.getString(1)));
                workDeptDTO.setDeptID(Str.CheckNullString(rs.getString(2)));
                workDeptDTO.setIdType(rs.getInt(3));
                workDeptDTO.setSubOrgID(Str.CheckNullString(rs.getString(4)));
                workDeptDTO.setName(Str.CheckNullString(rs.getString(5)));
                workDeptDTO.setDeptName(Str.CheckNullString(rs.getString(6)));
                workDeptDTO.setSubOrgName(Str.CheckNullString(rs.getString(7)));
                workDeptDTO.setPosition(Str.CheckNullString(rs.getString(8)));
                workDeptDTO.setDuty(Str.CheckNullString(rs.getString(9)));
                workDeptDTO.setChangeTime(Str.CheckNullString(rs.getString(10)));
            }
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }

        return workDeptDTO;
    }

    public WorkDeptDTO getDTO_NAME(QueryStatement statement, String strName, String strDeptID, String strSubOrgID) {
        ArrayList list = new ArrayList();
        WorkDeptDTO workDeptDTO = null;
        ResultSet rs = null;

        String strWhere = " where  dept.Name = '"+strName+"' ";
        strWhere += " AND dept.deptID = '"+strDeptID+"' ";
        strWhere += " AND dept.subOrgID = '"+strSubOrgID+"' ";

        try {
            String queryString = "SELECT dept.subscriberID, dept.deptID, dept.idType, dept.subOrgID, dept.name, cmcdept.deptName, cmcdept.subOrgName, dept.position, dept.duty, dept.changeTime ";
            queryString += " From Table_WorkDept dept Join table_cmcdept cmcdept on cmcdept.SubOrgID = dept.SubOrgID  and cmcdept.DeptID = dept.DeptID ";
            queryString += strWhere ;

            System.out.println(queryString) ;
            rs = statement.executeQuery(queryString) ;


            if ( rs.next() )  {
                workDeptDTO = new WorkDeptDTO() ;

                workDeptDTO.setSubscriberID(Str.CheckNullString(rs.getString(1)));
                workDeptDTO.setDeptID(Str.CheckNullString(rs.getString(2)));
                workDeptDTO.setIdType(rs.getInt(3));
                workDeptDTO.setSubOrgID(Str.CheckNullString(rs.getString(4)));
                workDeptDTO.setName(Str.CheckNullString(rs.getString(5)));
                workDeptDTO.setDeptName(Str.CheckNullString(rs.getString(6)));
                workDeptDTO.setSubOrgName(Str.CheckNullString(rs.getString(7)));
                workDeptDTO.setPosition(Str.CheckNullString(rs.getString(8)));
                workDeptDTO.setDuty(Str.CheckNullString(rs.getString(9)));
                workDeptDTO.setChangeTime(Str.CheckNullString(rs.getString(10)));
            }
        } catch(Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { e.printStackTrace(); }
        }

        return workDeptDTO;
    }

    public ArrayList getDTO_NAME ( QueryStatement statement ) {
        ArrayList list = new ArrayList();
        WorkDeptDTO workDeptDTO = null;
        ResultSet rs = null;

        try {
            String queryString = "SELECT subscriberID, deptID, idType, subOrgID, name, deptName, subOrgName, position, duty, changeTime ";
            queryString += " From Table_WorkDept ";

            System.out.println(queryString) ;
            rs = statement.executeQuery(queryString) ;


            while ( rs.next() )  {
                workDeptDTO = new WorkDeptDTO() ;

                workDeptDTO.setSubscriberID(Str.CheckNullString(rs.getString(1)));
                workDeptDTO.setDeptID(Str.CheckNullString(rs.getString(2)));
                workDeptDTO.setIdType(rs.getInt(3));
                workDeptDTO.setSubOrgID(Str.CheckNullString(rs.getString(4)));
                workDeptDTO.setName(Str.CheckNullString(rs.getString(5)));
                workDeptDTO.setDeptName(Str.CheckNullString(rs.getString(6)));
                workDeptDTO.setSubOrgName(Str.CheckNullString(rs.getString(7)));
                workDeptDTO.setPosition(Str.CheckNullString(rs.getString(8)));
                workDeptDTO.setDuty(Str.CheckNullString(rs.getString(9)));
                workDeptDTO.setChangeTime(Str.CheckNullString(rs.getString(10)));
                list.add(workDeptDTO) ;
            }
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }

        return list;
    }

    public ArrayList getList(QueryStatement statement) {
        ArrayList list = new ArrayList();
        WorkDeptDTO workDeptDTO = null;
        ResultSet rs = null;

        try {
            String queryString = "SELECT subscriberID, deptID, idType, subOrgID, name, deptName, subOrgName, position, duty, changeTime ";
            queryString += " From Table_WorkDept ";

            log.info(queryString) ;
            rs = statement.executeQuery(queryString) ;


            while ( rs.next() )  {
                workDeptDTO = new WorkDeptDTO() ;

                workDeptDTO.setSubscriberID(Str.CheckNullString(rs.getString(1)));
                workDeptDTO.setDeptID(Str.CheckNullString(rs.getString(2)));
                workDeptDTO.setIdType(rs.getInt(3));
                workDeptDTO.setSubOrgID(Str.CheckNullString(rs.getString(4)));
                workDeptDTO.setName(Str.CheckNullString(rs.getString(5)));
                workDeptDTO.setDeptName(Str.CheckNullString(rs.getString(6)));
                workDeptDTO.setSubOrgName(Str.CheckNullString(rs.getString(7)));
                workDeptDTO.setPosition(Str.CheckNullString(rs.getString(8)));
                workDeptDTO.setDuty(Str.CheckNullString(rs.getString(9)));
                workDeptDTO.setChangeTime(Str.CheckNullString(rs.getString(10)));
                list.add(workDeptDTO) ;
            }
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }

        return list;
    }

    public boolean insert ( QueryStatement statement, WorkDeptDTO workDeptDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            ResultSet rs = null;
            if (workDeptDTO.getDeptID().length() == 0) workDeptDTO.setDeptID("  ") ;
            queryString = " SELECT count(*) From Table_WorkDept " ;
            queryString += " where subscriberID = '"+workDeptDTO.getSubscriberID() + "' and DeptID = '"+workDeptDTO.getDeptID()+"' AND SubOrgID = '"+workDeptDTO.getSubOrgID()+"' ";
            log.info(queryString);
            rs = statement.executeQuery(queryString) ;
            if (rs.next()) count = rs.getInt(1);
            rs.close() ;

            if ( count > 0 ) {
                return update(statement, workDeptDTO);
            }

            queryString =  " INSERT INTO Table_WorkDept ";
            queryString += " (subscriberID, deptID, idType, subOrgID, name, deptName, subOrgName, position, duty, changeTime ) ";
            queryString += " VALUES (" ;
            queryString += "  '"+workDeptDTO.getSubscriberID()+"', ";
            queryString += " '"+workDeptDTO.getDeptID()+"', ";
            queryString += "  "+workDeptDTO.getIdType()+", ";
            queryString += " '"+workDeptDTO.getSubOrgID()+"', ";
            queryString += " '"+workDeptDTO.getName()+"', ";
            queryString += " '"+workDeptDTO.getDeptName()+"', ";
            queryString += " '"+workDeptDTO.getSubOrgName()+"', ";
            queryString += " '"+workDeptDTO.getPosition()+"', ";
            queryString += " '"+workDeptDTO.getDuty()+"', ";
            queryString += " sysdate) ";

            log.info(queryString) ;
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            System.exit(0);
            return false;
        }
        return true ;
    }

    public boolean update( QueryStatement statement, WorkDeptDTO workDeptDTO  ) {
        String queryString = "";
        try {
            if (statement == null) {
                return false;
            }
            if (workDeptDTO.getDeptID().length() == 0) workDeptDTO.setDeptID("  ") ;

            queryString = " UPDATE Table_WorkDept SET ";
            queryString += " idType = " + workDeptDTO.getIdType() + ", ";
            queryString += " subOrgID = '"+ workDeptDTO.getSubOrgID()+"', ";
            queryString += " name = '"+ workDeptDTO.getName()+"', ";
            queryString += " deptName = '"+ workDeptDTO.getDeptName()+"', ";
            queryString += " subOrgName = '"+ workDeptDTO.getSubOrgName()+"', ";
            queryString += " position = '"+ workDeptDTO.getPosition()+"', ";
            queryString += " duty = '"+ workDeptDTO.getDuty()+"', ";
            queryString += " changeTime = sysdate ";
            queryString += " WHERE subscriberID = '" + workDeptDTO.getSubscriberID() + "' ";
            queryString += " AND deptID = '" + workDeptDTO.getDeptID() + "' " ;
            statement.executeUpdate(queryString);
            log.info(queryString) ;
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }

    public boolean delete( QueryStatement statement,  WorkDeptDTO workDeptDTO) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            if (workDeptDTO.getDeptID().length() == 0) workDeptDTO.setDeptID("  ") ;

            queryString = " DELETE FROM Table_WorkDept WHERE subscriberID = '" + workDeptDTO.getSubscriberID()+ "' " ;
            queryString += " AND deptID = '" + workDeptDTO.getDeptID() + "' " ;
            queryString += " AND SubOrgID = '" + workDeptDTO.getSubOrgID() + "' " ;
            count = statement.executeUpdate(queryString);
            log.info(queryString) ;
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }

    public boolean deleteAllSubOrg( QueryStatement statement, String strSubOrgID ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            queryString = " DELETE FROM Table_WorkDept WHERE SubOrgID = '" + strSubOrgID + "' ";
            count = statement.executeUpdate(queryString);
            System.out.println(queryString) ;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
        return true ;
    }

}
