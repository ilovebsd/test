package com.acromate.dao.office;

import java.sql.ResultSet;
import java.util.ArrayList;

import com.acromate.db.QueryStatement;
import com.acromate.dto.office.BuddyListDTO;
import com.acromate.dto.office.DeptDTO;
import com.acromate.util.Str;
import com.acromate.util.Logger;



public class BuddyListDAO {
    private Logger log = Logger.getLogger(this.getClass());

    private BuddyListDTO buddyListDTO ;
    QueryStatement statement ;

    public BuddyListDAO() {}

    public BuddyListDAO( QueryStatement statement, BuddyListDTO buddyListDTO ) {
        this.statement = statement ;
        this.buddyListDTO = buddyListDTO ;
    }

    public int getMax ( QueryStatement statement ) {
        int  nMax =  0 ;
        ResultSet rs = null ;

        try {
            String queryString = "SELECT  max(DEPTID) From Table_BuddyList " ;
            rs = statement.executeQuery(queryString) ;
            log.info(queryString) ;

            if ( rs.next() )  nMax = rs.getInt(1);
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }
        return nMax ;
    }


    public ArrayList getList(QueryStatement statement, String strUserID,  String strName){
        ArrayList list = new ArrayList() ;
        BuddyListDTO buddyListDTO = null ;
        ResultSet rs = null ;
        String strWhere =  " " ;
        String strOrder =  " order by sub.name asc  ";

        if ( strName.length() > 0) strWhere = " Where sub.name like '%" + strName + "%' " ;

        try {
            String queryString = "SELECT  userId , DeptID, BuddyID, Type " ;
            queryString += " From Table_BuddyList buddy join Table_Subscriber sub  ";
            queryString += " on buddy.userid = '"+ strUserID +"'   ";
            queryString += " and sub.id = buddy.buddyid " + strWhere + strOrder ;
            log.info(queryString) ;
            rs = statement.executeQuery(queryString) ;

            while ( rs.next() )  {
            	buddyListDTO = new BuddyListDTO() ;
            	buddyListDTO.setUserID(Str.CheckNullString(rs.getString(1)));
            	buddyListDTO.setDeptID(rs.getInt(2));
            	buddyListDTO.setBuddyID(Str.CheckNullString(rs.getString(3)));
            	buddyListDTO.setType(rs.getInt(4));
                list.add(buddyListDTO) ;
            }
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }

        return list;
    }

    public ArrayList getList(QueryStatement statement, String strUserID, int nDeptID, int nType){
        ArrayList list = new ArrayList() ;
        BuddyListDTO buddyListDTO = null ;
        ResultSet rs = null ;
        String strWhere =  " Where buddy.UserID = '" + strUserID + "' " ;
        String strOrder =  " order by sub.name asc  ";
        if ( nDeptID > 0) strWhere += " AND buddy.DeptID = " + nDeptID + " ";
        strWhere += " AND buddy.Type = " + nType + " ";

        try {
            String queryString = "SELECT  UserID, DeptID, BuddyID, Type " ;
            queryString += " From Table_BuddyList buddy join Table_Subscriber sub  on  " ;
            if ( nDeptID > 0)  queryString += " buddy.DeptID = "+ nDeptID +" and " ;
            queryString += " sub.id = buddy.buddyid " + strWhere + strOrder ;

            rs = statement.executeQuery(queryString) ;
            log.info(queryString) ;

            while ( rs.next() )  {
            	buddyListDTO = new BuddyListDTO() ;
            	buddyListDTO.setUserID(Str.CheckNullString(rs.getString(1)));
            	buddyListDTO.setDeptID(rs.getInt(2));
            	buddyListDTO.setBuddyID(Str.CheckNullString(rs.getString(3)));
            	buddyListDTO.setType(rs.getInt(4));
                list.add(buddyListDTO) ;
            }
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }

        return list;
    }


    public int getCount ( QueryStatement statement,  BuddyListDTO buddyListDTO  ) {
        int  nCount =  0 ;
        ResultSet rs = null ;

        try {
            String queryString = "SELECT  count(*) From Table_BuddyList " ;
            queryString += " WHERE UserID = '" + buddyListDTO.getUserID() + "' " ;
            queryString += " AND DeptID = " + buddyListDTO.getDeptID() +" " ;
            queryString += " AND BuddyID = '" + buddyListDTO.getBuddyID()+"'  " ;

            rs = statement.executeQuery(queryString) ;
            log.info(queryString) ;

            if ( rs.next() )  nCount = rs.getInt(1);
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }
        return nCount ;
    }

    public boolean insert ( QueryStatement statement, BuddyListDTO buddyListDTO ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            count = getCount(statement, buddyListDTO) ;
            if (count > 0) return false;

            queryString = " INSERT INTO Table_BuddyList ( UserID, DeptID, BuddyID, Type ) ";
            queryString += " VALUES ('" + buddyListDTO.getUserID() + "', " ;
            queryString += " " + buddyListDTO.getDeptID() +", " ;
            queryString += " '" + buddyListDTO.getBuddyID()+"', " ;
            queryString += "  " + buddyListDTO.getType() +" ) " ;

            log.info(queryString) ;

            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }

    public boolean delete( QueryStatement statement,BuddyListDTO buddyListDTO ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            count = getCount(statement, buddyListDTO) ;
            if (count == 0) return false;

            queryString = " DELETE FROM Table_BuddyList WHERE userID = '" + buddyListDTO.getUserID()+ "' " ;
            queryString += " AND DeptID =  " + buddyListDTO.getDeptID() + " " ;
            queryString += " AND buddyID = '" + buddyListDTO.getBuddyID() + "' " ;

            log.info("--------->>delete" + queryString);

            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }

}
