package com.acromate.dao.element;

import com.acromate.db.QueryStatement ;
import java.util.ArrayList;
import com.acromate.util.Str;
import java.sql.ResultSet;
import com.acromate.dto.element.ZoneIpRangeDTO;
import com.acromate.util.Logger;


public class ZoneIpRangeDAO {
    private Logger log = Logger.getLogger(this.getClass());


    private ZoneIpRangeDTO zoneIpRangeDTO ;
    QueryStatement statement ;

    public ZoneIpRangeDAO() {}

    public ZoneIpRangeDAO( QueryStatement statement, ZoneIpRangeDTO zoneIpRangeDTO ) {
        this.statement = statement ;
        this.zoneIpRangeDTO = zoneIpRangeDTO ;
    }

    public ZoneIpRangeDTO getDTO(QueryStatement statement, String strstartIP, String strendIP ) {
        ZoneIpRangeDTO zoneIpRangeDTO = null;
        ResultSet rs = null;

        try {
            String queryString = "SELECT startIP, endIP, zoneCode ";
            queryString += " From Table_ZoneIpRange ";
            queryString += " WHERE startIP = '" + strstartIP + "' ";
            queryString += " AND endIP = '" + strendIP + "' " ;
            log.info(queryString) ;
            rs = statement.executeQuery(queryString) ;

            if ( rs.next() )  {
                zoneIpRangeDTO = new ZoneIpRangeDTO() ;

                zoneIpRangeDTO.setStartIP(Str.CheckNullString(rs.getString(1)));
                zoneIpRangeDTO.setEndIP(Str.CheckNullString(rs.getString(2)));
                zoneIpRangeDTO.setZoneCode(Str.CheckNullString(rs.getString(3)));
            }
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }
        return zoneIpRangeDTO;
    }


    public ArrayList getList(QueryStatement statement) {
        ArrayList list = new ArrayList();
        ZoneIpRangeDTO zoneIpRangeDTO = null;
        ResultSet rs = null;

        try {
            String queryString = "SELECT startIP, endIP, zoneCode";
            queryString += " From Table_ZoneIpRange ";
            log.info(queryString) ;
            rs = statement.executeQuery(queryString) ;

            while ( rs.next() )  {
                zoneIpRangeDTO = new ZoneIpRangeDTO() ;
                zoneIpRangeDTO.setStartIP(Str.CheckNullString(rs.getString(1)));
                zoneIpRangeDTO.setEndIP(Str.CheckNullString(rs.getString(2)));
                zoneIpRangeDTO.setZoneCode(Str.CheckNullString(rs.getString(3)));

                list.add(zoneIpRangeDTO) ;
            }
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }

        return list;
    }

    public boolean insert ( QueryStatement statement, ZoneIpRangeDTO zoneIpRangeDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString =   " INSERT INTO Table_ZoneIpRange ";
            queryString += " ( startIP, endIP, zoneCode) ";
            queryString += " VALUES (" ;

            queryString += " '"+zoneIpRangeDTO.getStartIP()+"', ";
            queryString += " '"+zoneIpRangeDTO.getEndIP()+"', ";
            queryString += " '"+zoneIpRangeDTO.getZoneCode()+"') ";

            log.info(queryString) ;
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }

    public boolean update( QueryStatement statement, ZoneIpRangeDTO zoneIpRangeDTO  ) {
    String queryString = "";
    int count = 0;
    try {
        if (statement == null) {
            return false;
        }

        queryString = " UPDATE Table_ZoneIpRange SET ";

        queryString += " zoneCode = '"+ zoneIpRangeDTO.getZoneCode()+"' ";
        queryString += " WHERE startIP = '" + zoneIpRangeDTO.getStartIP() +"' ";
        queryString += " AND endIP = '" + zoneIpRangeDTO.getEndIP() + "' " ;

        count = statement.executeUpdate(queryString);
        log.info(queryString) ;
    } catch (Exception e) {
        log.error("exception occurred > ", e);
        return false;
    }
    return true ;
}

    public boolean delete( QueryStatement statement,  ZoneIpRangeDTO zoneIpRangeDTO) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            queryString = " DELETE FROM Table_ZoneIpRange WHERE startIP = '" + zoneIpRangeDTO.getStartIP()+ "' " ;
            queryString += " AND endIP = '" + zoneIpRangeDTO.getEndIP() + "' " ;
            count = statement.executeUpdate(queryString);
            log.info(queryString) ;
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }

    public boolean deleteAll( QueryStatement statement ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            queryString = " DELETE FROM Table_ZoneIpRange " ;
            count = statement.executeUpdate(queryString);
            log.info(queryString) ;
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }


}
