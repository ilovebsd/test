package com.acromate.dao.element;

/**
 * <p>Title: </p>
 *
 * <p>Description: </p>
 *
 * <p>Copyright: Copyright (c) 2007</p>
 *
 * <p>Company: </p>
 *
 * @author not attributable
 * @version 1.0
 */
import com.acromate.db.QueryStatement ;
import java.util.ArrayList;
import com.acromate.util.Str;
import java.sql.ResultSet;
import com.acromate.dto.element.ServiceRouteDTO;
import com.acromate.util.Logger;

public class ServiceRouteDAO {
    private Logger log = Logger.getLogger(this.getClass());

    private ServiceRouteDTO serviceRouteDTO ;
    QueryStatement statement ;

    public ServiceRouteDAO() {}

    public ServiceRouteDAO( QueryStatement statement, ServiceRouteDTO serviceRouteDTO ) {
        this.statement = statement ;
        this.serviceRouteDTO = serviceRouteDTO ;
    }

    public ArrayList getList(QueryStatement statement, int ServiceCode) {
        ArrayList list = new ArrayList() ;
        ServiceRouteDTO serviceRouteDTO = null ;
        ResultSet rs = null ;
        String strWhere = "";

        if(ServiceCode > 0){
            strWhere += " AND serviceCode = " + ServiceCode + " ";
        }

        try {
            String queryString = "SELECT s.serviceCode, s.routeSelectRule, s.routeID, s.protocol, s.stateFlag, s.comment, s.parameter, r.endpointClass " ;
            queryString += " From Table_ServiceRoute s Left Join Table_RouteState r on s.routeID = r.endpointid and s.protocol = r.protocol Where 1 = 1 " ;
            queryString += strWhere;
            rs = statement.executeQuery(queryString) ;
            log.info(queryString) ;

            while ( rs.next() )  {
                serviceRouteDTO = new ServiceRouteDTO() ;
                serviceRouteDTO.setServiceCode(rs.getInt(1));
                serviceRouteDTO.setRouteSelectRule(rs.getInt(2));
                serviceRouteDTO.setRouteID(Str.CheckNullString(rs.getString(3)));
                serviceRouteDTO.setProtocol(rs.getInt(4));
                serviceRouteDTO.setStateFlag(rs.getInt(5));
                serviceRouteDTO.setComment(Str.CheckNullString(rs.getString(6)));
                serviceRouteDTO.setParameter(Str.CheckNullString(rs.getString(7)));
                serviceRouteDTO.setEndpointClass(rs.getInt(8));
                list.add(serviceRouteDTO) ;
            }
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }

        return list;
    }

    public boolean insert ( QueryStatement statement, ServiceRouteDTO serviceRouteDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString =   " INSERT INTO Table_ServiceRoute ";
            queryString += " (serviceCode, routeSelectRule, routeID, protocol, stateFlag, comment, parameter)";
            queryString += " VALUES (" ;
            queryString += "  " + serviceRouteDTO.getServiceCode() + " ," ;
            queryString += "  " + serviceRouteDTO.getRouteSelectRule() + "," ;
            queryString += " '" + serviceRouteDTO.getRouteID() + "'," ;
            queryString += "  " + serviceRouteDTO.getProtocol() + "," ;
            queryString += "  " + serviceRouteDTO.getStateFlag() + "," ;
            queryString += " '" + serviceRouteDTO.getComment() + "'," ;
            queryString += " '" + serviceRouteDTO.getParameter() + "') " ;

            log.info(queryString) ;
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }


    public boolean update( QueryStatement statement, ServiceRouteDTO serviceRouteDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString = " UPDATE Table_ServiceRoute SET ";
            queryString += "routeSelectRule = " + serviceRouteDTO.getRouteSelectRule() + "," ;
            queryString += "routeID = '" + serviceRouteDTO.getRouteID() + "'," ;
            queryString += "protocol = " + serviceRouteDTO.getProtocol() + "," ;
            queryString += "stateFlag = " + serviceRouteDTO.getStateFlag() + "," ;
            queryString += "comment = '" + serviceRouteDTO.getComment() + "'," ;
            queryString += "parameter = '" + serviceRouteDTO.getParameter() + "' " ;
            queryString += " WHERE serviceCode = " + serviceRouteDTO.getServiceCode() + " ";

            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }

    public boolean delete( QueryStatement statement,  ServiceRouteDTO serviceRouteDTO) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            queryString = " DELETE FROM Table_ServiceRoute WHERE serviceCode = " + serviceRouteDTO.getServiceCode() + " " ;
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }
}


