package com.acromate.dao.element;

/**
 * <p>Title: </p>
 *
 * <p>Description: </p>
 *
 * <p>Copyright: Copyright (c) 2007</p>
 *
 * <p>Company: </p>
 *
 * @author not attributable
 * @version 1.0
 */
import com.acromate.db.QueryStatement ;
import java.util.ArrayList;
import com.acromate.util.Str;
import java.sql.ResultSet;
import com.acromate.dto.element.TimingRouteDTO;
import com.acromate.util.Logger;

public class TimingRouteDAO {
    private Logger log = Logger.getLogger(this.getClass());

    private TimingRouteDTO timingRouteDTO;
    QueryStatement statement;

    public TimingRouteDAO() {}

    public TimingRouteDAO(QueryStatement statement, TimingRouteDTO timingRouteDTO) {
        this.statement = statement;
        this.timingRouteDTO = timingRouteDTO;
    }

    public ArrayList getList(QueryStatement statement, String TimingRouteID, String DayValue, String StartTime, String EndTime) {
        ArrayList list = new ArrayList();
        TimingRouteDTO timingRouteDTO = null;
        ResultSet rs = null;
        String strWhere = "";

        if ("".equals(TimingRouteID) != true) {
            strWhere += " AND t.TimingRouteID = '" + TimingRouteID + "' ";
        }

        if ("".equals(TimingRouteID) != true) {
            strWhere += " AND t.DayValue = '" + DayValue + "' ";
        }

        try {
            String queryString = "SELECT t.TimingRouteID, t.DayValue, t.StartTime, t.EndTime, t.Protocol, t.RouteID , r.endpointClass " ;
            queryString += "FROM Table_TimingRoute t Left Join Table_RouteState r on t.RouteId = r.endpointid and t.protocol = r.protocol Where 1 = 1 ";
            queryString += strWhere;
            rs = statement.executeQuery(queryString);
            log.info(queryString);

            while (rs.next()) {
                timingRouteDTO = new TimingRouteDTO();
                timingRouteDTO.setTimingRouteID(Str.CheckNullString(rs.getString(1)));
                timingRouteDTO.setDayValue(Str.CheckNullString(rs.getString(2)));
                timingRouteDTO.setStartTime(Str.CheckNullString(rs.getString(3)));
                timingRouteDTO.setEndTime(Str.CheckNullString(rs.getString(4)));
                timingRouteDTO.setProtocol(rs.getInt(5));
                timingRouteDTO.setRouteID(Str.CheckNullString(rs.getString(6)));
                timingRouteDTO.setEndpointClass(rs.getInt(7));
                list.add(timingRouteDTO);
            }
        } catch (Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch (Exception e) { log.error("exception occurred > ", e); }
        }
        return list;
    }


    public boolean insert(QueryStatement statement, TimingRouteDTO timingRouteDTO) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString = "INSERT INTO table_TimingRoute(TimingRouteID, DayValue, StartTime, EndTime, Protocol, RouteID)";
            queryString += " VALUES (";
            queryString += " '" + timingRouteDTO.getTimingRouteID() + "' ,";
            queryString += " '" + timingRouteDTO.getDayValue() + "',";
            queryString += " '" + timingRouteDTO.getStartTime() + "',";
            queryString += " '" + timingRouteDTO.getEndTime() + "',";
            queryString += "  " + timingRouteDTO.getProtocol() + ",";
            queryString += " '" + timingRouteDTO.getRouteID() + "' )";

            log.info(queryString);
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        if (count <= 0) return false ;
        return true;
    }

        public boolean update(QueryStatement statement, TimingRouteDTO timingRouteDTO) {
            delete(statement, timingRouteDTO);
            insert(statement, timingRouteDTO);

            String queryString = "";
            int count = 0;
            try {
                if (statement == null) {
                    return false;
                }

                queryString = "UPDATE table_TimingRoute SET ";
                queryString += " RouteID = '"+timingRouteDTO.getRouteID()+"', " ;
                queryString += " Protocol = "+timingRouteDTO.getProtocol()+" " ;
                queryString += " WHERE TimingRouteID =  '"+timingRouteDTO.getTimingRouteID()+ "' " ;
                queryString += " AND StartTime =  '"+timingRouteDTO.getStartTime()+ "' " ;


                count = statement.executeUpdate(queryString);
            } catch (Exception e) {
                log.error("exception occurred > ", e);
                return false;
            }
            if (count <= 0) return false ;
            return true;
        }

        public boolean delete(QueryStatement statement, TimingRouteDTO timingRouteDTO) {
            String queryString = "";
            int count = 0;
            try {
                if (statement == null) {
                    return false;
                }
                queryString = "Delete from table_TimingRoute ";
                queryString += " where timingrouteid ='" + timingRouteDTO.getTimingRouteID() + "'";
                queryString += " AND StartTime =  '"+timingRouteDTO.getStartTime()+ "' " ;

                count = statement.executeUpdate(queryString);
                log.info(queryString) ;
            } catch (Exception e) {
                log.error("exception occurred > ", e);
                return false;
            }
        if (count <= 0) return false ;
        return true;
    }
}




