package com.acromate.dao.element;

/**
 * <p>Title: </p>
 *
 * <p>Description: </p>
 *
 * <p>Copyright: Copyright (c) 2007</p>
 *
 * <p>Company: </p>
 *
 * @author not attributable
 * @version 1.0
 */
import com.acromate.db.QueryStatement ;
import java.util.ArrayList;
import com.acromate.util.Str;
import java.sql.ResultSet;
import com.acromate.dto.element.PresenceDTO;
import com.acromate.util.Logger;

public class PresenceDAO {
    private Logger log = Logger.getLogger(this.getClass());

    private PresenceDTO presenceDTO ;
    QueryStatement statement ;

    public PresenceDAO() {}

    public PresenceDAO( QueryStatement statement, PresenceDTO presenceDTO ) {
        this.statement = statement ;
        this.presenceDTO = presenceDTO ;
    }

    public ArrayList getList(QueryStatement statement, String UserE164) {
        ArrayList list = new ArrayList() ;
        PresenceDTO presenceDTO = null ;
        ResultSet rs = null ;

        try {
            String queryString = "SELECT userE164, endpointID, protocol, userType, options, registerTime, presenceStatus " ;
            queryString += " From Table_Presence Where userE164 = '" + UserE164 + "' ";
            rs = statement.executeQuery(queryString) ;
            log.info(queryString) ;
/*
            while ( rs.next() )  {
                presenceDTO = new presenceDTO() ;
                presenceDTO.setPrefixTableID(Str.CheckNullString(rs.getString(1));
                presenceDTO.setTableType(Str.CheckNullString(rs.getString(2));
                presenceDTO.setDescription(rs.getInt(3));
                list.add(presenceDTO) ;
            }*/
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }

        return list;
    }



    public int getCount ( QueryStatement statement,  PresenceDTO presenceDTO  ) {
        int  nCount =  0 ;
        ResultSet rs = null ;

        try {
            String queryString = "SELECT  count(*) From Table_Presence " ;
            queryString += " WHERE UserE164 = '" + presenceDTO.getUserE164() + "'  " ;

            rs = statement.executeQuery(queryString) ;
            log.info(queryString) ;

            if ( rs.next() )  nCount = rs.getInt(1);
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }
        return nCount ;
    }


    public boolean insert ( QueryStatement statement, PresenceDTO presenceDTO  ) {
        String queryString = "" ;
        int count = 0 ;
        ResultSet rs = null ;
        String strEndpointID = "" ;
        try {
            if (statement == null) {
                return false;
            }
            count = getCount(statement, presenceDTO) ;
            if (count > 0) return false;

            //해당 번호에 등록된 단말 ID를 불러온다
            queryString = "SELECT ENDPOINTID FROM table_E164Route WHERE E164 = '"+ presenceDTO.getUserE164() +"'";
            rs = statement.executeQuery(queryString);
            if (rs.next())  strEndpointID = Str.CheckNullString(rs.getString(1));
            rs.close();
            //등록시각을 불러온다
            int registerTime = 0;
            queryString = "SELECT registeredTime FROM table_sipcontact WHERE endpointid='" + strEndpointID + "'";
            log.info(queryString);
            rs = statement.executeQuery(queryString);
            if (rs.next()) registerTime = rs.getInt(1);
            rs.close();

            queryString =   " INSERT INTO Table_Presence ";
            queryString += " (userE164, endpointID, protocol, userType, options, registerTime, presenceStatus)";
            queryString += " VALUES (" ;
            queryString += " '" + presenceDTO.getUserE164() + "' ," ;
            queryString += " '" + strEndpointID + "'," ;
            queryString += "  " + presenceDTO.getProtocol() + "," ;
            queryString += "  " + presenceDTO.getUserType() + "," ;
            queryString += "  " + presenceDTO.getOptions() + "," ;
            queryString += "  " + registerTime + "," ;
            queryString += "  " + presenceDTO.getPresenceStatus() + ") " ;

            log.info(queryString) ;
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }
        return true ;
    }


    public boolean update( QueryStatement statement, PresenceDTO presenceDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString = " UPDATE Table_Presence SET ";
            queryString += "endpointID = '" + presenceDTO.getEndpointID() + "'," ;
            queryString += "protocol = " + presenceDTO.getProtocol() + "," ;
            queryString += "userType = " + presenceDTO.getUserType() + "," ;
            queryString += "options = " + presenceDTO.getOptions() + "," ;
            queryString += "registerTime = " + presenceDTO.getRegisterTime() + "," ;
            queryString += "presenceStatus = " + presenceDTO.getPresenceStatus() + " " ;
            queryString += " WHERE userE164 = '" + presenceDTO.getUserE164() + "' ";


            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }

    public boolean delete( QueryStatement statement,  PresenceDTO presenceDTO) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            count = getCount(statement, presenceDTO) ;
            if (count == 0) return false;

            queryString = " DELETE FROM Table_Presence Where userE164 = '" + presenceDTO.getUserE164() + "' " ;
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }
}


