package com.acromate.dao.element;

/**
 * <p>Title: </p>
 *
 * <p>Description: </p>
 *
 * <p>Copyright: Copyright (c) 2007</p>
 *
 * <p>Company: </p>
 *
 * @author not attributable
 * @version 1.0
 */
import com.acromate.db.QueryStatement ;
import java.util.ArrayList;
import com.acromate.util.Str;
import java.sql.ResultSet;
import com.acromate.dto.element.PrefixTableIDDTO;
import com.acromate.util.Logger;

public class PrefixTableIDDAO {
    private Logger log = Logger.getLogger(this.getClass());

    private PrefixTableIDDTO prefixTableIDDTO ;
    QueryStatement statement ;

    public PrefixTableIDDAO() {}

    public PrefixTableIDDAO( QueryStatement statement, PrefixTableIDDTO prefixTableIDDTO ) {
        this.statement = statement ;
        this.prefixTableIDDTO = prefixTableIDDTO ;
    }

    public ArrayList getList(QueryStatement statement, String prefixTableID) {
        ArrayList list = new ArrayList() ;
        PrefixTableIDDTO prefixTableIDDTO = null ;
        ResultSet rs = null ;
        String strWhere = "";

        if ("".equals(prefixTableID) != true) {
            strWhere += " AND prefixTableID = '" + prefixTableID +"' ";
        }


        try {
            String queryString = "SELECT prefixTableID, tableType, description " ;
            queryString += " From Table_PrefixTableID Where 1 = 1 ";
            queryString += strWhere;
            rs = statement.executeQuery(queryString) ;
            log.info(queryString) ;

            while ( rs.next() )  {
                prefixTableIDDTO = new PrefixTableIDDTO() ;
                prefixTableIDDTO.setPrefixTableID(Str.CheckNullString(rs.getString(1)));
                prefixTableIDDTO.setTableType(rs.getInt(2));
                prefixTableIDDTO.setDescription(Str.CheckNullString(rs.getString(3)));
                list.add(prefixTableIDDTO) ;
            }
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }

        return list;
    }

    public boolean insert ( QueryStatement statement, PrefixTableIDDTO prefixTableIDDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString =   " INSERT INTO Table_PrefixTableID ";
            queryString += " (prefixTableID, tableType, description)";
            queryString += " VALUES (" ;
            queryString += " '" + prefixTableIDDTO.getPrefixTableID() + "' ," ;
            queryString += "  " + prefixTableIDDTO.getTableType() + "," ;
            queryString += " '" + prefixTableIDDTO.getDescription() + "') " ;

            log.info(queryString) ;
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        if (count <= 0) return false ;
        return true ;
    }


    public boolean update( QueryStatement statement, PrefixTableIDDTO prefixTableIDDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString = " UPDATE Table_PrefixTableID SET ";
            queryString += "tableType = " + prefixTableIDDTO.getTableType() + "," ;
            queryString += "description = '" + prefixTableIDDTO.getDescription() + "' " ;
            queryString += " WHERE prefixTableID = '" + prefixTableIDDTO.getPrefixTableID() + "' ";


            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        if (count <= 0) return false ;
        return true ;
    }

    public boolean delete( QueryStatement statement,  PrefixTableIDDTO prefixTableIDDTO) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            queryString = " DELETE FROM Table_PrefixTableID Where prefixTableID = '" + prefixTableIDDTO.getPrefixTableID() + "' " ;
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        if (count <= 0) return false ;
        return true ;
    }
}


