package com.acromate.dao.element;

/**
 * <p>Title: </p>
 *
 * <p>Description: </p>
 *
 * <p>Copyright: Copyright (c) 2007</p>
 *
 * <p>Company: </p>
 *
 * @author not attributable
 * @version 1.0
 */
import com.acromate.db.QueryStatement ;
import java.util.ArrayList;
import com.acromate.util.Str;
import java.sql.ResultSet;
import com.acromate.dto.element.PresenceReportDTO;
import com.acromate.util.Logger;

public class PresenceReportDAO {
    private Logger log = Logger.getLogger(this.getClass());

    private PresenceReportDTO presenceReportDTO ;
    QueryStatement statement ;

    public PresenceReportDAO() {}

    public PresenceReportDAO( QueryStatement statement, PresenceReportDTO presenceReportDTO ) {
        this.statement = statement ;
        this.presenceReportDTO = presenceReportDTO ;
    }

    public ArrayList getList(QueryStatement statement, String UserE164, String OfferID, int Protocol) {
        ArrayList list = new ArrayList() ;
        PresenceReportDTO presenceReportDTO = null ;
        ResultSet rs = null ;

        try {
            String queryString = "SELECT userE164, offerID, protocol, offerType, reportType " ;
            queryString += " From Table_PresenceReport Where userE164 = '" + UserE164 +"' ";
            queryString += " AND offerID = '"+OfferID+"' ";
            queryString += " AND protocol = "+Protocol+" ";
            rs = statement.executeQuery(queryString) ;
            log.info(queryString) ;
/*
            while ( rs.next() )  {
                presenceReportDTO = new PresenceReportDTO() ;
                presenceReportDTO.setUserE164(Str.CheckNullString(rs.getString(1));
                presenceReportDTO.setOfferID(Str.CheckNullString(rs.getString(2));
                presenceReportDTO.setProtocol(rs.getInt(3));
                presenceReportDTO.setOfferType(rs.getInt(4));
                presenceReportDTO.setReportType(rs.getInt(5));
                list.add(presenceReportDTO) ;
            }*/
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }

        return list;
    }


    public int getCount ( QueryStatement statement,  PresenceReportDTO presenceReportDTO  ) {
        int  nCount =  0 ;
        ResultSet rs = null ;

        try {
            String queryString = "SELECT  count(*) From Table_PresenceReport " ;
            queryString += " WHERE UserE164 = '" + presenceReportDTO.getUserE164() + "'  " ;
            queryString += " AND OfferID = '" + presenceReportDTO.getOfferID() + "'," ;
            queryString += " AND  Protocol = " + presenceReportDTO.getProtocol() + " " ;

            rs = statement.executeQuery(queryString) ;
            log.info(queryString) ;

            if ( rs.next() )  nCount = rs.getInt(1);
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }
        return nCount ;
    }


    public boolean insert ( QueryStatement statement, PresenceReportDTO presenceReportDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            count = getCount(statement, presenceReportDTO) ;
            if (count > 0) return false;

            queryString =   " INSERT INTO Table_PresenceReport ";
            queryString += " (userE164, offerID, protocol, offerType, reportType)";
            queryString += " VALUES (" ;
            queryString += " '" + presenceReportDTO.getUserE164() + "' ," ;
            queryString += " '" + presenceReportDTO.getOfferID() + "'," ;
            queryString += "  " + presenceReportDTO.getProtocol() + "," ;
            queryString += "  " + presenceReportDTO.getOfferType() + "," ;
            queryString += "  " + presenceReportDTO.getReportType() + ") " ;

            log.info(queryString) ;
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }


    public boolean update( QueryStatement statement, PresenceReportDTO presenceReportDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString = " UPDATE Table_PresenceReport SET ";
            queryString += "offerType = " + presenceReportDTO.getOfferType() + "," ;
            queryString += "reportType = " + presenceReportDTO.getReportType() + " " ;
            queryString += " WHERE userE164 = '" + presenceReportDTO.getUserE164() + "' ";
            queryString += " AND offerID = '" + presenceReportDTO.getOfferID() + "' " ;
            queryString += " AND protocol = " + presenceReportDTO.getProtocol() + " " ;


            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }

    public boolean delete( QueryStatement statement,  PresenceReportDTO presenceReportDTO) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            count = getCount(statement, presenceReportDTO) ;
            if (count == 0) return false;

            queryString = " DELETE FROM Table_PresenceReport Where userE164 = '" + presenceReportDTO.getUserE164() + "' " ;
            queryString += " AND offerID = '" + presenceReportDTO.getOfferID() + "' " ;
            queryString += " AND protocol = " + presenceReportDTO.getProtocol() + " " ;
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }
}


