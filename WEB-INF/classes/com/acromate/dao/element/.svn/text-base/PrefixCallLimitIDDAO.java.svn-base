package com.acromate.dao.element;

/**
 * <p>Title: </p>
 *
 * <p>Description: </p>
 *
 * <p>Copyright: Copyright (c) 2007</p>
 *
 * <p>Company: </p>
 *
 * @author not attributable
 * @version 1.0
 */
import com.acromate.db.QueryStatement ;
import java.util.ArrayList;
import com.acromate.util.Str;
import java.sql.ResultSet;
import com.acromate.dto.element.PrefixCallLimitIDDTO;
import com.acromate.util.Logger;

public class PrefixCallLimitIDDAO {
    private Logger log = Logger.getLogger(this.getClass());

    private PrefixCallLimitIDDTO prefixCallLimitIDDTO ;
    QueryStatement statement ;

    public PrefixCallLimitIDDAO() {}

    public PrefixCallLimitIDDAO( QueryStatement statement, PrefixCallLimitIDDTO prefixCallLimitIDDTO ) {
        this.statement = statement ;
        this.prefixCallLimitIDDTO = prefixCallLimitIDDTO ;
    }

    public ArrayList getList(QueryStatement statement, String CallLimitID) {
        ArrayList list = new ArrayList() ;
        PrefixCallLimitIDDTO prefixCallLimitIDDTO = null ;
        ResultSet rs = null ;

        String strWhere = "";

        if(!CallLimitID.equals("")){
            strWhere += " AND CallLimitID = '" + CallLimitID +"' ";
        }


        try {
            String queryString = "SELECT  CallLimitID, MaxCall, Description FROM table_PrefixCallLimitID Where 1 = 1 " ;
            queryString += strWhere ;
            rs = statement.executeQuery(queryString) ;
            log.info(queryString) ;

            while ( rs.next() )  {
                prefixCallLimitIDDTO = new PrefixCallLimitIDDTO() ;
                prefixCallLimitIDDTO.setCallLimitID(Str.CheckNullString(rs.getString(1)));
                prefixCallLimitIDDTO.setMaxCall(rs.getInt(2));
                prefixCallLimitIDDTO.setDescription(Str.CheckNullString(rs.getString(3)));

                list.add(prefixCallLimitIDDTO) ;
            }
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }

        return list;
    }

    public boolean insert ( QueryStatement statement, PrefixCallLimitIDDTO prefixCallLimitIDDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            String strID = prefixCallLimitIDDTO.getCallLimitID() ;
            int nID = Str.CheckNullInt(strID) ;
            if (nID < 0) return false ;

            queryString = " Insert into table_PrefixCallLimitID ( CallLimitID, MaxCall, Description) values ( " ;
            queryString += " '" + prefixCallLimitIDDTO.getCallLimitID()+ "', " ;
            queryString += "  " + prefixCallLimitIDDTO.getMaxCall()+ ", " ;
            queryString += "  '" + prefixCallLimitIDDTO.getDescription()+ "' ) " ;


            log.info(queryString) ;
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        if (count <= 0) return false ;
        return true ;
    }


    public boolean update( QueryStatement statement, PrefixCallLimitIDDTO prefixCallLimitIDDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString = " Update table_PrefixCallLimitID set MaxCall = "+prefixCallLimitIDDTO.getMaxCall() ;
            queryString += " ,  Description = '"+prefixCallLimitIDDTO.getDescription() ;
            queryString += "' WHERE CallLimitID='" + prefixCallLimitIDDTO.getCallLimitID() +"' ";

            count = statement.executeUpdate(queryString);
            log.info(queryString) ;
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        if (count <= 0) return false ;
        return true ;
    }

    public boolean delete( QueryStatement statement,  PrefixCallLimitIDDTO prefixCallLimitIDDTO) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            queryString = "DELETE FROM Table_PrefixCallLimitID WHERE  CallLimitID = '"+ prefixCallLimitIDDTO.getCallLimitID()+"' ";
            count = statement.executeUpdate(queryString);
            log.info(queryString) ;
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        if (count <= 0) return false ;
        return true ;
    }
}
