package com.acromate.dao.element;

/**
 * <p>Title: </p>
 *
 * <p>Description: </p>
 *
 * <p>Copyright: Copyright (c) 2007</p>
 *
 * <p>Company: </p>
 *
 * @author not attributable
 * @version 1.0
 */
import com.acromate.db.QueryStatement ;
import java.util.ArrayList;
import com.acromate.util.Str;
import java.sql.ResultSet;
import com.acromate.dto.element.EndpointSpecDTO;
import com.acromate.util.Logger;

public class EndpointSpecDAO {
    private Logger log = Logger.getLogger(this.getClass());

    private EndpointSpecDTO endpointSpecDTO ;
    QueryStatement statement ;

    public EndpointSpecDAO() {}

    public EndpointSpecDAO( QueryStatement statement, EndpointSpecDTO endpointSpecDTO ) {
        this.statement = statement ;
        this.endpointSpecDTO = endpointSpecDTO ;
    }

    public int getCount(QueryStatement statement) {
        ResultSet rs = null ;
        int count = 0;
        try {
            String queryString = "SELECT count(*) From Table_EndpointSpec ";
            rs = statement.executeQuery(queryString) ;
            log.info(queryString) ;
            if ( rs.next() )  {
            	count = rs.getInt(1);
            }
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }
        return count;
    }
    
    public String isVip(QueryStatement statement, String EndpointID, String Protocol) {
        ResultSet rs = null ;
        String result = "false";
        try {
            String queryString = "SELECT count(*) " ;
            queryString += " From Table_EndpointSpec Where endpointID = '" + EndpointID +"' ";
            queryString += " AND protocol = " + Protocol + " ";
            rs = statement.executeQuery(queryString) ;
            log.info(queryString) ;
            if ( rs.next() )  {
            	if (rs.getInt(1) > 0) result = "true";
            }
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }
        return result;
    }
    
    public EndpointSpecDTO getList(QueryStatement statement, String EndpointID, String Protocol) {
        EndpointSpecDTO endpointSpecDTO = null ;
        ResultSet rs = null ;

        try {
            String queryString = "SELECT  endpointID, protocol, companyName, ";
            queryString += " personName, personTel, officerName, officerTel, specification " ;
            queryString += " From Table_EndpointSpec Where endpointID = '" + EndpointID +"' ";
            queryString += " AND protocol = " + Protocol + " ";
            rs = statement.executeQuery(queryString) ;
            log.info(queryString) ;
            if ( rs.next() )  {
                endpointSpecDTO = new EndpointSpecDTO() ;
                endpointSpecDTO.setEndpointID(Str.CheckNullString(rs.getString("endpointID")));
                endpointSpecDTO.setProtocol(rs.getInt("protocol"));
                endpointSpecDTO.setCompanyName(Str.CheckNullString(rs.getString("companyName")));
                endpointSpecDTO.setPersonName(Str.CheckNullString(rs.getString("personName")));
                endpointSpecDTO.setPersonTel(Str.CheckNullString(rs.getString("personTel")));
                endpointSpecDTO.setOfficerName(Str.CheckNullString(rs.getString("officerName")));
                endpointSpecDTO.setOfficerTel(Str.CheckNullString(rs.getString("officerTel")));
                endpointSpecDTO.setSpecification(Str.CheckNullString(rs.getString("specification")));
            }
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }

        return endpointSpecDTO;
    }

    public boolean insert ( QueryStatement statement, EndpointSpecDTO endpointSpecDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString =  " INSERT INTO Table_EndpointSpec (";
            queryString += "    endpointID, protocol, companyName, personName, personTel, ";
            queryString += "    officerName, officerTel, specification)";
            queryString += " VALUES (" ;
            queryString += " '" + endpointSpecDTO.getEndpointID() + "' ," ;
            queryString += "  " + endpointSpecDTO.getProtocol() + " ," ;
            queryString += " '" + endpointSpecDTO.getCompanyName() + "' ," ;
            queryString += " '" + endpointSpecDTO.getPersonName() + "' ," ;
            queryString += " '" + endpointSpecDTO.getPersonTel() + "' ," ;
            queryString += " '" + endpointSpecDTO.getOfficerName() + "' ," ;
            queryString += " '" + endpointSpecDTO.getOfficerTel() + "' ," ;
            queryString += " '" + endpointSpecDTO.getSpecification() + "') " ;

            log.info(queryString) ;
            System.out.println(queryString);
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }


    public boolean update( QueryStatement statement, EndpointSpecDTO endpointSpecDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString  = " UPDATE Table_EndpointSpec SET ";
            queryString += "  companyName = '" + endpointSpecDTO.getCompanyName() + "', " ;
            queryString += "  personName = '" + endpointSpecDTO.getPersonName() + "', " ;
            queryString += "  personTel = '" + endpointSpecDTO.getPersonTel() + "', " ;
            queryString += "  officerName = '" + endpointSpecDTO.getOfficerName() + "', " ;
            queryString += "  officerTel = '" + endpointSpecDTO.getOfficerTel() + "', " ;
            queryString += "  specification = '" + endpointSpecDTO.getSpecification() + "' " ;
            queryString += " WHERE endpointID = '" + endpointSpecDTO.getEndpointID() + "' ";
            queryString += " AND protocol = " + endpointSpecDTO.getProtocol() + " " ;

            System.out.println(queryString);
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }

    public boolean delete( QueryStatement statement, String endpointID, String protocol) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            queryString = " DELETE FROM Table_EndpointSpec WHERE endpointID = '" + endpointID + "' ";
            queryString += " AND protocol = " + protocol + " " ;
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }
}


