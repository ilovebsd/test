package com.acromate.dao.element;

/**
 * <p>Title: </p>
 *
 * <p>Description: </p>
 *
 * <p>Copyright: Copyright (c) 2007</p>
 *
 * <p>Company: </p>
 *
 * @author not attributable
 * @version 1.0
 */
import com.acromate.db.QueryStatement ;
import java.util.ArrayList;
import com.acromate.util.Str;
import java.sql.ResultSet;
import com.acromate.dto.element.RouteBlockDTO;
import com.acromate.util.Logger;

public class RouteBlockDAO {
    private Logger log = Logger.getLogger(this.getClass());

    private RouteBlockDTO routeBlockDTO ;
    QueryStatement statement ;

    public RouteBlockDAO() {}

    public RouteBlockDAO( QueryStatement statement, RouteBlockDTO routeBlockDTO ) {
        this.statement = statement ;
        this.routeBlockDTO = routeBlockDTO ;
    }

    public ArrayList getList(QueryStatement statement, String E164, int InOutFlag, String StartPrefix) {
        ArrayList list = new ArrayList() ;
        RouteBlockDTO routeBlockDTO = null ;
        ResultSet rs = null ;

        try {
            String queryString = "SELECT endpointID, protocol, inoutFlag, startPrefix, endPrefix, blockID, prefixType, blockIDType, description " ;
            queryString += " From Table_RouteBlock Where e164 = '" + E164 + "' ";
            queryString += " AND inoutFlag = " + InOutFlag + " " ;
            queryString += " AND startPrefix = '" + StartPrefix + "' " ;

            rs = statement.executeQuery(queryString) ;
            log.info(queryString) ;
/*
            while ( rs.next() )  {
                routeBlockDTO = new RouteBlockDTO() ;
                routeBlockDTO.setEndpointID(Str.CheckNullString(rs.getString(1));
                routeBlockDTO.setProtocol(rs.getInt(2));
                routeBlockDTO.setInoutFlag(rs.getInt(3));
                routeBlockDTO.setStartPrefix(Str.CheckNullString(rs.getString(4));
                routeBlockDTO.setEndPrefix(Str.CheckNullString(rs.getString(5));
                routeBlockDTO.setBlockID(Str.CheckNullString(rs.getString(6));
                routeBlockDTO.setPrefixType(rs.getInt(7));
                routeBlockDTO.setBlockIDType(rs.getInt(8));
                routeBlockDTO.setDescription(Str.CheckNullString(rs.getString(9));
                list.add(routeBlockDTO) ;
            }*/
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }

        return list;
    }

    public boolean insert ( QueryStatement statement, RouteBlockDTO routeBlockDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString =   " INSERT INTO Table_RouteBlock ";
            queryString += " (endpointID, protocol, inoutFlag, startPrefix, endPrefix, blockID, prefixType, blockIDType, description)";
            queryString += " VALUES (" ;
            queryString += " '" + routeBlockDTO.getEndpointID() + "' ," ;
            queryString += "  " + routeBlockDTO.getProtocol() + "," ;
            queryString += "  " + routeBlockDTO.getInoutFlag() + "," ;
            queryString += " '" + routeBlockDTO.getStartPrefix() + "'," ;
            queryString += " '" + routeBlockDTO.getEndPrefix() + "'," ;
            queryString += " '" + routeBlockDTO.getBlockID() + "'," ;
            queryString += "  " + routeBlockDTO.getPrefixType() + "'," ;
            queryString += "  " + routeBlockDTO.getBlockIDType() + "'," ;
            queryString += " '" + routeBlockDTO.getDescription() + "') " ;

            log.info(queryString) ;
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }


    public boolean update( QueryStatement statement, RouteBlockDTO routeBlockDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString = " UPDATE Table_RouteBlock SET ";
            queryString += "endPrefix = '" + routeBlockDTO.getEndPrefix() + "'," ;
            queryString += "blockID = '" + routeBlockDTO.getBlockID() + "'," ;
            queryString += "prefixType = " + routeBlockDTO.getPrefixType() + "," ;
            queryString += "blockIDType = " + routeBlockDTO.getBlockIDType() + "," ;
            queryString += "description = " + routeBlockDTO.getDescription() + " " ;
            queryString += " Where endpointID = '" + routeBlockDTO.getEndpointID() + "' ";
            queryString += " AND protocol = " + routeBlockDTO.getProtocol() + " " ;
            queryString += " AND inoutFlag = " + routeBlockDTO.getInoutFlag() + " " ;
            queryString += " AND startPrefix = '" + routeBlockDTO.getStartPrefix() + "' " ;


            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }

    public boolean delete( QueryStatement statement,  RouteBlockDTO routeBlockDTO) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            queryString = " DELETE FROM Table_RouteBlock Where endpointID = '" + routeBlockDTO.getEndpointID() + "' ";
            queryString += " AND protocol = " + routeBlockDTO.getProtocol() + " " ;
            queryString += " AND inoutFlag = " + routeBlockDTO.getInoutFlag() + " " ;
            queryString += " AND startPrefix = '" + routeBlockDTO.getStartPrefix() + "' " ;

            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }

    public boolean delete( QueryStatement statement, String endpointId, int protocol) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            queryString = " DELETE FROM Table_RouteBlock Where endpointID = '" + endpointId + "' ";
            queryString += " AND protocol = " + protocol + " " ;
            count = statement.executeUpdate(queryString);
            System.out.println(count + " deleted. " + queryString) ;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
        return true ;
    }

}





