package com.acromate.dao.element;

/**
 * <p>Title: </p>
 *
 * <p>Description: </p>
 *
 * <p>Copyright: Copyright (c) 2007</p>
 *
 * <p>Company: </p>
 *
 * @author not attributable
 * @version 1.0
 */
import com.acromate.db.QueryStatement ;
import java.util.ArrayList;
import com.acromate.util.Str;
import java.sql.ResultSet;
import com.acromate.dto.element.DetourDTO;
import com.acromate.util.Logger;

public class DetourDAO {
    private Logger log = Logger.getLogger(this.getClass());

    private DetourDTO detourDTO ;
    QueryStatement statement ;

    public DetourDAO() {}

    public DetourDAO( QueryStatement statement, DetourDTO detourDTO ) {
        this.statement = statement ;
        this.detourDTO = detourDTO ;
    }

    public ArrayList getList(QueryStatement statement, String EndpointID, int Protocol) {
        ArrayList list = new ArrayList() ;
        DetourDTO detourDTO = null ;
        ResultSet rs = null ;

        String strWhere = " Where r.endpointID = d.detourEndpointID and r.protocol = d.detourProtocol ";

        if(!EndpointID.equals("")){
            strWhere += " AND d.EndpointID = '" + EndpointID+ "' ";
        }
        if(Protocol > 0){
            strWhere += " AND d.Protocol = " + Protocol+ " ";
        }

        try {
            String queryString = "SELECT d.endpointID, d.protocol, d.detourIndex, d.detourEndpointID, d.detourProtocol, r.endpointClass " ;
            queryString += " From Table_Detour d , Table_RouteState r  ";
            queryString += strWhere;
            rs = statement.executeQuery(queryString) ;
            log.info(queryString) ;

            while ( rs.next() )  {
                detourDTO = new DetourDTO() ;
                detourDTO.setEndpointID(Str.CheckNullString(rs.getString(1)));
                detourDTO.setProtocol(rs.getInt(2));
                detourDTO.setDetourIndex(rs.getInt(3));
                detourDTO.setDetourEndpointID(Str.CheckNullString(rs.getString(4)));
                detourDTO.setDetourProtocol(rs.getInt(5));
                detourDTO.setEndpointClass(rs.getInt(6));
                list.add(detourDTO) ;
            }
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { log.error("exception occurred > ", e); }
        }

        return list;
    }

    public int getDetourCount(QueryStatement statement, String endpointID) {
        ResultSet rs = null;
        int count = 0;
        try {
            //---##---Detour 우회경로 정보 검색
            String querySQL = "SELECT count(*) FROM table_detour WHERE endpointid = '"+endpointID+"' AND protocol = 2 ";
            System.out.println(querySQL);
            rs = statement.executeQuery(querySQL);
            if (rs.next())
                count = rs.getInt(1);
            rs.close();
        } catch (Exception e){
            e.printStackTrace() ;
        } finally {
            try {
                if (rs != null)	rs.close();
            } catch(Exception ee){}
       }
       return count ;
   }

    public boolean insert ( QueryStatement statement, DetourDTO detourDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString =   " INSERT INTO Table_Detour ";
            queryString += " (endpointID, protocol, detourIndex, detourEndpointID, detourProtocol)";
            queryString += " VALUES (" ;
            queryString += " '" + detourDTO.getEndpointID() + "' ," ;
            queryString += "  " + detourDTO.getProtocol() + "," ;
            queryString += "  " + detourDTO.getDetourIndex() + "," ;
            queryString += " '" + detourDTO.getDetourEndpointID() + "'," ;
            queryString += "  " + detourDTO.getDetourProtocol() + ") " ;

            log.info(queryString) ;
            count = statement.executeUpdate(queryString);
            if (count < 1) return false ;
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }


    public boolean update( QueryStatement statement, DetourDTO detourDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString = " UPDATE Table_Detour SET ";
            queryString += "detourEndpointID = '" + detourDTO.getDetourEndpointID() + "'," ;
            queryString += "detourProtocol = " + detourDTO.getDetourProtocol() + " " ;
            queryString += " WHERE endpointID = '" + detourDTO.getEndpointID() + "' ";
            queryString += " AND protocol = " + detourDTO.getProtocol() + " " ;
            queryString += " AND detourIndex = " + detourDTO.getDetourIndex() + " " ;


            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }

    public boolean delete( QueryStatement statement,  DetourDTO detourDTO) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            queryString = " DELETE FROM Table_Detour Where endpointID = '" + detourDTO.getEndpointID() + "' " ;
            queryString += " AND protocol = " + detourDTO.getProtocol() + " " ;
            queryString += " AND detourendpointid = '" + detourDTO.getDetourEndpointID() +"' ";
            queryString += " AND DETOURINDEX = " + detourDTO.getDetourIndex()+ " " ;
            count = statement.executeUpdate(queryString) ;
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false ;
        }
        return true ;
    }

    public boolean deleteRouteAll( QueryStatement statement,  String strRouteId, int nProtocol ) {
        String queryString = "";
        int count = 0;

        String strWhere = " Where endpointID = '" + strRouteId + "' " ;

        if(nProtocol != 0){
            strWhere += " AND protocol = " + nProtocol + " " ;
        }

        try {
            if (statement == null) {
                return false;
            }
            queryString = " DELETE FROM Table_Detour " ;
            queryString += strWhere ;
            count = statement.executeUpdate(queryString);
            log.info(count + " deleted. " + queryString) ;
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        if ( count < 0 ) return false ;
        return true ;
    }
}


