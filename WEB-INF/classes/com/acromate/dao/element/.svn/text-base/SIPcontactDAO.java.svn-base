package com.acromate.dao.element;

/**
 * <p>Title: </p>
 *
 * <p>Description: </p>
 *
 * <p>Copyright: Copyright (c) 2007</p>
 *
 * <p>Company: </p>
 *
 * @author not attributable
 * @version 1.0
 */
import com.acromate.db.QueryStatement ;
import java.util.ArrayList;
import com.acromate.util.Str;
import java.sql.ResultSet;
import com.acromate.dto.element.SIPcontactDTO;

public class SIPcontactDAO {

    public SIPcontactDAO() {}

    public ArrayList getList(QueryStatement statement, String strEndpointID, String strUserName) {
        ArrayList list = new ArrayList() ;
        SIPcontactDTO sipContactDTO = null ;
        ResultSet rs = null ;

        try {
            String queryString = "SELECT endpointID, contactID, userName, transID, contactClass, signalAddress, signalPort, registeredTime, registerID, peerAddress, expireTime " ;
            queryString += " From Table_SIPcontact Where endpointID = '" + strEndpointID + "' AND userName = '"+strUserName+ "' " ;
            rs = statement.executeQuery(queryString) ;
            System.out.println(queryString) ;

            while ( rs.next() )  {
                sipContactDTO = new SIPcontactDTO() ;
                sipContactDTO.setEndpointID(Str.CheckNullString(rs.getString(1)));
                sipContactDTO.setContactID(Str.CheckNullString(rs.getString(2)));
                sipContactDTO.setUserName(Str.CheckNullString(rs.getString(3)));
                sipContactDTO.setTransID(Str.CheckNullString(rs.getString(4)));
                sipContactDTO.setContactClass(rs.getInt(5));
                sipContactDTO.setSignalAddress(Str.CheckNullString(rs.getString(6)));
                sipContactDTO.setSignalPort(rs.getInt(7));
                sipContactDTO.setRegisteredTime(rs.getInt(8));
                sipContactDTO.setRegisterID(Str.CheckNullString(rs.getString(9)));
                sipContactDTO.setPeerAddress(Str.CheckNullString(rs.getString(10)));
                sipContactDTO.setExpireTime(rs.getInt(11));
                list.add(sipContactDTO) ;
            }
        } catch(Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { e.printStackTrace(); }
        }

        return list;
    }

    public boolean delete( QueryStatement statement,  SIPcontactDTO sipContactDTO) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            queryString = " DELETE FROM Table_SIPcontact Where endpointID = '" + sipContactDTO.getEndpointID() + "' ";

            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
        return true ;
    }
}
