package com.acromate.dao.system;


import com.acromate.db.QueryStatement ;
import java.util.ArrayList;
import com.acromate.util.Str;
import java.sql.ResultSet;
import com.acromate.dto.system.SystemCheckPropertyDTO;
import com.acromate.util.Logger;



public class SystemCheckPropertyDAO {
    private Logger log = Logger.getLogger(this.getClass());

    private SystemCheckPropertyDTO systemCheckPropertyDTO ;
    QueryStatement statement ;

    public SystemCheckPropertyDAO() {}

    public SystemCheckPropertyDAO( QueryStatement statement, SystemCheckPropertyDTO systemCheckPropertyDTO ) {
        this.statement = statement ;
        this.systemCheckPropertyDTO = systemCheckPropertyDTO ;
    }

    public ArrayList getList(QueryStatement statement ) {
        ArrayList list = new ArrayList() ;
        SystemCheckPropertyDTO systemCheckPropertyDTO = null ;
        ResultSet rs = null ;

        String strWhere = "";

        try {
            String queryString = "SELECT ID, Name, IPAddress, IPPort, LoginID, Password, X, Y, etc ";
            queryString += " From Table_SystemCheckProperty Where " ;
            queryString += strWhere;
            rs = statement.executeQuery(queryString) ;
            log.info(queryString) ;

            while ( rs.next() )  {
                systemCheckPropertyDTO = new SystemCheckPropertyDTO() ;
                systemCheckPropertyDTO.setID(rs.getInt(1));
                systemCheckPropertyDTO.setName(Str.CheckNullString(rs.getString(2)));
                systemCheckPropertyDTO.setIPAddress(Str.CheckNullString(rs.getString(3)));
                systemCheckPropertyDTO.setIPPort(rs.getInt(4));
                systemCheckPropertyDTO.setLoginID(Str.CheckNullString(rs.getString(5)));
                systemCheckPropertyDTO.setPassword(Str.CheckNullString(rs.getString(6)));
                systemCheckPropertyDTO.setX(rs.getInt(7));
                systemCheckPropertyDTO.setY(rs.getInt(8));
                systemCheckPropertyDTO.setEtc(Str.CheckNullString(rs.getString(9)));

                list.add(systemCheckPropertyDTO) ;
            }
        } catch(Exception e) {
            log.error("exception occurred > ", e);
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) {}
        }

        return list;
    }

    public boolean insert ( QueryStatement statement, SystemCheckPropertyDTO systemCheckPropertyDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString =   " INSERT INTO Table_SystemCheckProperty ";
            queryString += " (iD, name, iPAddress, iPPort, loginID, password, x, y, etc) ";
            queryString += " VALUES (" ;

            queryString += "  "+systemCheckPropertyDTO.getID()+", ";
            queryString += " '"+systemCheckPropertyDTO.getName()+"', ";
            queryString += " '"+systemCheckPropertyDTO.getIPAddress()+"', ";
            queryString += "  "+systemCheckPropertyDTO.getIPPort()+", ";
            queryString += " '"+systemCheckPropertyDTO.getLoginID()+"', ";
            queryString += " '"+systemCheckPropertyDTO.getPassword()+"', ";
            queryString += "  "+systemCheckPropertyDTO.getX()+", ";
            queryString += "  "+systemCheckPropertyDTO.getY()+", ";
            queryString += " '"+systemCheckPropertyDTO.getEtc()+"') ";

            log.info(queryString) ;
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }

    public boolean delete( QueryStatement statement,  SystemCheckPropertyDTO systemCheckPropertyDTO) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            queryString = " DELETE FROM Table_SystemCheckProperty WHERE ID = " + systemCheckPropertyDTO.getID()+ " " ;
            count = statement.executeUpdate(queryString);
            log.info(queryString) ;
        } catch (Exception e) {
            log.error("exception occurred > ", e);
            return false;
        }
        return true ;
    }


}
