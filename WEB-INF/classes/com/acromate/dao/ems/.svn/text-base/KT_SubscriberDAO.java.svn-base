package com.acromate.dao.ems;

import com.acromate.db.QueryStatement ;
import java.util.ArrayList;

import java.sql.ResultSet;

import com.acromate.dto.ems.KT_SubscriberDTO;
import com.acromate.util.Str;

public class KT_SubscriberDAO {

    private KT_SubscriberDTO subscriberDTO ;
    QueryStatement statement ;

    public KT_SubscriberDAO() {}

    public KT_SubscriberDAO( QueryStatement statement, KT_SubscriberDTO subscriberDTO ) {
        this.statement = statement ;
        this.subscriberDTO = subscriberDTO ;
    }

    public String checkServerIp(QueryStatement statement, String loginId) {
        ResultSet rs = null;

        String ip = "";
        try {
            String queryString = "SELECT Ip From TABLE_LINKCLIENTAUTH WHERE loginID = '" + loginId + "'";
            rs = statement.executeQuery(queryString) ;
            if ( rs.next() )  {
            	ip = Str.CheckNullString(rs.getString(1)).trim();
            }
        } catch(Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { e.printStackTrace(); }
        }
        return ip;
    }

    public KT_SubscriberDTO getDTO(QueryStatement statement, String loginId ) {
    	KT_SubscriberDTO subscriberDTO = null;
        ResultSet rs = null;

        try {
            String queryString = "SELECT Ip, RegisterDateTime ";
            queryString += " From TABLE_LINKCLIENTAUTH ";
            queryString += " WHERE loingID = '" + loginId + "'";

            rs = statement.executeQuery(queryString) ;

            if ( rs.next() )  {
            	subscriberDTO = new KT_SubscriberDTO() ;
            	subscriberDTO.setIp(Str.CheckNullString(rs.getString(1)).trim());
            	subscriberDTO.setRegisterDateTime(Str.CheckNullString(rs.getString(2)).trim());
            }
        } catch(Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { e.printStackTrace(); }
        }
        return subscriberDTO;
    }

    public ArrayList getList(QueryStatement statement) {
        ArrayList list = new ArrayList();
        KT_SubscriberDTO subscriberDTO = null;
        ResultSet rs = null;

        try {
            String queryString = "SELECT loingID, ip, RegisterDateTime";
            queryString += " From TABLE_LINKCLIENTAUTH ";
            System.out.println(queryString) ;
            rs = statement.executeQuery(queryString) ;

            while ( rs.next() )  {
            	subscriberDTO = new KT_SubscriberDTO() ;
            	subscriberDTO.setLoginID(Str.CheckNullString(rs.getString(1)).trim());
            	subscriberDTO.setIp(Str.CheckNullString(rs.getString(2)).trim());
            	subscriberDTO.setRegisterDateTime(Str.CheckNullString(rs.getString(3)).trim());

                list.add(subscriberDTO) ;
            }
        } catch(Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { e.printStackTrace(); }
        }

        return list;
    }

    public boolean insert ( QueryStatement statement, KT_SubscriberDTO subscriberDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString =   " INSERT INTO TABLE_LINKCLIENTAUTH ";
            queryString += " ( loginID, Ip, RegisterDateTime ) ";
            queryString += " VALUES (" ;

            queryString += " '"+subscriberDTO.getLoginID()+"', ";
            queryString += " '"+subscriberDTO.getIp()+"', ";
            queryString += " '"+subscriberDTO.getRegisterDateTime()+"') ";

            System.out.println(queryString) ;
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
        return true ;
    }

    public boolean update( QueryStatement statement, KT_SubscriberDTO subscriberDTO  ) {
    String queryString = "";
    int count = 0;
    try {
        if (statement == null) {
            return false;
        }

        queryString = " UPDATE TABLE_LINKCLIENTAUTH SET ";
        queryString += " Ip = '"+ subscriberDTO.getIp()+"', ";
        queryString += " RegisterDateTime = '"+ subscriberDTO.getRegisterDateTime()+"' ";
        queryString += " WHERE loginID = '" + subscriberDTO.getLoginID() +"' ";

        count = statement.executeUpdate(queryString);
        System.out.println(queryString) ;
    } catch (Exception e) {
        e.printStackTrace();
        return false;
    }
    return true ;
}

    public boolean delete( QueryStatement statement, KT_SubscriberDTO subscriberDTO ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            queryString = " DELETE FROM TABLE_LINKCLIENTAUTH WHERE loginID = '" + subscriberDTO.getLoginID()+ "' " ;

            count = statement.executeUpdate(queryString);
            System.out.println(queryString) ;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
        return true ;
    }

    public boolean deleteAll( QueryStatement statement ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            queryString = " DELETE FROM TABLE_LINKCLIENTAUTH " ;
            count = statement.executeUpdate(queryString);
            System.out.println(queryString) ;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
        return true ;
    }


}
