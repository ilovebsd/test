package com.acromate.dao.ems;

import com.acromate.db.QueryStatement ;
import java.util.ArrayList;
import com.acromate.util.Str;
import java.sql.ResultSet;
import com.acromate.dto.ems.PassWordPolicyDTO;


public class PassWordPolicyDAO {

    private PassWordPolicyDTO passWordPolicyDTO ;
    QueryStatement statement ;

    public PassWordPolicyDAO() {}

    public PassWordPolicyDAO( QueryStatement statement, PassWordPolicyDTO passWordPolicyDTO ) {
        this.statement = statement ;
        this.passWordPolicyDTO = passWordPolicyDTO ;
    }

    public PassWordPolicyDTO getDTO(QueryStatement statement, int nPasswordType ) {
        PassWordPolicyDTO passWordPolicyDTO = null;
        ResultSet rs = null;

        try {
            String queryString = "SELECT PasswordType, MinDigit, MaxDigit, CharacterType ";
            queryString += " From Table_PassWordPolicy ";
            queryString += " WHERE PasswordType = " + nPasswordType + " ";

            System.out.println(queryString) ;
            rs = statement.executeQuery(queryString) ;

            while ( rs.next() )  {
                passWordPolicyDTO = new PassWordPolicyDTO() ;
                passWordPolicyDTO.setPasswordType(rs.getInt(1));
                passWordPolicyDTO.setMinDigit(rs.getInt(2));
                passWordPolicyDTO.setMaxDigit(rs.getInt(3));
                passWordPolicyDTO.setCharacterType(rs.getInt(4));
            }
        } catch(Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { e.printStackTrace(); }
        }
        return passWordPolicyDTO;
    }


    public ArrayList getList(QueryStatement statement) {
        ArrayList list = new ArrayList();
        PassWordPolicyDTO passWordPolicyDTO = null;
        ResultSet rs = null;

        try {
            String queryString = "SELECT PasswordType, MinDigit, MaxDigit, CharacterType";
            queryString += " From Table_PassWordPolicy ";
            System.out.println(queryString) ;
            rs = statement.executeQuery(queryString) ;

            while ( rs.next() )  {
                passWordPolicyDTO = new PassWordPolicyDTO() ;
                passWordPolicyDTO.setPasswordType(rs.getInt(1));
                passWordPolicyDTO.setMinDigit(rs.getInt(2));
                passWordPolicyDTO.setMaxDigit(rs.getInt(3));
                passWordPolicyDTO.setCharacterType(rs.getInt(4));

                list.add(passWordPolicyDTO) ;
            }
        } catch(Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null) rs.close();
            } catch(Exception e) { e.printStackTrace(); }
        }

        return list;
    }

    public boolean insert ( QueryStatement statement, PassWordPolicyDTO passWordPolicyDTO  ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }

            queryString =   " INSERT INTO Table_PassWordPolicy ";
            queryString += " ( PasswordType, MinDigit, MaxDigit, CharacterType) ";
            queryString += " VALUES (" ;

            queryString += " "+passWordPolicyDTO.getPasswordType()+", ";
            queryString += " "+passWordPolicyDTO.getMinDigit()+", ";
            queryString += " "+passWordPolicyDTO.getMaxDigit()+", ";
            queryString += " "+passWordPolicyDTO.getCharacterType()+") ";

            System.out.println(queryString) ;
            count = statement.executeUpdate(queryString);
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
        return true ;
    }

    public boolean update( QueryStatement statement, PassWordPolicyDTO passWordPolicyDTO  ) {
    String queryString = "";
    int count = 0;
    try {
        if (statement == null) {
            return false;
        }

        queryString = " UPDATE Table_PassWordPolicy SET ";

        queryString += " MinDigit = "+ passWordPolicyDTO.getMinDigit()+", ";
        queryString += " MaxDigit = "+ passWordPolicyDTO.getMaxDigit()+", ";
        queryString += " CharacterType = "+ passWordPolicyDTO.getCharacterType()+" ";
        queryString += " WHERE PasswordType = " + passWordPolicyDTO.getPasswordType() +" ";

        count = statement.executeUpdate(queryString);
        System.out.println(queryString) ;
    } catch (Exception e) {
        e.printStackTrace();
        return false;
    }
    return true ;
}

    public boolean delete( QueryStatement statement,  PassWordPolicyDTO passWordPolicyDTO) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            queryString = " DELETE FROM Table_PassWordPolicy WHERE PasswordType = " + passWordPolicyDTO.getPasswordType()+ " " ;

            count = statement.executeUpdate(queryString);
            System.out.println(queryString) ;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
        return true ;
    }

    public boolean deleteAll( QueryStatement statement ) {
        String queryString = "";
        int count = 0;
        try {
            if (statement == null) {
                return false;
            }
            queryString = " DELETE FROM Table_PassWordPolicy " ;
            count = statement.executeUpdate(queryString);
            System.out.println(queryString) ;
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
        return true ;
    }


}
