package com.acromate.dataio.noms ;

import java.util.ArrayList;

import org.apache.log4j.Logger;
import com.acromate.data.DataIO;
import com.acromate.data.ListIO;

public class EquipmentListDIO extends ListIO {
    private Logger log = Logger.getLogger(this.getClass());

    private int    errorcode;
    private StringBuilder result = new StringBuilder();
    private StringBuilder failReason = new StringBuilder();

    public String getResult() { return result.toString() ; }
    public void   setResult( String result ) {
        this.result.delete(0,this.result.length());
        this.result.append(result) ;
    }

    public String getFailReason() { return failReason.toString() ; }
    public void   setFailReason( String failReason ) {
        this.failReason.delete(0,this.failReason.length());
        this.failReason.append(failReason) ;
    }


    protected int setFieldData(String field, String value) {
        StringBuilder temp = new StringBuilder(field.toLowerCase());
        if(compareFieldID(temp, "result".toLowerCase()) == true) {
            return setString(result, value);
        }
        if(compareFieldID(temp, "failReason".toLowerCase()) == true) {
            return setString(failReason, value);
        }
        int result = super.setFieldData( field,  value);
        if (result == 0 ) return result;
        log.error("EquipmentListDIO - Not founded field :" + field);
        return 0;
    }

    protected int getFieldData(String field, Index idx, StringBuilder value) {
        boolean resultVal = false;
        StringBuilder fldAlias;
        if(field != null && !field.equals("")) resultVal = true;
        if(field == null) {
            fldAlias = new StringBuilder(); fldAlias.append("");
        } else {
           fldAlias  = new StringBuilder(); fldAlias.append(field);
        }
        if(compareFieldID(fldAlias, "result", idx, value) == true) {
            errorcode = getString(result.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "failReason", idx, value) == true) {
            errorcode = getString(failReason.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        return super.getFieldData(field, idx, value);
    }
    protected DataIO newListNode() {
       return new EquipmentDIO();
    }

	public String toFailXmlString( String blank ) {
        StringBuilder xml = new StringBuilder() ;
        xml.append("   <result>" + getResult() + "</result>\n");
        xml.append("   <failReason>" + getFailReason() + "</failReason>\n");
        return xml.toString();

    }
    public String toXmlString( String reqEquipmentID ) {
        StringBuilder xml = new StringBuilder() ;
        System.out.println(getResult());
        xml.append("   <result>" + getResult() + "</result>\n");
        xml.append("   <failReason>" + getFailReason() + "</failReason>\n");

        int size = 0;
        xml.append("      <equipmentList>\n");
        ArrayList equipList = getList();
        if (equipList != null) {
        	size = equipList.size();
        	for (int i = 0; i < size; i++) {
        		EquipmentDIO equip = (EquipmentDIO)equipList.get(i);
        		if (reqEquipmentID == null
        				|| reqEquipmentID.length() == 0
        				|| reqEquipmentID.equals(equip.getEquipmentId())) {
	        		xml.append("            <item>\n");
	        		String str = equip.toXmlString("         ");
	        		xml.append(str);
	        		xml.append("            </item>\n"); //
        		}
        	}
        }
        xml.append("      </equipmentList>\n"); //

        return xml.toString();
    }
}
