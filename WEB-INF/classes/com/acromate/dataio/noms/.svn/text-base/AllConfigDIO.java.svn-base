package com.acromate.dataio.noms ;

import java.util.ArrayList;

import org.apache.log4j.Logger;
import com.acromate.data.DataIO;

public class AllConfigDIO extends DataIO {
    private Logger log = Logger.getLogger(this.getClass());

    private int    errorcode;
    private StringBuilder result = new StringBuilder();
    private StringBuilder failReason = new StringBuilder();
    private StringBuilder equipmentId = new StringBuilder();
    private CardInfoListDIO cardInfoList = new CardInfoListDIO();
    private PortInfoListDIO portInfoList = new PortInfoListDIO();

    public String getResult() { return result.toString() ; }
    public void   setResult( String result ) {
        this.result.delete(0,this.result.length());
        this.result.append(result) ;
    }

    public String getFailReason() { return failReason.toString() ; }
    public void   setFailReason( String failReason ) {
        this.failReason.delete(0,this.failReason.length());
        this.failReason.append(failReason) ;
    }

    public String getEquipmentId() { return equipmentId.toString() ; }
    public void   setEquipmentId( String equipmentId ) {
        this.equipmentId.delete(0,this.equipmentId.length());
        this.equipmentId.append(equipmentId) ;
    }

    public CardInfoListDIO    getCardInfoListDIO() { return cardInfoList ; }
    public void   setCardInfoListDIO( CardInfoListDIO cardInfoList ) { this.cardInfoList = cardInfoList ; }

    public PortInfoListDIO    getPortInfoListDIO() { return portInfoList ; }
    public void   setPortInfoListDIO( PortInfoListDIO portInfoList ) { this.portInfoList = portInfoList ; }


    protected int setFieldData(String field, String value) {
        StringBuilder temp = new StringBuilder(field.toLowerCase());
        if(compareFieldID(temp, "result".toLowerCase()) == true) {
            return setString(result, value);
        }
        if(compareFieldID(temp, "failReason".toLowerCase()) == true) {
            return setString(failReason, value);
        }
        if(compareFieldID(temp, "equipmentId".toLowerCase()) == true) {
            return setString(equipmentId, value);
        }
        if(compareFieldID(temp, "cardInfoList".toLowerCase()) == true) {
            return cardInfoList.setParam(temp.toString(), value);
        }
        if(compareFieldID(temp, "portInfoList".toLowerCase()) == true) {
            return portInfoList.setParam(temp.toString(), value);
        }
        log.error("AllConfigDIO - Not founded field :" + field);
        return 0;
    }

    protected int getFieldData(String field, Index idx, StringBuilder value) {
        boolean resultVal = false;
        StringBuilder fldAlias;
        if(field != null && !field.equals("")) resultVal = true;
        if(field == null) {
            fldAlias = new StringBuilder(); fldAlias.append("");
        } else {
           fldAlias  = new StringBuilder(); fldAlias.append(field);
        }
        if(compareFieldID(fldAlias, "result", idx, value) == true) {
            errorcode = getString(result.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "failReason", idx, value) == true) {
            errorcode = getString(failReason.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "equipmentId", idx, value) == true) {
            errorcode = getString(equipmentId.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "cardInfoList", idx, value) == true) {
            errorcode = cardInfoList.getParam(fldAlias.toString(), value);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "portInfoList", idx, value) == true) {
            errorcode = portInfoList.getParam(fldAlias.toString(), value);
            if(resultVal || errorcode < 0) return errorcode;
        }
        return(0);
    }
	public String toFailXmlString( String blank ) {
        StringBuilder xml = new StringBuilder() ;
        xml.append("   <result>" + getResult() + "</result>\n");
        xml.append("   <failReason>" + getFailReason() + "</failReason>\n");
        return xml.toString();

    }
    public String toXmlString( String blank ) {
        StringBuilder xml = new StringBuilder() ;
        xml.append("<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<AllConfig>\n") ;
        int size = 0;
        xml.append("      <cardInfoList>\n");
        ArrayList arrCardList = cardInfoList.getList();
        if (arrCardList != null) {
        	size = arrCardList.size();
        	for (int i = 0; i < size; i++) {
        		CardInfoDIO card = (CardInfoDIO)arrCardList.get(i);
        		xml.append("            <item>\n");
        		String str = card.toXmlString("         ");
        		xml.append(str);
        		xml.append("            </item>\n"); //
        	}
        }
        xml.append("      </cardInfoList>\n"); //
        size = 0;
        xml.append("      <portInfoList>\n");
        ArrayList arrPortList = portInfoList.getList();
        if (arrPortList != null) {
        	size = arrPortList.size();
        	for (int i = 0; i < size; i++) {
        		PortInfoDIO port = (PortInfoDIO)arrPortList.get(i);
        		xml.append("            <item>\n");
        		String str = port.toXmlString("         ");
        		xml.append(str);
        		xml.append("            </item>\n"); //
        	}
        }
        xml.append("      </portInfoList>\n"); //
        xml.append("</AllConfig>\n") ;

        return xml.toString();
    }
}
