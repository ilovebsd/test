package com.acromate.dataio.noms ;

import com.acromate.data.DataIO;
import com.acromate.util.Str;
import com.acromate.util.Logger;

public class SipProtocolDIO extends DataIO {
    private Logger log = Logger.getLogger(this.getClass());

    private int    errorcode;
    private StringBuilder emsId = new StringBuilder();
    private StringBuilder equipmentId = new StringBuilder();
    private StringBuilder collectionTime = new StringBuilder();
    private StringBuilder statisticstype = new StringBuilder();
    private StringBuilder type = new StringBuilder();
    private StringBuilder ne_ip = new StringBuilder();
    private int    r_succ ;
    private int    r_fail ;
    private int    r_100 ;

    public String getEmsId() { return emsId.toString() ; }
    public void   setEmsId( String emsId ) {
        this.emsId.delete(0,this.emsId.length());
        this.emsId.append(emsId) ;
    }

    public String getEquipmentId() { return equipmentId.toString() ; }
    public void   setEquipmentId( String equipmentId ) {
        this.equipmentId.delete(0,this.equipmentId.length());
        this.equipmentId.append(equipmentId) ;
    }

    public String getCollectionTime() { return collectionTime.toString() ; }
    public void   setCollectionTime( String collectionTime ) {
        this.collectionTime.delete(0,this.collectionTime.length());
        this.collectionTime.append(collectionTime) ;
    }

    public String getStatisticstype() { return statisticstype.toString() ; }
    public void   setStatisticstype( String statisticstype ) {
        this.statisticstype.delete(0,this.statisticstype.length());
        this.statisticstype.append(statisticstype) ;
    }

    public String getType() { return type.toString() ; }
    public void   setType( String type ) {
        this.type.delete(0,this.type.length());
        this.type.append(type) ;
    }

    public String getNe_ip() { return ne_ip.toString() ; }
    public void   setNe_ip( String ne_ip ) {
        this.ne_ip.delete(0,this.ne_ip.length());
        this.ne_ip.append(ne_ip) ;
    }

    public int    getR_succ() { return r_succ ; }
    public void   setR_succ( int r_succ ) { this.r_succ = r_succ ; }

    public int    getR_fail() { return r_fail ; }
    public void   setR_fail( int r_fail ) { this.r_fail = r_fail ; }

    public int    getR_100() { return r_100 ; }
    public void   setR_100( int r_100 ) { this.r_100 = r_100 ; }


    protected int setFieldData(String field, String value) {
        StringBuilder temp = new StringBuilder(field.toLowerCase());
        if(compareFieldID(temp, "emsId".toLowerCase()) == true) {
            return setString(emsId, value);
        }
        if(compareFieldID(temp, "equipmentId".toLowerCase()) == true) {
            return setString(equipmentId, value);
        }
        if(compareFieldID(temp, "collectionTime".toLowerCase()) == true) {
            return setString(collectionTime, value);
        }
        if(compareFieldID(temp, "statisticstype".toLowerCase()) == true) {
            return setString(statisticstype, value);
        }
        if(compareFieldID(temp, "type".toLowerCase()) == true) {
            return setString(type, value);
        }
        if(compareFieldID(temp, "ne_ip".toLowerCase()) == true) {
            return setString(ne_ip, value);
        }
        if(compareFieldID(temp, "r_succ".toLowerCase()) == true) {
            if(!value.equals("")) r_succ = Str.CheckNullInt(value);
            return 0;
        }
        if(compareFieldID(temp, "r_fail".toLowerCase()) == true) {
            if(!value.equals("")) r_fail = Str.CheckNullInt(value);
            return 0;
        }
        if(compareFieldID(temp, "r_100".toLowerCase()) == true) {
            if(!value.equals("")) r_100 = Str.CheckNullInt(value);
            return 0;
        }
        log.error("SipProtocolDIO - Not founded field :" + field);
        return 0;
    }

    protected int getFieldData(String field, Index idx, StringBuilder value) {
        boolean resultVal = false;
        StringBuilder fldAlias;
        if(field != null && !field.equals("")) resultVal = true;
        if(field == null) {
            fldAlias = new StringBuilder(); fldAlias.append("");
        } else {
           fldAlias  = new StringBuilder(); fldAlias.append(field);
        }
        if(compareFieldID(fldAlias, "emsId", idx, value) == true) {
            errorcode = getString(emsId.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "equipmentId", idx, value) == true) {
            errorcode = getString(equipmentId.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "collectionTime", idx, value) == true) {
            errorcode = getString(collectionTime.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "statisticstype", idx, value) == true) {
            errorcode = getString(statisticstype.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "type", idx, value) == true) {
            errorcode = getString(type.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "ne_ip", idx, value) == true) {
            errorcode = getString(ne_ip.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "r_succ", idx, value) == true) {
            errorcode = getInteger(r_succ, value);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "r_fail", idx, value) == true) {
            errorcode = getInteger(r_fail, value);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "r_100", idx, value) == true) {
            errorcode = getInteger(r_100, value);
            if(resultVal || errorcode < 0) return errorcode;
        }
        return(0);
    }

    public String toXmlString( String blank, String emsId, String eqId, String time ) {
		StringBuilder xml = new StringBuilder();

		xml.append ( blank+"   <emsId>" + emsId + "</emsId>\n") ;
		xml.append ( blank+"   <equipmentId>" + eqId + "</equipmentId>\n") ;
		xml.append ( blank+"   <collectionTime>" + time + "</collectionTime>\n") ;
		xml.append ( blank+"   <statisticstype>" + getStatisticstype() + "</statisticstype>\n") ;
		xml.append ( blank+"   <type>" + getType() + "</type>\n") ;
		xml.append ( blank+"   <ne_ip>" + getNe_ip() + "</ne_ip>\n") ;
		xml.append ( blank+"   <r_succ>" + getR_succ() + "</r_succ>\n") ;
		xml.append ( blank+"   <r_fail>" + getR_fail() + "</r_fail>\n") ;
		xml.append ( blank+"   <r_100>" + getR_100() + "</r_100>\n") ;

		return xml.toString();
    }
}
