package com.acromate.dataio.noms ;

import com.acromate.data.DataIO;
import com.acromate.util.Str;
import com.acromate.util.Logger;

public class RegistrationDIO extends DataIO {
    private Logger log = Logger.getLogger(this.getClass());

    private int    errorcode;
    private StringBuilder emsId = new StringBuilder();
    private StringBuilder equipmentId = new StringBuilder();
    private StringBuilder collectionTime = new StringBuilder();
    private StringBuilder type = new StringBuilder();
    private int    attempt ;
    private int    success ;
    private int    c_ratio ;

    public String getEmsId() { return emsId.toString() ; }
    public void   setEmsId( String emsId ) {
        this.emsId.delete(0,this.emsId.length());
        this.emsId.append(emsId) ;
    }

    public String getEquipmentId() { return equipmentId.toString() ; }
    public void   setEquipmentId( String equipmentId ) {
        this.equipmentId.delete(0,this.equipmentId.length());
        this.equipmentId.append(equipmentId) ;
    }

    public String getCollectionTime() { return collectionTime.toString() ; }
    public void   setCollectionTime( String collectionTime ) {
        this.collectionTime.delete(0,this.collectionTime.length());
        this.collectionTime.append(collectionTime) ;
    }

    public String getType() { return type.toString() ; }
    public void   setType( String type ) {
        this.type.delete(0,this.type.length());
        this.type.append(type) ;
    }

    public int    getAttempt() { return attempt ; }
    public void   setAttempt( int attempt ) { this.attempt = attempt ; }

    public int    getSuccess() { return success ; }
    public void   setSuccess( int success ) { this.success = success ; }

    public int    getC_ratio() { return c_ratio ; }
    public void   setC_ratio( int c_ratio ) { this.c_ratio = c_ratio ; }


    protected int setFieldData(String field, String value) {
        StringBuilder temp = new StringBuilder(field.toLowerCase());
        if(compareFieldID(temp, "emsId".toLowerCase()) == true) {
            return setString(emsId, value);
        }
        if(compareFieldID(temp, "equipmentId".toLowerCase()) == true) {
            return setString(equipmentId, value);
        }
        if(compareFieldID(temp, "collectionTime".toLowerCase()) == true) {
            return setString(collectionTime, value);
        }
        if(compareFieldID(temp, "type".toLowerCase()) == true) {
            return setString(type, value);
        }
        if(compareFieldID(temp, "attempt".toLowerCase()) == true) {
            if(!value.equals("")) attempt = Str.CheckNullInt(value);
            return 0;
        }
        if(compareFieldID(temp, "success".toLowerCase()) == true) {
            if(!value.equals("")) success = Str.CheckNullInt(value);
            return 0;
        }
        if(compareFieldID(temp, "c_ratio".toLowerCase()) == true) {
            if(!value.equals("")) c_ratio = Str.CheckNullInt(value);
            return 0;
        }
        log.error("RegistrationDIO - Not founded field :" + field);
        return 0;
    }

    protected int getFieldData(String field, Index idx, StringBuilder value) {
        boolean resultVal = false;
        StringBuilder fldAlias;
        if(field != null && !field.equals("")) resultVal = true;
        if(field == null) {
            fldAlias = new StringBuilder(); fldAlias.append("");
        } else {
           fldAlias  = new StringBuilder(); fldAlias.append(field);
        }
        if(compareFieldID(fldAlias, "emsId", idx, value) == true) {
            errorcode = getString(emsId.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "equipmentId", idx, value) == true) {
            errorcode = getString(equipmentId.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "collectionTime", idx, value) == true) {
            errorcode = getString(collectionTime.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "type", idx, value) == true) {
            errorcode = getString(type.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "attempt", idx, value) == true) {
            errorcode = getInteger(attempt, value);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "success", idx, value) == true) {
            errorcode = getInteger(success, value);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "c_ratio", idx, value) == true) {
            errorcode = getInteger(c_ratio, value);
            if(resultVal || errorcode < 0) return errorcode;
        }
        return(0);
    }

    public String toXmlString( String blank, String emsId, String eqId, String time ) {
		StringBuilder xml = new StringBuilder();
		xml.append ( blank+"   <emsId>" + emsId + "</emsId>\n") ;
		xml.append ( blank+"   <equipmentId>" + eqId + "</equipmentId>\n") ;
		xml.append ( blank+"   <collectionTime>" + time + "</collectionTime>\n") ;
		xml.append ( blank+"   <type>" + getType() + "</type>\n") ;
		xml.append ( blank+"   <attempt>" + getAttempt() + "</attempt>\n") ;
		xml.append ( blank+"   <success>" + getSuccess() + "</success>\n") ;
		xml.append ( blank+"   <c_ratio>" + getC_ratio() + "</c_ratio>\n") ;

		return xml.toString();
    }
}
