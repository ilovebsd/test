package com.acromate.dataio.server.router.wan ;

import com.acromate.util.Logger;
import com.acromate.data.DataIO;

public class MacAddressDIO extends DataIO {
    private Logger log = Logger.getLogger(this.getClass());

    private int    errorcode;
    private StringBuilder mac = new StringBuilder();
    private StringBuilder defaultMac = new StringBuilder();

    public String getMac() { return mac.toString() ; }
    public void   setMac( String mac ) {
        this.mac.delete(0,this.mac.length());
        this.mac.append(mac) ;
    }

    public String getDefaultMac() { return defaultMac.toString() ; }
    public void   setDefaultMac( String defaultMac ) {
        this.defaultMac.delete(0,this.defaultMac.length());
        this.defaultMac.append(defaultMac) ;
    }

    public DataIO getFieldObject(String field) {
        if(field != null && field.trim().length() > 0) {
        StringBuilder temp = new StringBuilder(field);
        }   return super.getFieldObject(field);
    }

    protected int setFieldData(String field, String value) {
        StringBuilder temp = new StringBuilder(field.toLowerCase());
        if(compareFieldID(temp, "mac".toLowerCase()) == true) {
        	this.mac.delete(0,this.mac.length());
            return setString(mac, value);
        }
        if(compareFieldID(temp, "defaultMac".toLowerCase()) == true) {
        	this.defaultMac.delete(0,this.defaultMac.length());
            return setString(defaultMac, value);
        }
        log.error("MacAddressDIO - Not founded field :" + field);
        return 0;
    }

    protected int getFieldData(String field, Index idx, StringBuilder value) {
        boolean resultVal = false;
        StringBuilder fldAlias;
        if(field != null && !field.equals("")) resultVal = true;
        if(field == null) {
            fldAlias = new StringBuilder(); fldAlias.append("");
        } else {
           fldAlias  = new StringBuilder(); fldAlias.append(field);
        }
        if(compareFieldID(fldAlias, "mac", idx, value) == true) {
            errorcode = getString(mac.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "defaultMac", idx, value) == true) {
            errorcode = getString(defaultMac.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        return(0);
    }
    public Object callMethod(String method, Object... argument) {
        Object result = null;
        if(method == null && method.length() <= 0) return result;
        if(method.equals("save") == true) {
            return save();
        }else if(method.equals("load") == true) {
            return load();
        }else if(method.equals("reboot") == true) {
            return reboot();
        }else if(method.equals("restart") == true) {
            return restart();
        }
        return result;
    }
    public boolean save(){return true;}
    public boolean load(){return true;}
    public boolean restart(){return true;}
	public boolean reboot(){return true;}
}
