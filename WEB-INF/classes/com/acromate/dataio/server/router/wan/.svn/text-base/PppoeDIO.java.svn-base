package com.acromate.dataio.server.router.wan ;

import com.acromate.util.Logger;
import com.acromate.data.DataIO;

public class PppoeDIO extends DataIO {
    private Logger log = Logger.getLogger(this.getClass());

    private int    errorcode;
    private StringBuilder userName = new StringBuilder();
    private StringBuilder passwd = new StringBuilder();
    private StringBuilder mtu = new StringBuilder();
    private StringBuilder primDns = new StringBuilder();
    private StringBuilder secndDns = new StringBuilder();

    public String getUserName() { return userName.toString() ; }
    public void   setUserName( String userName ) {
        this.userName.delete(0,this.userName.length());
        this.userName.append(userName) ;
    }

    public String getPasswd() { return passwd.toString() ; }
    public void   setPasswd( String passwd ) {
        this.passwd.delete(0,this.passwd.length());
        this.passwd.append(passwd) ;
    }

    public String getMtu() { return mtu.toString() ; }
    public void   setMtu( String mtu ) {
        this.mtu.delete(0,this.mtu.length());
        this.mtu.append(mtu) ;
    }

    public String getPrimDns() { return primDns.toString() ; }
    public void   setPrimDns( String primDns ) {
        this.primDns.delete(0,this.primDns.length());
        this.primDns.append(primDns) ;
    }

    public String getSecndDns() { return secndDns.toString() ; }
    public void   setSecndDns( String secndDns ) {
        this.secndDns.delete(0,this.secndDns.length());
        this.secndDns.append(secndDns) ;
    }

    public DataIO getFieldObject(String field) {
        if(field != null && field.trim().length() > 0) {
        StringBuilder temp = new StringBuilder(field);
        }   return super.getFieldObject(field);
    }

    protected int setFieldData(String field, String value) {
        StringBuilder temp = new StringBuilder(field.toLowerCase());
        if(compareFieldID(temp, "userName".toLowerCase()) == true) {
        	this.userName.delete(0,this.userName.length());
            return setString(userName, value);
        }
        if(compareFieldID(temp, "passwd".toLowerCase()) == true) {
        	this.passwd.delete(0,this.passwd.length());
            return setString(passwd, value);
        }
        if(compareFieldID(temp, "mtu".toLowerCase()) == true) {
        	this.mtu.delete(0,this.mtu.length());
            return setString(mtu, value);
        }
        if(compareFieldID(temp, "primDns".toLowerCase()) == true) {
        	this.primDns.delete(0,this.primDns.length());
            return setString(primDns, value);
        }
        if(compareFieldID(temp, "secndDns".toLowerCase()) == true) {
        	this.secndDns.delete(0,this.secndDns.length());
            return setString(secndDns, value);
        }
        log.error("PppoeDIO - Not founded field :" + field);
        return 0;
    }

    protected int getFieldData(String field, Index idx, StringBuilder value) {
        boolean resultVal = false;
        StringBuilder fldAlias;
        if(field != null && !field.equals("")) resultVal = true;
        if(field == null) {
            fldAlias = new StringBuilder(); fldAlias.append("");
        } else {
           fldAlias  = new StringBuilder(); fldAlias.append(field);
        }
        if(compareFieldID(fldAlias, "userName", idx, value) == true) {
            errorcode = getString(userName.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "passwd", idx, value) == true) {
            errorcode = getString(passwd.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "mtu", idx, value) == true) {
            errorcode = getString(mtu.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "primDns", idx, value) == true) {
            errorcode = getString(primDns.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "secndDns", idx, value) == true) {
            errorcode = getString(secndDns.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        return(0);
    }
    public Object callMethod(String method, Object... argument) {
        Object result = null;
        if(method == null && method.length() <= 0) return result;
        if(method.equals("save") == true) {
            return save();
        }
        if(method.equals("load") == true) {
            return load();
        }
        return result;
    }
    public boolean save(){return true;}
    public boolean load(){return true;}
}
