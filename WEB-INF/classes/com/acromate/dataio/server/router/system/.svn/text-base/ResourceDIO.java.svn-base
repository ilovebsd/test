package com.acromate.dataio.server.router.system ;

import com.acromate.util.Logger;
import com.acromate.data.DataIO;
import com.acromate.system.hardware.CenteralUnit;
import com.acromate.system.hardware.Memory;
import com.acromate.system.hardware.HardDisk;

public class ResourceDIO extends DataIO {
    private Logger log = Logger.getLogger(this.getClass());

    private int    errorcode;
    private CenteralUnit cpu = new CenteralUnit();
    private Memory memory = new Memory();
    private HardDisk disk = new HardDisk(null);

    public CenteralUnit    getCpuDIO() { return cpu ; }
    public void   setCpuDIO( CenteralUnit cpu ) { this.cpu = cpu ; }

    public Memory    getMemoryDIO() { return memory ; }
    public void   setMemoryDIO( Memory memory ) { this.memory = memory ; }

    public HardDisk    getDiskDIO() { return disk ; }
    public void   setDiskDIO( HardDisk disk ) { this.disk = disk ; }

    public DataIO getFieldObject(String field) {
        if(field != null && field.trim().length() > 0) {
        StringBuilder temp = new StringBuilder(field);
        if(compareFieldID(temp, "cpu") == true)
            return cpu.getFieldObject( temp.toString() ) ;
        if(compareFieldID(temp, "memory") == true)
            return memory.getFieldObject( temp.toString() ) ;
        if(compareFieldID(temp, "disk") == true)
            return disk.getFieldObject( temp.toString() ) ;
        }   return super.getFieldObject(field);
    }

    protected int setFieldData(String field, String value) {
        StringBuilder temp = new StringBuilder(field.toLowerCase());
        if(compareFieldID(temp, "cpu".toLowerCase()) == true) {
            return cpu.setParam(temp.toString(), value);
        }
        if(compareFieldID(temp, "memory".toLowerCase()) == true) {
            return memory.setParam(temp.toString(), value);
        }
        if(compareFieldID(temp, "disk".toLowerCase()) == true) {
            return disk.setParam(temp.toString(), value);
        }
        log.error("ResourceDIO - Not founded field :" + field);
        return 0;
    }

    protected int getFieldData(String field, Index idx, StringBuilder value) {
        boolean resultVal = false;
        StringBuilder fldAlias;
        if(field != null && !field.equals("")) resultVal = true;
        if(field == null) {
            fldAlias = new StringBuilder(); fldAlias.append("");
        } else {
           fldAlias  = new StringBuilder(); fldAlias.append(field);
        }
        if(compareFieldID(fldAlias, "cpu", idx, value) == true) {
            errorcode = cpu.getParam(fldAlias.toString(), value);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "memory", idx, value) == true) {
            errorcode = memory.getParam(fldAlias.toString(), value);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "disk", idx, value) == true) {
            errorcode = disk.getParam(fldAlias.toString(), value);
            if(resultVal || errorcode < 0) return errorcode;
        }
        return(0);
    }
}
