package com.acromate.dataio.server.router.wireless ;

import com.acromate.util.Logger;
import com.acromate.data.DataIO;

public class SettingDIO extends DataIO {
    private Logger log = Logger.getLogger(this.getClass());

    private int    errorcode;
    private StringBuilder enable = new StringBuilder();
    private StringBuilder mode = new StringBuilder();
    private StringBuilder ssid = new StringBuilder();
    private StringBuilder ssidBroadcast = new StringBuilder();
    private StringBuilder channelRange = new StringBuilder();
    private StringBuilder country = new StringBuilder();
    private StringBuilder rejion = new StringBuilder();
    private StringBuilder channel = new StringBuilder();
    private StringBuilder wmm = new StringBuilder();

    public String getEnable() { return enable.toString() ; }
    public void   setEnable( String enable ) {
        this.enable.delete(0,this.enable.length());
        this.enable.append(enable) ;
    }

    public String getMode() { return mode.toString() ; }
    public void   setMode( String mode ) {
        this.mode.delete(0,this.mode.length());
        this.mode.append(mode) ;
    }

    public String getSsid() { return ssid.toString() ; }
    public void   setSsid( String ssid ) {
        this.ssid.delete(0,this.ssid.length());
        this.ssid.append(ssid) ;
    }

    public String getSsidBroadcast() { return ssidBroadcast.toString() ; }
    public void   setSsidBroadcast( String ssidBroadcast ) {
        this.ssidBroadcast.delete(0,this.ssidBroadcast.length());
        this.ssidBroadcast.append(ssidBroadcast) ;
    }

    public String getChannelRange() { return channelRange.toString() ; }
    public void   setChannelRange( String channelRange ) {
        this.channelRange.delete(0,this.channelRange.length());
        this.channelRange.append(channelRange) ;
    }

    public String getCountry() { return country.toString() ; }
    public void   setCountry( String country ) {
        this.country.delete(0,this.country.length());
        this.country.append(country) ;
    }

    public String getRejion() { return rejion.toString() ; }
    public void   setRejion( String rejion ) {
        this.rejion.delete(0,this.rejion.length());
        this.rejion.append(rejion) ;
    }

    public String getChannel() { return channel.toString() ; }
    public void   setChannel( String channel ) {
        this.channel.delete(0,this.channel.length());
        this.channel.append(channel) ;
    }

    public String getWmm() { return wmm.toString() ; }
    public void   setWmm( String wmm ) {
        this.wmm.delete(0,this.wmm.length());
        this.wmm.append(wmm) ;
    }

    public DataIO getFieldObject(String field) {
        if(field != null && field.trim().length() > 0) {
        StringBuilder temp = new StringBuilder(field);
        }   return super.getFieldObject(field);
    }

    protected int setFieldData(String field, String value) {
        StringBuilder temp = new StringBuilder(field.toLowerCase());
        if(compareFieldID(temp, "enable".toLowerCase()) == true) {
        	this.enable.delete(0,this.enable.length());
            return setString(enable, value);
        }
        if(compareFieldID(temp, "mode".toLowerCase()) == true) {
        	this.mode.delete(0,this.mode.length());
            return setString(mode, value);
        }
        if(compareFieldID(temp, "ssid".toLowerCase()) == true) {
        	this.ssid.delete(0,this.ssid.length());
            return setString(ssid, value);
        }
        if(compareFieldID(temp, "ssidBroadcast".toLowerCase()) == true) {
        	this.ssidBroadcast.delete(0,this.ssidBroadcast.length());
            return setString(ssidBroadcast, value);
        }
        if(compareFieldID(temp, "channelRange".toLowerCase()) == true) {
        	this.channelRange.delete(0,this.channelRange.length());
            return setString(channelRange, value);
        }
        if(compareFieldID(temp, "country".toLowerCase()) == true) {
        	this.country.delete(0,this.country.length());
            return setString(country, value);
        }
        if(compareFieldID(temp, "rejion".toLowerCase()) == true) {
        	this.rejion.delete(0,this.rejion.length());
            return setString(rejion, value);
        }
        if(compareFieldID(temp, "channel".toLowerCase()) == true) {
        	this.channel.delete(0,this.channel.length());
            return setString(channel, value);
        }
        if(compareFieldID(temp, "wmm".toLowerCase()) == true) {
        	this.wmm.delete(0,this.wmm.length());
            return setString(wmm, value);
        }
        log.error("SettingDIO - Not founded field :" + field);
        return 0;
    }

    protected int getFieldData(String field, Index idx, StringBuilder value) {
        boolean resultVal = false;
        StringBuilder fldAlias;
        if(field != null && !field.equals("")) resultVal = true;
        if(field == null) {
            fldAlias = new StringBuilder(); fldAlias.append("");
        } else {
           fldAlias  = new StringBuilder(); fldAlias.append(field);
        }
        if(compareFieldID(fldAlias, "enable", idx, value) == true) {
            errorcode = getString(enable.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "mode", idx, value) == true) {
            errorcode = getString(mode.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "ssid", idx, value) == true) {
            errorcode = getString(ssid.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "ssidBroadcast", idx, value) == true) {
            errorcode = getString(ssidBroadcast.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "channelRange", idx, value) == true) {
            errorcode = getString(channelRange.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "country", idx, value) == true) {
            errorcode = getString(country.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "rejion", idx, value) == true) {
            errorcode = getString(rejion.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "channel", idx, value) == true) {
            errorcode = getString(channel.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        if(compareFieldID(fldAlias, "wmm", idx, value) == true) {
            errorcode = getString(wmm.toString(), value, !resultVal);
            if(resultVal || errorcode < 0) return errorcode;
        }
        return(0);
    }
    public Object callMethod(String method, Object... argument) {
        Object result = null;
        if(method == null && method.length() <= 0) return result;
        if(method.equals("save") == true) {
            return save();
        }else if(method.equals("load") == true) {
            return load();
        }else if(method.equals("reboot") == true) {
            return reboot();
        }else if(method.equals("restart") == true) {
            return restart();
        }
        else if(method.equals("stop") == true) {
            return stop();
        }
        return result;
    }
    public boolean save(){return true;}
    public boolean load(){return true;}
    public boolean restart(){return true;}
    public boolean reboot(){return true;}
    public boolean stop(){return true;}
}
