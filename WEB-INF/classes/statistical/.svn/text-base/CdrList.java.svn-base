package statistical;

import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import acromate.common.util.Str;
import acromate.common.util.StringUtil;
import com.acromate.driver.db.DataStatement;

import dto.CdrDTO;

public class CdrList {
	/*
	 * 일일 누적 통화 시간 조회
	 */
	public List getDailyList(DataStatement stmt) {
		CdrDTO cdrDTO;
        List<CdrDTO> cdrList = new ArrayList<CdrDTO>();
        
        String sql = "\n SELECT a.todate, sum(a.callee) AS calleesum, sum(a.calleetime) AS calleetimesum, ";
        sql = sql +  "\n        sum(a.caller) AS callersum, sum(a.callertime) AS callertimesum, " ;
        sql = sql +  "\n        sum(a.total) AS totalsum, sum(a.totaltime) AS totaltimesum " ;
        sql = sql +  "\n   FROM (SELECT to_char(startTime, 'yyyy-mm-dd') AS todate " ;
        sql = sql +  "\n               ,(case when cdrtype = '1' then 1 else 0 end) AS callee ";
        sql = sql +  "\n               ,(case when cdrtype = '1' then callingtime else 0 end) AS calleetime ";
        sql = sql +  "\n               ,(case when cdrtype = '2' then 1 else 0 end) AS caller ";
        sql = sql +  "\n               ,(case when cdrtype = '2' then callingtime else 0 end) AS callertime ";
        sql = sql +  "\n               , 1 AS total ";
        sql = sql +  "\n               , callingtime AS totaltime ";
        sql = sql +  "\n           FROM table_cdr ";
        sql = sql +  "\n          WHERE success = '0' ";
        sql = sql +  "\n            AND cdrtype in ('1', '2') ";
        sql = sql +  "\n            AND CallingTime > 0 ";
        sql = sql +  "\n        ) a ";
        sql = sql +  "\n   GROUP BY a.todate ";
        sql = sql +  "\n   ORDER BY a.todate DESC ";

        ResultSet rs = null;
        try {
            if (stmt != null) {
                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                	cdrDTO = new CdrDTO();
                	
                	cdrDTO.setStartTime(Str.CheckNullString(rs.getString("todate")));
                	cdrDTO.setCalleeSum(rs.getInt("calleesum"));
                	cdrDTO.setCalleeTimeSum(rs.getInt("calleetimesum"));
                	cdrDTO.setCallerSum(rs.getInt("callersum"));
                	cdrDTO.setCallerTimeSum(rs.getInt("callertimesum"));
                	cdrDTO.setTotalSum(rs.getInt("totalsum"));
                	cdrDTO.setTotalTimeSum(rs.getInt("totaltimesum"));

                	cdrList.add(cdrDTO);
                }
                rs.close();
            } else           
                System.out.println("데이터베이스에 연결할 수 없습니다.");            
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return cdrList;
        } finally {
            try {
                if (rs != null)
                    rs.close();
            } catch (Exception e) {}
        }
        return cdrList;
    }	

	/*
	 * 개인 누적 통화 시간 조회
	 */
	public List getUserList(DataStatement stmt, String dept, String startDate, String endDate) {
		CdrDTO cdrDTO;
        List<CdrDTO> cdrList = new ArrayList<CdrDTO>();
        
        String sql = "\n SELECT a.e164, a.name, a.position, sum(a.callee) AS calleesum, sum(a.calleetime) AS calleetimesum, ";
        sql = sql +  "\n        sum(a.caller) AS callersum, sum(a.callertime) AS callertimesum, " ;
        sql = sql +  "\n        sum(a.total) AS totalsum, sum(a.totaltime) AS totaltimesum " ;
        sql = sql +  "\n   FROM (SELECT b.e164 " ;
        sql = sql +  "\n               ,c.name " ;
        sql = sql +  "\n               ,c.position " ;
        sql = sql +  "\n               ,(case when b.cdrtype = '1' then 1 else 0 end) AS callee ";
        sql = sql +  "\n               ,(case when b.cdrtype = '1' then b.callingtime else 0 end) AS calleetime ";
        sql = sql +  "\n               ,(case when b.cdrtype = '2' then 1 else 0 end) AS caller ";
        sql = sql +  "\n               ,(case when b.cdrtype = '2' then b.callingtime else 0 end) AS callertime ";
        sql = sql +  "\n               , 1 AS total ";
        sql = sql +  "\n               , b.callingtime AS totaltime ";
        sql = sql +  "\n           FROM table_cdr b ";
        sql = sql +  "\n               ,table_subscriber c ";
        sql = sql +  "\n          WHERE b.success = '0' ";
        sql = sql +  "\n         AND b.e164 = c.phonenum ";
        sql = sql +  "\n         AND b.cdrtype in ('1', '2') ";
        sql = sql +  "\n         AND b.CallingTime > 0 ";
        sql = sql +  "\n         AND to_char(b.startTime, 'yyyymmdd') between '" + StringUtil.replace(startDate, "-", "") + "' and '" + StringUtil.replace(endDate, "-", "") + "'";
        if(!"".equals(dept)){
            sql +=   "\n         AND c.department = " + dept;
        }
        sql = sql +  "\n        ) a ";
        sql = sql +  "\n   GROUP BY a.e164, a.name, a.position ";
        sql = sql +  "\n   ORDER BY a.e164, a.name, a.position ";
        
        ResultSet rs = null;
        try {
            if (stmt != null) {
                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                	cdrDTO = new CdrDTO();
                	
                	cdrDTO.setE164(Str.CheckNullString(rs.getString("e164")));
                	cdrDTO.setName(Str.CheckNullString(rs.getString("name")));
                	cdrDTO.setPosition(Str.CheckNullString(rs.getString("position")));
                	cdrDTO.setCalleeSum(rs.getInt("calleesum"));
                	cdrDTO.setCalleeTimeSum(rs.getInt("calleetimesum"));
                	cdrDTO.setCallerSum(rs.getInt("callersum"));
                	cdrDTO.setCallerTimeSum(rs.getInt("callertimesum"));
                	cdrDTO.setTotalSum(rs.getInt("totalsum"));
                	cdrDTO.setTotalTimeSum(rs.getInt("totaltimesum"));

                	cdrList.add(cdrDTO);
                }
                rs.close();
            } else           
                System.out.println("데이터베이스에 연결할 수 없습니다.");            
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return cdrList;
        } finally {
            try {
                if (rs != null)
                    rs.close();
            } catch (Exception e) {}
        }
        return cdrList;
    }	
	
	/*
	 * 최근통화목록 조회(페이지)
	 */
	public List getLatelyList(DataStatement stmt, int pageNo, int pageSize, String startDate, String endDate, String gubun, String str, String cdrtype, String e164) {
		CdrDTO cdrDTO;
        List<CdrDTO> cdrList = new ArrayList<CdrDTO>();

        String sql = "\n SELECT b.cdrsequence ";
        sql = sql +  "\n       ,c.name  ";
        sql = sql +  "\n       ,c.position  ";
        sql = sql +  "\n       ,b.e164  ";
        sql = sql +  "\n       ,b.success  ";
        sql = sql +  "\n       ,b.cdrtype  ";
        sql = sql +  "\n       ,(case when b.cdrtype = '1' then callere164  ";
        sql = sql +  "\n              when b.cdrtype = '2' then calleee164  ";
        sql = sql +  "\n              when b.cdrtype = '0' then callere164  ";
        sql = sql +  "\n         else '' end) AS num  ";
        sql = sql +  "\n       ,b.memo  ";
//        sql = sql +  "\n       ,to_char(b.starttime, 'yyyy-mm-dd HH:MM') AS starttime  ";
        sql = sql +  "\n       ,to_char(b.starttime, 'yyyy-mm-dd') AS starttime  ";
        //sql = sql +  "\n       ,to_char(b.starttime, 'hh24:mm:ss') AS contime  ";
        sql = sql +  "\n       ,to_char(b.starttime, 'hh24:mi:ss') AS contime  ";
        sql = sql +  "\n       ,b.callingtime  ";
        sql = sql +  "\n       ,coalesce((SELECT max(name)  ";
        sql = sql +  "\n                    FROM table_addrbook  ";
        sql = sql +  "\n                   WHERE keynumber != ''  ";
        sql = sql +  "\n                     AND keynumber  = (case when b.cdrtype = '1' then b.callere164  ";
        sql = sql +  "\n                                            when b.cdrtype = '2' then b.calleee164  ";
        sql = sql +  "\n                                            when b.cdrtype = '0' then b.callere164  ";
        sql = sql +  "\n                                       else '' end)  ";
        sql = sql +  "\n        ),'') AS partername ";
        sql = sql +  "\n       ,b.callid ";
//        sql = sql +  "\n       ,(case when b.cdrtype = '1' then calleee164  ";
//        sql = sql +  "\n              when b.cdrtype = '2' then callere164  ";
//        sql = sql +  "\n         else '' end) AS callernum  ";
    	sql = sql +  "\n   FROM table_cdr b ";
        sql = sql +  "\n       ,table_subscriber c ";
    	sql = sql +  "\n  WHERE b.e164 = c.phonenum ";
        sql = sql +  "\n    AND to_char(b.startTime, 'yyyymmdd') between '" + StringUtil.replace(startDate, "-", "") + "' and '" + StringUtil.replace(endDate, "-", "") + "'";
        if("1".equals(cdrtype)){
        	sql +=   "\n    AND b.success = '0' ";
        	sql +=   "\n    AND b.cdrtype = '1' ";
        	sql +=   "\n    AND b.CallingTime > 0 ";
        }else if("2".equals(cdrtype)){
        	sql +=   "\n    AND b.success = '0' ";
        	sql +=   "\n    AND b.cdrtype = '2' ";
        	sql +=   "\n    AND b.CallingTime > 0 ";
        }else if("5".equals(cdrtype)){
        	//sql +=   "\n    AND b.success = '1' ";
        	//sql +=   "\n    AND b.cdrtype = '1' ";
        	sql +=   "\n    AND b.success = '0' ";
        	sql +=   "\n    AND b.CallingTime = 0 ";
        }else{
        	sql +=   "\n    AND (    (b.success = '0' AND b.cdrtype = '1') ";
        	sql +=   "\n          OR (b.success = '0' AND b.cdrtype = '2') ";
        	sql +=   "\n          OR (b.success = '0' AND b.cdrtype = '0') ";
        	//sql +=   "\n          OR (b.success = '1' AND b.cdrtype = '1')) ";        	
        	sql +=   "\n          OR (b.success = '1')) ";
        }
        if(!"".equals(e164)){
        	sql +=   "\n    AND b.e164 = '" + e164 + "' ";
        }
    	if(!"".equals(str.trim())){
        	if("1".equals(gubun)){
        		sql += "\n    AND c.name LIKE '%" + str + "%'";
        	}else if("2".equals(gubun)){
        		sql += "\n    AND b.e164 LIKE '%" + str + "%'";
        	}else if("3".equals(gubun)){
        		sql += "\n    AND (case when b.cdrtype = '1' then callere164 ";
        		sql += "\n              when b.cdrtype = '2' then calleee164 ";
        		sql += "\n         else '' end) LIKE '%" + str + "%'";
        	}
        }
        sql = sql +  "\n  Order by b.starttime desc, c.name asc offset "+pageNo+" limit "+pageSize ;
        
        System.out.println("SQL문 : "+sql);
        
        ResultSet rs = null;
        try {
            if (stmt != null) {
                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                	cdrDTO = new CdrDTO();
                	
                	cdrDTO.setCdrsequence(rs.getInt("cdrsequence"));
                	cdrDTO.setName(Str.CheckNullString(rs.getString("name")));
                	cdrDTO.setPosition(Str.CheckNullString(rs.getString("position")));
                	cdrDTO.setE164(Str.CheckNullString(rs.getString("e164")));
                	cdrDTO.setSuccess(Str.CheckNullString(rs.getString("success")));
                	cdrDTO.setCdrType(Str.CheckNullString(rs.getString("cdrtype")));
                	cdrDTO.setCalleeE164(Str.CheckNullString(rs.getString("num")));
                	cdrDTO.setMemo(Str.CheckNullString(rs.getString("memo")));
                	cdrDTO.setStartTime(Str.CheckNullString(rs.getString("starttime")));
                	cdrDTO.setConnectTime(Str.CheckNullString(rs.getString("contime")));
                	cdrDTO.setCallingTime(rs.getInt("callingtime"));
                	if("".equals(Str.CheckNullString(rs.getString("partername")))){
//                		cdrDTO.setPartnerName(Str.CheckNullString(rs.getString("callernum")));
                		cdrDTO.setPartnerName(Str.CheckNullString(rs.getString("num")));
                	}else{
//                		cdrDTO.setPartnerName(Str.CheckNullString(rs.getString("callernum")) + " [" + Str.CheckNullString(rs.getString("partername")) + "]");
                		cdrDTO.setPartnerName(Str.CheckNullString(rs.getString("num")) + " [" + Str.CheckNullString(rs.getString("partername")) + "]");
                	}	
                	cdrDTO.setCallID(Str.CheckNullString(rs.getString("callid")));

                	cdrList.add(cdrDTO);
                }
                rs.close();
            } else            
                System.out.println("데이터베이스에 연결할 수 없습니다.");            
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return cdrList;
        } finally {
            try {
                if (rs != null)
                    rs.close();
            } catch (Exception e) {}
        }
        return cdrList;
    }
	
	/*
	 * 최근통화목록 조회(엑셀)
	 */
	public List getLatelyExcelList(DataStatement stmt, String startDate, String endDate, String gubun, String str, String cdrtype, String e164) {
		CdrDTO cdrDTO;
        List<CdrDTO> cdrList = new ArrayList<CdrDTO>();

        String sql = "\n SELECT b.cdrsequence ";
        sql = sql +  "\n       ,c.name  ";
        sql = sql +  "\n       ,c.position  ";
        sql = sql +  "\n       ,b.e164  ";
        sql = sql +  "\n       ,b.success  ";
        sql = sql +  "\n       ,b.cdrtype  ";
        sql = sql +  "\n       ,(case when b.cdrtype = '1' then callere164  ";
        sql = sql +  "\n              when b.cdrtype = '2' then calleee164  ";
        sql = sql +  "\n              when b.cdrtype = '0' then callere164  ";
        sql = sql +  "\n         else '' end) AS num  ";
        sql = sql +  "\n       ,b.memo  ";
//        sql = sql +  "\n       ,to_char(b.starttime, 'yyyy-mm-dd HH:MM') AS starttime  ";
        sql = sql +  "\n       ,to_char(b.starttime, 'yyyy-mm-dd') AS starttime  ";
        sql = sql +  "\n       ,to_char(b.starttime, 'hh24:mi:ss') AS contime  ";
        sql = sql +  "\n       ,b.callingtime  ";
        sql = sql +  "\n       ,coalesce((SELECT max(name)  ";
        sql = sql +  "\n                    FROM table_addrbook  ";
        sql = sql +  "\n                   WHERE keynumber != ''  ";
        sql = sql +  "\n                     AND keynumber  = (case when b.cdrtype = '1' then b.callere164  ";
        sql = sql +  "\n                                            when b.cdrtype = '2' then b.calleee164  ";
        sql = sql +  "\n                                            when b.cdrtype = '0' then b.callere164  ";
        sql = sql +  "\n                                       else '' end)  ";
        sql = sql +  "\n        ),'') AS partername ";
        sql = sql +  "\n       ,b.callid ";
//        sql = sql +  "\n       ,(case when b.cdrtype = '1' then calleee164  ";
//        sql = sql +  "\n              when b.cdrtype = '2' then callere164  ";
//        sql = sql +  "\n         else '' end) AS callernum  ";
    	sql = sql +  "\n   FROM table_cdr b ";
        sql = sql +  "\n       ,table_subscriber c ";
    	sql = sql +  "\n  WHERE b.e164 = c.phonenum ";
        sql = sql +  "\n    AND to_char(b.startTime, 'yyyymmdd') between '" + StringUtil.replace(startDate, "-", "") + "' and '" + StringUtil.replace(endDate, "-", "") + "'";
        if("1".equals(cdrtype)){
        	sql +=   "\n    AND b.success = '0' ";
        	sql +=   "\n    AND b.cdrtype = '1' ";
        	sql +=   "\n    AND b.CallingTime > 0 ";
        }else if("2".equals(cdrtype)){
        	sql +=   "\n    AND b.success = '0' ";
        	sql +=   "\n    AND b.cdrtype = '2' ";
        	sql +=   "\n    AND b.CallingTime > 0 ";
        }else if("5".equals(cdrtype)){
        	//sql +=   "\n    AND b.success = '1' ";
        	//sql +=   "\n    AND b.cdrtype = '1' ";
        	sql +=   "\n    AND b.success = '0' ";
        	sql +=   "\n    AND b.CallingTime = 0 ";
        }else{
        	sql +=   "\n    AND (    (b.success = '0' AND b.cdrtype = '1') ";
        	sql +=   "\n          OR (b.success = '0' AND b.cdrtype = '2') ";
        	sql +=   "\n          OR (b.success = '0' AND b.cdrtype = '0') ";
        	//sql +=   "\n          OR (b.success = '1' AND b.cdrtype = '1')) "; 
        	sql +=   "\n          OR (b.success = '1')) ";
        }
        if(!"".equals(e164)){
        	sql +=   "\n    AND b.e164 = '" + e164 + "' ";
        }
    	if(!"".equals(str.trim())){
        	if("1".equals(gubun)){
        		sql += "\n    AND c.name LIKE '%" + str + "%'";
        	}else if("2".equals(gubun)){
        		sql += "\n    AND b.e164 LIKE '%" + str + "%'";
        	}else if("3".equals(gubun)){
        		sql += "\n    AND (case when b.cdrtype = '1' then callere164 ";
        		sql += "\n              when b.cdrtype = '2' then calleee164 ";
        		sql += "\n         else '' end) LIKE '%" + str + "%'";
        	}
        }
        sql = sql +  "\n  Order by b.starttime desc, c.name asc " ;
        
        System.out.println("SQL문 : "+sql);
        
        ResultSet rs = null;
        try {
            if (stmt != null) {
                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                	cdrDTO = new CdrDTO();
                	
                	cdrDTO.setCdrsequence(rs.getInt("cdrsequence"));
                	cdrDTO.setName(Str.CheckNullString(rs.getString("name")));
                	cdrDTO.setPosition(Str.CheckNullString(rs.getString("position")));
                	cdrDTO.setE164(Str.CheckNullString(rs.getString("e164")));
                	cdrDTO.setSuccess(Str.CheckNullString(rs.getString("success")));
                	cdrDTO.setCdrType(Str.CheckNullString(rs.getString("cdrtype")));
                	cdrDTO.setCalleeE164(Str.CheckNullString(rs.getString("num")));
                	cdrDTO.setMemo(Str.CheckNullString(rs.getString("memo")));
                	cdrDTO.setStartTime(Str.CheckNullString(rs.getString("starttime")));
                	cdrDTO.setConnectTime(Str.CheckNullString(rs.getString("contime")));
                	cdrDTO.setCallingTime(rs.getInt("callingtime"));
                	if("".equals(Str.CheckNullString(rs.getString("partername")))){
//                		cdrDTO.setPartnerName(Str.CheckNullString(rs.getString("callernum")));
                		cdrDTO.setPartnerName(Str.CheckNullString(rs.getString("num")));
                	}else{
//                		cdrDTO.setPartnerName(Str.CheckNullString(rs.getString("callernum")) + " [" + Str.CheckNullString(rs.getString("partername")) + "]");
                		cdrDTO.setPartnerName(Str.CheckNullString(rs.getString("num")) + " [" + Str.CheckNullString(rs.getString("partername")) + "]");
                	}	
                	cdrDTO.setCallID(Str.CheckNullString(rs.getString("callid")));

                	cdrList.add(cdrDTO);
                }
                rs.close();
            } else            
                System.out.println("데이터베이스에 연결할 수 없습니다.");            
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return cdrList;
        } finally {
            try {
                if (rs != null)
                    rs.close();
            } catch (Exception e) {}
        }
        return cdrList;
    }

	/*
	 * 최근통화목록 총건수 조회
	 */
	public int getCount(DataStatement stmt, String startDate, String endDate, String gubun, String str, String cdrtype, String e164) {
		int count = 0 ;

        String sql = "\n SELECT count(b.cdrsequence) ";
    	sql = sql +  "\n   FROM table_cdr b ";
        sql = sql +  "\n       ,table_subscriber c ";
    	sql = sql +  "\n  WHERE b.e164 = c.phonenum ";
        sql = sql +  "\n    AND to_char(b.startTime, 'yyyymmdd') between '" + StringUtil.replace(startDate, "-", "") + "' and '" + StringUtil.replace(endDate, "-", "") + "'";
        if("1".equals(cdrtype)){
        	sql +=   "\n    AND b.success = '0' ";
        	sql +=   "\n    AND b.cdrtype = '1' ";
        	sql +=   "\n    AND b.CallingTime > 0 ";
        }else if("2".equals(cdrtype)){
        	sql +=   "\n    AND b.success = '0' ";
        	sql +=   "\n    AND b.cdrtype = '2' ";
        	sql +=   "\n    AND b.CallingTime > 0 ";
        }else if("5".equals(cdrtype)){
        	//sql +=   "\n    AND b.success = '1' ";
        	//sql +=   "\n    AND b.cdrtype = '1' ";
        	sql +=   "\n    AND b.success = '0' ";
        	sql +=   "\n    AND b.CallingTime = 0 ";
        }else{
        	sql +=   "\n    AND (    (b.success = '0' AND b.cdrtype = '1') ";
        	sql +=   "\n          OR (b.success = '0' AND b.cdrtype = '2') ";
        	sql +=   "\n          OR (b.success = '0' AND b.cdrtype = '0') ";
        	//sql +=   "\n          OR (b.success = '1' AND b.cdrtype = '1')) ";        	
        	sql +=   "\n          OR (b.success = '1')) ";
        }
        if(!"".equals(e164)){
        	sql +=   "\n    AND b.e164 = '" + e164 + "' ";
        }
    	if(!"".equals(str.trim())){
        	if("1".equals(gubun)){
        		sql += "\n    AND c.name LIKE '%" + str + "%'";
        	}else if("2".equals(gubun)){
        		sql += "\n    AND b.e164 LIKE '%" + str + "%'";
        	}else if("3".equals(gubun)){
        		sql += "\n    AND (case when b.cdrtype = '1' then callere164 ";
        		sql += "\n              when b.cdrtype = '2' then calleee164 ";
        		sql += "\n         else '' end) LIKE '%" + str + "%'";
        	}
        }        
        System.out.println("SQL문 : "+sql);
        
        ResultSet rs = null;
        try {
            if (stmt != null) {
                rs = stmt.executeQuery(sql);
                if (rs.next()) count = rs.getInt(1); 
                rs.close();
            } else            
                System.out.println("데이터베이스에 연결할 수 없습니다.");            
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return count;
        } finally {
            try {
                if (rs != null)
                    rs.close();
            } catch (Exception e) {}
        }
        return count;
    }
	
	/*
	 * 최근통화목록 삭제
	 */
	public int getDelete(DataStatement stmt, String deleteStr) {
        int nResult = 0;
        try {    
			String[] dataStr = StringUtil.getParser(deleteStr, "|");

            if (stmt != null) {
            	// 트랜잭션 시작
				stmt.stxTransaction();

            	for(int i=0; i < dataStr.length; i++){
    				nResult = 0;

    				String sql = "\n Delete From table_cdr ";
                    sql = sql +  "\n       Where cdrsequence = " + dataStr[i];
                    
                    nResult = stmt.executeUpdate(sql);
                    if (nResult >= 1) {
                        System.out.println("삭제 성공"); 
                    }
                    else
                        System.out.println("삭제 실패");
            	}

            	stmt.endTransaction(true);            	
            } else
                System.out.println("데이터베이스에 연결할 수 없습니다.");
	            
        } catch (Exception e) {
        	if (stmt != null)
				stmt.endTransaction(false);
            e.printStackTrace();
        } finally {
            return nResult ;
        }
    }

}
