package AcroRestore;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Iterator;

import com.acromate.util.Str;

import framework.sql.AjaxRunner; 
import framework.log.LogSql;
import framework.tray.ResultSetTray;
import framework.tray.Tray;
import framework.config.ConfigFactory;
import framework.config.Config;
import framework.exception.PropNotFoundException;
import framework.util.DateUtil;

public class Restore {
	private LogSql logsql =	new LogSql();
	public void Execut(String wantDay) throws IOException, PropNotFoundException{
		String		arr_BackupDB[]	=   getBackList();
		ArrayList	listData		=	new ArrayList();
		ArrayList	deleteListQueyr	=	new ArrayList();
		for(int dbCount=0;dbCount<arr_BackupDB.length;dbCount++){
			try{
			logsql.openReadOnly("/data/acromate_home/acroBackup/backup/"+arr_BackupDB[dbCount]+"_"+wantDay+".txt");
			listData				=	logsql.read();
			deleteListQueyr				=	getDeleteQuery(arr_BackupDB[dbCount]);
			deleteAfterInsert(arr_BackupDB[dbCount],deleteListQueyr,listData);
			}catch(Exception ex){
				
			}finally{
				logsql.close();
			}
		}
	}
	public void Execut(String acroBackUp_List,String fileFullPath) throws IOException, PropNotFoundException{
		ArrayList	listData			=	new ArrayList();
		ArrayList	deleteListQueyr		=	new ArrayList();
		logsql.openReadOnly(fileFullPath);
		try{
			listData					=	logsql.read();
			deleteListQueyr				=	getDeleteQuery(acroBackUp_List);
			deleteAfterInsert(acroBackUp_List,deleteListQueyr,listData);
		}catch(Exception ex){
			System.out.println("system error:"+ex);
			
		}finally{
			logsql.close();
		}
	}
	public String[]	 getBackList() throws PropNotFoundException {
		Config conf 	= 	ConfigFactory.getInstance().getConfiguration("/data/acromate_home/acroBackup/backupQuery.properties");
		return conf.getStringArray("AcroBackUp_List");
	}
	public void deleteAfterInsert(String dbName,ArrayList deleteListQueyr,ArrayList	listData){
		AjaxRunner 	ajxRun		=	new AjaxRunner(dbName);
		for(int i=0;i<deleteListQueyr.size();i++){
			ajxRun.delete((String)deleteListQueyr.get(i));
		}
		for(int i=0;i<listData.size();i++){
			String 	temp;
			try {
				temp= new String(Str.CheckNullString((String)listData.get(i)).getBytes("8859_1"), "euc-kr");
				ajxRun.insert(temp);
				
			} catch (UnsupportedEncodingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}				//
		}
	}
	public ArrayList getDeleteQuery(String keysName) throws PropNotFoundException{
		Config conf = ConfigFactory.getInstance().getConfiguration("/data/acromate_home/acroBackup/backupQuery.properties");		   
		Iterator 		keys 		=	conf.getKeys(keysName);
		String			key			=	null;
		ArrayList 		arry_Query	=	new ArrayList();
		StringBuffer 	sb_delqueyr	=	null;
		int 		count			=	0;
		while(keys.hasNext()){
			key						=	(String) keys.next();
			int 	nspitpz			=	key.indexOf('.');
			key						=	key.substring(nspitpz+1, key.length());
			sb_delqueyr				=	new StringBuffer();
			String tempkey			=	key;
			tempkey.replace("_SEQUENCEBU_", "");
			if(tempkey.equals(key)){
				sb_delqueyr.append("delete from ").append(key).append(";");
				key						=	sb_delqueyr.toString();
				arry_Query.add(key); 
			}
		}
		return arry_Query;
	}


}
