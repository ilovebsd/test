package command;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import acromate.ConnectionManager;
import business.LogHistory;

import com.acromate.driver.db.DataStatement;

import com.acromate.util.Str;
import dao.system.RootPrefixDAO;

import java.io.File;

public class  SmsSetUpInsertCommand implements Command {
	public String execute(HttpServletRequest req, HttpServletResponse res) {
		String 			forwardingPage 	= "";
		//boolean 		returnVal 		= false;
		DataStatement 	stmt 			= null;
		
		try {			
			String 	insertStr 	= new String(Str.CheckNullString(req.getParameter("insertStr")).getBytes("8859_1"), "euc-kr");		// 
			String 	rootCount 	= new String(Str.CheckNullString(req.getParameter("RootCount")).getBytes("8859_1"), "euc-kr");		//
			
			String 	userID		= new String(req.getParameter("hiUserID").getBytes("8859_1"), "euc-kr");		// 로그인 ID
			
			//System.out.println("########## deleteStr : "+insertStr);
			
			stmt = ConnectionManager.allocStatement("SSW");
			
			RootPrefixDAO dao = new RootPrefixDAO();
			int insertResult = dao.smsSetUpInsert(stmt, insertStr, rootCount);

			if (insertResult>=0) {
				// ############### LogHistory 처리  ###############
				String		strIp		= req.getRemoteAddr();
				LogHistory	logHistory 	= new LogHistory();
				if("0".equals(rootCount)){
					int int_result = logHistory.LogHistorySave(userID+"|86|SMS 설정|2|"+strIp);
				}else{
					int int_result = logHistory.LogHistorySave(userID+"|86|SMS 설정 ("+insertStr+")|1|"+strIp);
				}
				// ##############################################

				res.sendRedirect("/bizportal/system/smsSetUp.jsp");
			}else{
				res.sendRedirect("/bizportal/errorMessage.jsp");
			}			
		
		} catch (Exception e) {
			try{
				res.sendRedirect("/bizportal/errorMessage.jsp");
			} catch (Exception ee) {
			}
			e.printStackTrace();
		} finally {
			
			
		}
		return forwardingPage;
	}
}
