package command;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import acromate.ConnectionManager;
import acromate.common.StaticString;
import business.LogHistory;

import com.acromate.driver.db.DataStatement;
import com.acromate.util.Str;
import waf.BaseEntity;
import waf.SessionManager;
import webuser.ServerLogin;
import dto.system.SIPRegServerDTO;
import dao.system.SIPRegServerDAO;

public class SIPRegistEditCommand implements Command {
	public String execute(HttpServletRequest req, HttpServletResponse res) {
		DataStatement 	stmt 			= null;
		String 			forwardingPage 	= "";				
		String 			resStr 			= "";
		try {
			String 	subid 			= new String(Str.CheckNullString(req.getParameter("hiSubID")).getBytes("8859_1"), "euc-kr");		// 레지스트라 ID
			String 	serverip 		= new String(Str.CheckNullString(req.getParameter("hiServerIp")).getBytes("8859_1"), "euc-kr");		// 레지스트라 IP 
			String 	serverport 		= new String(Str.CheckNullString(req.getParameter("hiServerPort")).getBytes("8859_1"), "euc-kr");	// 레지스트라 Port
			String 	servertransport = new String(Str.CheckNullString(req.getParameter("hiTransPort")).getBytes("8859_1"), "euc-kr");	// 
			String 	userdomain 		= new String(Str.CheckNullString(req.getParameter("hiDomain")).getBytes("8859_1"), "euc-kr");		// 인증도메인 
			String 	usernumber 		= new String(Str.CheckNullString(req.getParameter("hiNumber")).getBytes("8859_1"), "euc-kr");		// 인증번호
			String 	expiretime 		= new String(Str.CheckNullString(req.getParameter("hiTime")).getBytes("8859_1"), "euc-kr");			// 소멸시간
			String 	userauthid 		= new String(Str.CheckNullString(req.getParameter("hiAuthId")).getBytes("8859_1"), "euc-kr");		// MD5 인증ID
			String 	userauthpasswd 	= new String(Str.CheckNullString(req.getParameter("hiAuthPass")).getBytes("8859_1"), "euc-kr");		// MD5 인증 비밀번호 
			
			String 	userID			= new String(req.getParameter("hiUserID").getBytes("8859_1"), "euc-kr");							// 로그인 ID
			String 	goodsName_Type 	= new String(Str.CheckNullString(req.getParameter("hiGoodsName")).getBytes("8859_1"), "euc-kr");	// 제품명(모델명)
			
			resStr = "sipRegistList.jsp";

			SessionManager manager = SessionManager.getInstance();
			if (manager.isLogin(req)) {
				HttpSession hs = req.getSession();
				String id = hs.getId();
				BaseEntity entity = manager.getBaseEntity(id);	
				
				SIPRegServerDTO dto = new SIPRegServerDTO();
				dto.setSubid(subid);
				dto.setServerip(serverip);
				dto.setServerport(Integer.parseInt(serverport));
				dto.setServertransport(Integer.parseInt(servertransport));
				dto.setUserdomain(userdomain);
				dto.setUsernumber(usernumber);
				dto.setUserauthid(userauthid);
				dto.setUserauthpasswd(userauthpasswd);				// MD5 인증 비밀번호
				dto.setExpiretime(Integer.parseInt(expiretime));
				
				stmt = ConnectionManager.allocStatement("SSW");
								
				SIPRegServerDAO dao = new SIPRegServerDAO();
				int insertResult = dao.update(stmt,dto,goodsName_Type);
				
				// CallBox 이원화 ============================
				if("Pri_CSCF".equals(subid)){
					dto.setSubid("Sec_CSCF");
					int insertResult2 = dao.update(stmt,dto,goodsName_Type);
				}else if("Sec_CSCF".equals(subid)){
					dto.setSubid("Pri_CSCF");
					int insertResult3 = dao.update(stmt,dto,goodsName_Type);
				}
				// =========================================

				// ############### LogHistory 처리  ###############
				String		strIp		= req.getRemoteAddr();
				LogHistory	logHistory 	= new LogHistory();
				int int_result = logHistory.LogHistorySave(userID+"|86|SIP레지스트라 ("+subid+")|3|"+strIp);
				// ##############################################

				res.sendRedirect("/bizportal/system/"+resStr);
			} 
			else
				res.sendRedirect("/bizportal/"+resStr+"?session=0");
		
		} catch (Exception e) {
			try{
				res.sendRedirect("/bizportal/errorMessage.jsp");
			} catch (Exception ee) {
			}
			e.printStackTrace();
		} finally {
			//할당받은 DataStatement 객체는 반납
			if (stmt != null ) ConnectionManager.freeStatement(stmt);
		}		
		return forwardingPage;
	}
}
