package command;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import acromate.ConnectionManager;
import acromate.common.StaticString;
import com.acromate.driver.db.DataStatement;
import com.acromate.util.Str;
import waf.BaseEntity;
import waf.SessionManager;
import webuser.ServerLogin;
import dao.useconfig.AddServiceDAO;
import dto.SubscriberInfoDTO;
import acromate.common.util.StringUtil;
import business.LogHistory;
import framework.Shell.LinuxShell;
import system.SystemConfigSet;

import dao.ipcs.IpcsUserDAO;

public class AutoPhoneAccountsIMSCommand implements Command {
	public String execute(HttpServletRequest req, HttpServletResponse res) {
		String forwardingPage = "";
		String resStr = "";

        try {
        	String 	phoneID 		= new String(Str.CheckNullString(req.getParameter("hiPhoneID")).getBytes("8859_1"), "euc-kr");
        	String 	phonePwd 		= new String(Str.CheckNullString(req.getParameter("hiPhonePwd")).getBytes("8859_1"), "euc-kr");
        	String 	phonePort 		= new String(Str.CheckNullString(req.getParameter("hiPhonePort")).getBytes("8859_1"), "euc-kr");
        	String 	accountsType 	= new String(Str.CheckNullString(req.getParameter("hiAccountsType")).getBytes("8859_1"), "euc-kr");
        	String 	authPwd 		= new String(Str.CheckNullString(req.getParameter("hiAuthPwd")).getBytes("8859_1"), "euc-kr");
        	
        	String 	tempStr 		= new String(Str.CheckNullString(req.getParameter("dataStr")).getBytes("8859_1"), "euc-kr");
        	String 	tempStr01 		= new String(Str.CheckNullString(req.getParameter("dataStr")));
        	
        	String 	domainid 		= new String(Str.CheckNullString(req.getParameter("hiDomainid")).getBytes("8859_1"), "euc-kr");
			String 	userID	  		= new String(req.getParameter("hiUserID").getBytes("8859_1"), "euc-kr");		// 로그인 ID
			
			String 	autoType 		= new String(Str.CheckNullString(req.getParameter("hiAutoType")).getBytes("8859_1"), "euc-kr");
			String 	autoNumber 		= new String(Str.CheckNullString(req.getParameter("hiAutoNumber")).getBytes("8859_1"), "euc-kr");
			
			String	send_Data		= "";
			
//			System.out.println("request message : " + tempStr);
			System.out.println("@@@@@@@@@@@@@@@@@@ request message01 : " + tempStr01);
			
			String[] dataStr 		= StringUtil.getParser(tempStr01, "");
			
			IpcsUserDAO	dao = new IpcsUserDAO();
			
			resStr 		= "autoPhoneIDSetList.jsp";
			domainid 	= domainid+".callbox.kt.com";
			
			SessionManager manager = SessionManager.getInstance();
			if (manager.isLogin(req)) {
				HttpSession 		hs 		= req.getSession();
				String 				id 		= hs.getId();
				BaseEntity 			entity 	= manager.getBaseEntity(id);	
				SubscriberInfoDTO 	scDTO 	= entity.getScDtoAttribute("scDTO");
				
				SystemConfigSet systemConfigSet	= new SystemConfigSet();
				LinuxShell 		linuxShell 		= new LinuxShell();
	            String			osType 			= systemConfigSet.osChk();
	            
				if(dataStr != null){
					// ############### LogHistory 처리  ###############
					String		strIp		= req.getRemoteAddr();
					LogHistory	logHistory 	= new LogHistory();
					// ##############################################

					if("uix".equals(osType)){
				       	linuxShell.runShell("rm /tmp/phone_set.log");
					}else{
						System.out.println("/tmp/phone_set.log 파일 삭제...");
					}
					
					for(int i=0; i < dataStr.length; i++){
						String[] dataStr2 = StringUtil.getParser(dataStr[i], "|");
						
						if("1".equals(accountsType)){
							send_Data = "/usr/local/bin/curl -u "+phoneID+":"+phonePwd+" --digest "+dataStr2[5]+":"+phonePort+"/sipaccount1_set.html -X POST -d |sipId="+dataStr2[0]+"&sipAuthId="+dataStr2[2]+"&sipPwd="+dataStr2[1]+"&sipDisName="+dataStr2[3]+"&sipDisNameEncoding=1&sipUri="+dataStr2[8]+"&sipDomain="+dataStr2[4]+"&autoPrefix="+dataStr2[6]+"&prefix="+dataStr2[7]+"|"+" -w '%{url_effective} [%{http_code}]' -so /dev/null >> /tmp/phone_set.log";
							send_Data = send_Data.replace('|', '"');
				            
							if("uix".equals(osType)){
				            	linuxShell.runShell(send_Data);
				            }
							System.out.println("Accounts Setting : " + send_Data);
						}else{
							if(!"".equals(authPwd)){
								int intRet = dao.autoPhoneAuthUpdate_IMS(dataStr2[4], authPwd);
								
								//send_Data = "/usr/local/bin/curl -u "+phoneID+":"+phonePwd+" --digest "+dataStr2[3]+":"+phonePort+"/sipaccount_set.html -X POST -d |sipId="+dataStr2[0]+"&sipPwd="+authPwd+"&sipAuthId="+dataStr2[0]+"&sipDisName="+dataStr2[2]+"&sipDisNameEncoding=1&sipDomain="+domainid+"|"+" -w '%{url_effective} [%{http_code}]' -so /dev/null >> /tmp/phone_set.log";
								send_Data = "/usr/local/bin/curl -u "+phoneID+":"+phonePwd+" --digest "+dataStr2[3]+":"+phonePort+"/sipaccount1_set.html -X POST -d |sipId="+dataStr2[0]+"&sipAuthId="+dataStr2[0]+"&sipPwd="+authPwd+"&sipDisName="+dataStr2[2]+"&sipDisNameEncoding=1&sipUri="+dataStr2[6]+"&sipDomain="+domainid+"&autoPrefix="+autoType+"&prefix="+autoNumber+"|"+" -w '%{url_effective} [%{http_code}]' -so /dev/null >> /tmp/phone_set.log";
							}else{
								//int intRet = dao.autoPhoneAuthUpdate_IMS(dataStr2[4], dataStr2[1]);
								
								//send_Data = "/usr/local/bin/curl -u "+phoneID+":"+phonePwd+" --digest "+dataStr2[3]+":"+phonePort+"/sipaccount_set.html -X POST -d |sipId="+dataStr2[0]+"&sipPwd="+dataStr2[1]+"&sipAuthId="+dataStr2[0]+"&sipDisName="+dataStr2[2]+"&sipDisNameEncoding=1&sipDomain="+domainid+"|"+" -w '%{url_effective} [%{http_code}]' -so /dev/null >> /tmp/phone_set.log";
								send_Data = "/usr/local/bin/curl -u "+phoneID+":"+phonePwd+" --digest "+dataStr2[3]+":"+phonePort+"/sipaccount1_set.html -X POST -d |sipId="+dataStr2[0]+"&sipAuthId="+dataStr2[0]+"&sipPwd="+dataStr2[1]+"&sipDisName="+dataStr2[2]+"&sipDisNameEncoding=1&sipUri="+dataStr2[6]+"&sipDomain="+domainid+"&autoPrefix="+autoType+"&prefix="+autoNumber+"|"+" -w '%{url_effective} [%{http_code}]' -so /dev/null >> /tmp/phone_set.log";
							}
							send_Data = send_Data.replace('|', '"');
				            
							if("uix".equals(osType)){
				            	linuxShell.runShell(send_Data);
				            }
							System.out.println("Accounts Setting "+i+"번 : " + send_Data);
						}
						
						//Thread.sleep(2000);
						
						// ############### LogHistory 처리  ###############
//						int int_result = logHistory.LogHistorySave(userID+"|90|GeoIP 삭제 ("+dataStr2[0]+"-"+dataStr2[1]+")|2|"+strIp);
						// ##############################################
					}
				}
								
				res.sendRedirect("/bizportal/system/"+resStr);
			} 
			else
				res.sendRedirect("/bizportal/errorMessage.jsp");
		} catch (Exception e) {
			System.out.println("에러발생 .......");
			try{
				res.sendRedirect("/bizportal/errorMessage.jsp");
			} catch (Exception ee) {
			}			
			e.printStackTrace();
		} finally {

		}		
		return forwardingPage;
	}
}
