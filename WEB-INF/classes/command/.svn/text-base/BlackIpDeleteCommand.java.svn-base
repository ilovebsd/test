package command;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import acromate.ConnectionManager;
import acromate.common.StaticString;
import com.acromate.driver.db.DataStatement;
import com.acromate.util.Str;
import waf.BaseEntity;
import waf.SessionManager;
import webuser.ServerLogin;
import dto.SubscriberInfoDTO;
import dao.system.RouteMonitorDAO;
import acromate.common.util.StringUtil;
import business.LogHistory;
import system.SystemConfigFileMake;
import system.SystemConfigSet;
import framework.Shell.LinuxShell;

public class BlackIpDeleteCommand implements Command {
	public String execute(HttpServletRequest req, HttpServletResponse res) {
		String forwardingPage = "";
		DataStatement stmt = null;
		String resStr = "";

		SystemConfigSet systemConfig 	= new SystemConfigSet();
		LinuxShell 		linuxShell 		= new LinuxShell();

		// ############### LogHistory 처리  ###############
		String		strIp		= req.getRemoteAddr();
		LogHistory	logHistory 	= new LogHistory();
		// ##############################################

        try {
			String 	deleteStr 	= new String(Str.CheckNullString(req.getParameter("deleteStr")).getBytes("8859_1"), "euc-kr");
			String 	userID		= new String(req.getParameter("hiUserID").getBytes("8859_1"), "euc-kr");		// 로그인 ID
			
			String 	osType3 	= systemConfig.osChk();
			
			resStr = "blackIpList.jsp";
			
			String[] dataStr = StringUtil.getParser(deleteStr, "");			
			if(dataStr != null){
				for(int k=0; k < dataStr.length; k++){
					String strTmep = dataStr[k];
		        	
					String tmpCommand 	= "/sbin/pfctl -t black_ip -T delete "+strTmep;
		        	if("uix".equals(osType3)){
		        		linuxShell.runShell(tmpCommand);
		        		System.out.println("######## uix Black IP Delete :"+"/sbin/pfctl -t black_ip -T delete "+strTmep);
		        	}else{
		        		System.out.println("######## Windows Black IP Delete :"+"/sbin/pfctl -t black_ip -T delete "+strTmep);
		        	}

					// ############### LogHistory 처리  ###############
					int int_result = logHistory.LogHistorySave(userID+"|90|ACL [Black IP] ("+strTmep+")|2|"+strIp);
					// ##############################################
				}
			}
			
			res.sendRedirect("/bizportal/system/"+resStr);
			
		} catch (Exception e) {
			System.out.println("에러발생 .......");
			try{
				res.sendRedirect("/bizportal/errorMessage.jsp");
			} catch (Exception ee) {
			}			
			e.printStackTrace();
		} finally {
			//할당받은 DataStatement 객체는 반납
			if (stmt != null ) ConnectionManager.freeStatement(stmt);
		}		
		return forwardingPage;
	}
}
