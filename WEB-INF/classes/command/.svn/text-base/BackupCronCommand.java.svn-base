package command;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import system.BackupCronSet;

import acromate.ConnectionManager;
import acromate.common.StaticString;
import com.acromate.driver.db.DataStatement;
import com.acromate.util.Str;
import waf.BaseEntity;
import waf.SessionManager;
import webuser.ServerLogin;
import dto.system.SIPRegServerDTO;
import dao.system.SIPRegServerDAO;

public class BackupCronCommand implements Command {
	public String execute(HttpServletRequest req, HttpServletResponse res) {
		String 			forwardingPage 	= "";				
		String 			resStr 			= "";
		int				naddTime		= 0;
		String 			after			= "";
		try {
			String 	txt_half_backup = new String(Str.CheckNullString(req.getParameter("txt_half_backup")).getBytes("8859_1"), "euc-kr");		// 레지스트라 ID
			String 	txt_time_backup = new String(Str.CheckNullString(req.getParameter("txt_time_backup")).getBytes("8859_1"), "euc-kr");		// 레지스트라 IP 
			String  txt_min_backup 	= new String(Str.CheckNullString(req.getParameter("txt_min_backup")).getBytes("8859_1"), "euc-kr");	// 레지스트라 Port
			String 	txt_day_backup	= new String(Str.CheckNullString(req.getParameter("txt_day_backup")).getBytes("8859_1"), "euc-kr");	//
			String 	txt_tail_backup	= new String(Str.CheckNullString(req.getParameter("txt_tail_backup")).getBytes("8859_1"), "euc-kr");	//
			txt_tail_backup=txt_tail_backup.trim();
			
			BackupCronSet	bkuCronSet	=	new BackupCronSet();
			resStr = "systemUpdate.jsp";
			if("0".equals(txt_day_backup))
				txt_day_backup="*";
			if("1".equals(txt_half_backup))	naddTime=12;
			naddTime=naddTime+Integer.parseInt(txt_time_backup);
			if("".equals(txt_tail_backup)) txt_tail_backup="* * su - ipcs -c /data/acromate_home/acroBackup/DBBackUp.sh";
			after	=txt_min_backup + " " + naddTime + " "+ txt_day_backup+" "+txt_tail_backup;
			int nreturnValue=bkuCronSet.setBackupCronShellTime("# Acro-CallBox backup",after);
			if (nreturnValue==1) {
				req.setAttribute("backupCronResult", "1");
				forwardingPage="/system/"+resStr;
			} 
			else
				res.sendRedirect("/bizportal/system/"+resStr+"?session=0");
		
		} catch (Exception e) {
			try{
				res.sendRedirect("/bizportal/errorMessage.jsp");
			} catch (Exception ee) {
			}
			e.printStackTrace();
		} finally {
		}		
		return forwardingPage;
	}
}
