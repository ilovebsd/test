package command;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import acromate.ConnectionManager;
import acromate.common.StaticString;
import business.LogHistory;

import com.acromate.driver.db.DataStatement;
import com.acromate.util.Str;
import waf.BaseEntity;
import waf.SessionManager;
import webuser.ServerLogin;
import gateway.AutomaticDialingSNMP;

public class SnmpRegisterCommand implements Command {
	public String execute(HttpServletRequest req, HttpServletResponse res) {
		DataStatement 	stmt 			= null;
		String 			forwardingPage 	= "";				
		String 			resStr 			= "";
		try {
			String 	snmp_Ip 		= new String(Str.CheckNullString(req.getParameter("hiSnmp_Ip")).getBytes("8859_1"), "euc-kr");	// 
			String 	registerType 	= new String(Str.CheckNullString(req.getParameter("registerType")).getBytes("8859_1"), "euc-kr");	//
			
			String 	userID		= new String(req.getParameter("hiUserID").getBytes("8859_1"), "euc-kr");		// 로그인 ID
			// ############### LogHistory 처리  ###############
			String		strIp		= req.getRemoteAddr();
			LogHistory	logHistory 	= new LogHistory();
			// ##############################################
			
			//resStr = "proxyServerIP.jsp";
			resStr = "proxyServerIP.jsp?ptype=2";
			
			SessionManager manager = SessionManager.getInstance();
			HttpSession hs = req.getSession();
			String id = hs.getId();
			BaseEntity entity = manager.getBaseEntity(id);	
			
			AutomaticDialingSNMP automaticDialingSNMP = new AutomaticDialingSNMP();			
			if("1".equals(registerType)){
				automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.10.1.4.2.1.0", "ShouldRegister=1", 3);		//

				// ############### LogHistory 처리  ###############
				int int_result = logHistory.LogHistorySave(userID+"|87|개인내선번호/Register 등록|1|"+strIp);
				// ##############################################
				
			}if("0".equals(registerType)){
				automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.10.1.4.2.1.0", "ShouldRegister=0", 3);		//
			
				// ############### LogHistory 처리  ###############
				int int_result = logHistory.LogHistorySave(userID+"|87|개인내선번호/Register 해제|1|"+strIp);
				// ##############################################

			}
			System.out.println("MP-500 IP Register Result : ");
//			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.10.3.1.1.4.0", "1", 2);				// Burn OID
			
			

			res.sendRedirect("/bizportal/gateway/"+resStr);			

		} catch (Exception e) {
			try{
				res.sendRedirect("/bizportal/errorMessage.jsp");
			} catch (Exception ee) {
			}
			e.printStackTrace();
		} finally {

		}		
		return forwardingPage;
	}
}
