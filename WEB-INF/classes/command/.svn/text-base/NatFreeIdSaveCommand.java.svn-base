package command;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import acromate.ConnectionManager;
import acromate.common.StaticString;
import business.LogHistory;

import com.acromate.driver.db.DataStatement;
import com.acromate.util.Str;
import waf.BaseEntity;
import waf.SessionManager;
import webuser.ServerLogin;
import dto.system.NatNFreeDTO;
import dao.system.NatNFreeDAO;

public class NatFreeIdSaveCommand implements Command {
	public String execute(HttpServletRequest req, HttpServletResponse res) {
		DataStatement 	stmt 			= null;
		String 			forwardingPage 	= "";				
		String 			resStr 			= "";
		try {
			String 	trid 			= new String(Str.CheckNullString(req.getParameter("hiTrid")).getBytes("8859_1"), "euc-kr");				//
			String 	trip 			= new String(Str.CheckNullString(req.getParameter("hiTrip")).getBytes("8859_1"), "euc-kr");				//
			String 	trport 			= new String(Str.CheckNullString(req.getParameter("hiTrport")).getBytes("8859_1"), "euc-kr");			//
			String 	description		= new String(Str.CheckNullString(req.getParameter("hiDescription")).getBytes("8859_1"), "euc-kr");		// 설명
			String 	maxchannel 		= new String(Str.CheckNullString(req.getParameter("hiMaxchannel")).getBytes("8859_1"), "euc-kr");		//
			String 	minchannel 		= new String(Str.CheckNullString(req.getParameter("hiMinchannel")).getBytes("8859_1"), "euc-kr");		//
			String 	normchannele 	= new String(Str.CheckNullString(req.getParameter("hiNormchannele")).getBytes("8859_1"), "euc-kr");		//
			String 	maxcall 		= new String(Str.CheckNullString(req.getParameter("hiMaxcall")).getBytes("8859_1"), "euc-kr");			//
			String 	alarmcall 		= new String(Str.CheckNullString(req.getParameter("hiAlarmcall")).getBytes("8859_1"), "euc-kr");		//
			String 	currentcall 	= new String(Str.CheckNullString(req.getParameter("hiCurrentcall")).getBytes("8859_1"), "euc-kr");		//
			
			String 	userID		= new String(req.getParameter("hiUserID").getBytes("8859_1"), "euc-kr");		// 로그인 ID
			
			resStr = "natFreeList.jsp";

			SessionManager manager = SessionManager.getInstance();
			if (manager.isLogin(req)) {
				HttpSession hs = req.getSession();
				String id = hs.getId();
				BaseEntity entity = manager.getBaseEntity(id);	
				
				NatNFreeDTO dto = new NatNFreeDTO();
				dto.setTrid(trid);
				dto.setTrip(trip);
				dto.setTrport(Integer.parseInt(trport));
				dto.setDescription(description);
				dto.setMaxchannel(Integer.parseInt(maxchannel));
				dto.setMinchannel(Integer.parseInt(minchannel));
				dto.setNormchannel(Integer.parseInt(normchannele));
				dto.setMaxcall(Integer.parseInt(maxcall));
				dto.setAlarmcall(Integer.parseInt(alarmcall));
				dto.setCurrentcall(Integer.parseInt(currentcall));
				
				stmt = ConnectionManager.allocStatement("SSW");
								
				NatNFreeDAO 	dao = new NatNFreeDAO();
				int insertResult 	= dao.insert(stmt,dto);
				
				// ############### LogHistory 처리  ###############
				String		strIp		= req.getRemoteAddr();
				LogHistory	logHistory 	= new LogHistory();
				int int_result = logHistory.LogHistorySave(userID+"|86|NFree 관리 ("+trid+")|1|"+strIp);
				// ##############################################

				res.sendRedirect("/bizportal/system/"+resStr);
			} 
			else
				res.sendRedirect("/bizportal/system/"+resStr+"?session=0");
		
		} catch (Exception e) {
			try{
				res.sendRedirect("/bizportal/errorMessage.jsp");
			} catch (Exception ee) {
			}
			e.printStackTrace();
		} finally {
			//할당받은 DataStatement 객체는 반납
			if (stmt != null ) ConnectionManager.freeStatement(stmt);
		}		
		return forwardingPage;
	}
}
