package command;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.acromate.util.Str;
import dao.useconfig.AddServiceDAO;

import acromate.common.StaticString;
import org.apache.commons.fileupload.*;
import java.io.*;
import java.util.*;
import java.security.*;
import sun.misc.*;
import java.io.File;

public class MOHDeleteCommand implements Command {
	public String execute(HttpServletRequest req, HttpServletResponse res) {
		String 	forwardingPage 	= "";
		boolean returnVal 		= false;
		File    tempFile        = null;  // 임시 파일 객체
		String 	deleteStr  		= "";
		
		try {			
			boolean isMultipart = FileUpload.isMultipartContent(req);

		    DiskFileUpload dfu = new DiskFileUpload();
		    
		    dfu.setSizeThreshold(100*1024);         // 업로드 할당 메모리 크기   (100 KB)
		    dfu.setSizeMax(30 * 1024 * 1024);        // 업로드 파일의 최대 크기   (5 M)
		    dfu.setRepositoryPath(StaticString.userWavPath);   // 파일업로드 템프 폴더 루트 (WAS)
		  	
		    if(isMultipart){    // multipart/form-data 일 경우
		    	// request parsing..
		        List fileItemList = dfu.parseRequest(req);

		        Iterator iter = fileItemList.iterator();

		        while (iter.hasNext()) {
		            FileItem item = (FileItem) iter.next();

		            if (item.isFormField()) {                           // 파일을 제외한 폼필드
		            	//System.out.println(item.getFieldName());

		            	if("deleteStr".equals(item.getFieldName())){
		            		deleteStr = item.getString();
		            	}
		            }
		        }
		    }
			AddServiceDAO dao 	= new AddServiceDAO();
			returnVal = dao.e164MOHDelete(deleteStr);

			if (returnVal) {
				res.sendRedirect("/bizportal/useconfig/addServiceMOHList.jsp");
			}else{
				res.sendRedirect("/bizportal/errorMessage.jsp");
			}			
		
		} catch (Exception e) {
			try{
				res.sendRedirect("/bizportal/errorMessage.jsp");
			} catch (Exception ee) {
			}
			e.printStackTrace();
		} finally {
			
			
		}
		return forwardingPage;
	}
}
