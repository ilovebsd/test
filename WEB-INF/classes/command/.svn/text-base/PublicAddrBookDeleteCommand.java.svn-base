package command;

import java.sql.ResultSet;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import acromate.ConnectionManager;
import acromate.common.StaticString;
import com.acromate.driver.db.DataStatement;
import com.acromate.util.Str;
import waf.BaseEntity;
import waf.SessionManager;
import webuser.ServerLogin;
import dto.AddrBookDTO;
import dto.SubscriberInfoDTO;
import dao.AddrBookDAO;
import acromate.common.util.StringUtil;

public class PublicAddrBookDeleteCommand implements Command {
	public String execute(HttpServletRequest req, HttpServletResponse res) {
		String forwardingPage = "";
		DataStatement stmt = null;
		String ownerId = "";
        int    groupId = 0;
        int    addrId  = 0;
        String keyNumber = "";
		String resStr = "";

		try {
			String 	deleteStr = new String(Str.CheckNullString(req.getParameter("deleteStr")).getBytes("8859_1"), "euc-kr");	// 작성자ID
			String 	common	  = new String(Str.CheckNullString(req.getParameter("hiCommon")).getBytes("8859_1"), "euc-kr");			// 공유여부

			if("1".equals(common)){
				resStr = "userAddrList.jsp";
			}else if("2".equals(common)){
				resStr = "publicAddrList.jsp";
			}
			
			SessionManager manager = SessionManager.getInstance();
			if (manager.isLogin(req)) {
				HttpSession hs = req.getSession();
				String id = hs.getId();
				BaseEntity entity = manager.getBaseEntity(id);	
				
				SubscriberInfoDTO scDTO = entity.getScDtoAttribute("scDTO");
				
				stmt = ConnectionManager.allocStatement("SSW");

				// 트랜잭션 시작
				stmt.stxTransaction();
				
				String[] addrStr = StringUtil.getParser(deleteStr, "");
				
				if(addrStr != null){
					for(int i=0; i < addrStr.length; i++){
						String[] dataStr = StringUtil.getParser(addrStr[i], "|");
						if(dataStr != null){
							if(dataStr.length >= 4){
								for(int k=0; k < addrStr.length; k++){
									ownerId   = dataStr[0];
									groupId   = Integer.parseInt(dataStr[1]);
									addrId    = Integer.parseInt(dataStr[2]);
									keyNumber = dataStr[3];

									AddrBookDAO dao = new AddrBookDAO();
									if("1".equals(common)){
										// 공유여부 체크
										String Query = "\n SELECT sharedgroupid, sharedownerid, sharedaddrid " ;
								        Query       += "\n   FROM table_AddrBook ";
								        Query       += "\n  WHERE OwnerID = '"   +   ownerId  +   "'";
								        Query       += "\n    AND GroupId = "    +   groupId;
								        Query       += "\n    AND AddrId  = "    +   addrId;
								        
								        String sharedownerid = "";
								        int    sharedgroupid = 0;
								        int    sharedaddrid  = 0;
								        ResultSet rs = null;
								        
						                rs = stmt.executeQuery(Query);
						                if (rs.next()){
						                	sharedgroupid = rs.getInt("sharedgroupid"); 
						                	sharedownerid = Str.CheckNullString(rs.getString("sharedownerid"));
						                	sharedaddrid  = rs.getInt("sharedaddrid"); 
						                }
						                if (rs != null)
						                    rs.close();
										
						                //공유 삭제
//										int publicResult = dao.publicDelete(stmt, "2", ownerId, keyNumber);
										int publicResult = dao.publicDelete(stmt, "2", sharedownerid, sharedgroupid, sharedaddrid);
									}
									//메인 삭제
									int updateResult = dao.delete(stmt, ownerId, groupId, addrId);
								}
							}
						}
					}
				}
								
				if (stmt != null)
					stmt.endTransaction(true);
				//forwardingPage = "/bizportal/publicAddrList.jsp?group=" + nGroupId + "&result=" + Integer.toString(updateResult);
				res.sendRedirect("/bizportal/address/"+resStr);
			} 
			else
				res.sendRedirect("/bizportal/address/"+resStr+"?session=0");
//				forwardingPage = "/address/publicAddrList.jsp?session=0";
		
		} catch (Exception e) {
			if (stmt != null)
				stmt.endTransaction(false);
			try{
				res.sendRedirect("/bizportal/address/"+resStr+"?result=-1");
			} catch (Exception ee) {
			}
//			forwardingPage = "/address/publicAddrList.jsp?result=-1" ;
			
			//ServerLogin.getServerLogin().login();

			e.printStackTrace();
		} finally {
			//할당받은 DataStatement 객체는 반납
			if (stmt != null ) ConnectionManager.freeStatement(stmt);
		}
		return forwardingPage;
	}
}
