package command;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import acromate.ConnectionManager;
import acromate.common.StaticString;
import business.LogHistory;

import com.acromate.driver.db.DataStatement;
import com.acromate.util.Str;
import waf.BaseEntity;
import waf.SessionManager;
import webuser.ServerLogin;
import gateway.AutomaticDialingSNMP;

public class SnmpAutomaticDialingCommand implements Command {
	public String execute(HttpServletRequest req, HttpServletResponse res) {
		DataStatement 	stmt 			= null;
		String 			forwardingPage 	= "";				
		String 			resStr 			= "";
		try {
			String 	snmp_Ip 		= new String(Str.CheckNullString(req.getParameter("hiSnmp_Ip")).getBytes("8859_1"), "euc-kr");	// 

			String 	number_0	= new String(Str.CheckNullString(req.getParameter("hiNumber_0")).getBytes("8859_1"), "euc-kr");	// 
			String 	number_1	= new String(Str.CheckNullString(req.getParameter("hiNumber_1")).getBytes("8859_1"), "euc-kr");	//
			String 	number_2	= new String(Str.CheckNullString(req.getParameter("hiNumber_2")).getBytes("8859_1"), "euc-kr");	//
			String 	number_3	= new String(Str.CheckNullString(req.getParameter("hiNumber_3")).getBytes("8859_1"), "euc-kr");	//
			String 	number_4	= new String(Str.CheckNullString(req.getParameter("hiNumber_4")).getBytes("8859_1"), "euc-kr");	//
			String 	number_5	= new String(Str.CheckNullString(req.getParameter("hiNumber_5")).getBytes("8859_1"), "euc-kr");	//
			String 	number_6	= new String(Str.CheckNullString(req.getParameter("hiNumber_6")).getBytes("8859_1"), "euc-kr");	//
			String 	number_7	= new String(Str.CheckNullString(req.getParameter("hiNumber_7")).getBytes("8859_1"), "euc-kr");	//
			String 	number_8	= new String(Str.CheckNullString(req.getParameter("hiNumber_8")).getBytes("8859_1"), "euc-kr");	//
			String 	number_9	= new String(Str.CheckNullString(req.getParameter("hiNumber_9")).getBytes("8859_1"), "euc-kr");	//
			String 	number_10	= new String(Str.CheckNullString(req.getParameter("hiNumber_10")).getBytes("8859_1"), "euc-kr");	//
			String 	number_11	= new String(Str.CheckNullString(req.getParameter("hiNumber_11")).getBytes("8859_1"), "euc-kr");	//
			
			String 	autoDial_0	= new String(Str.CheckNullString(req.getParameter("hiAutoDial_0")).getBytes("8859_1"), "euc-kr");	//
			String 	autoDial_1	= new String(Str.CheckNullString(req.getParameter("hiAutoDial_1")).getBytes("8859_1"), "euc-kr");	//
			String 	autoDial_2	= new String(Str.CheckNullString(req.getParameter("hiAutoDial_2")).getBytes("8859_1"), "euc-kr");	//
			String 	autoDial_3	= new String(Str.CheckNullString(req.getParameter("hiAutoDial_3")).getBytes("8859_1"), "euc-kr");	//
			String 	autoDial_4	= new String(Str.CheckNullString(req.getParameter("hiAutoDial_4")).getBytes("8859_1"), "euc-kr");	//
			String 	autoDial_5	= new String(Str.CheckNullString(req.getParameter("hiAutoDial_5")).getBytes("8859_1"), "euc-kr");	//
			String 	autoDial_6	= new String(Str.CheckNullString(req.getParameter("hiAutoDial_6")).getBytes("8859_1"), "euc-kr");	//
			String 	autoDial_7	= new String(Str.CheckNullString(req.getParameter("hiAutoDial_7")).getBytes("8859_1"), "euc-kr");	//
			String 	autoDial_8	= new String(Str.CheckNullString(req.getParameter("hiAutoDial_8")).getBytes("8859_1"), "euc-kr");	//
			String 	autoDial_9	= new String(Str.CheckNullString(req.getParameter("hiAutoDial_9")).getBytes("8859_1"), "euc-kr");	//
			String 	autoDial_10	= new String(Str.CheckNullString(req.getParameter("hiAutoDial_10")).getBytes("8859_1"), "euc-kr");	//
			String 	autoDial_11	= new String(Str.CheckNullString(req.getParameter("hiAutoDial_11")).getBytes("8859_1"), "euc-kr");	//
			
			String 	used_0	= new String(Str.CheckNullString(req.getParameter("hiUsed_0")).getBytes("8859_1"), "euc-kr");	//
			String 	used_1	= new String(Str.CheckNullString(req.getParameter("hiUsed_1")).getBytes("8859_1"), "euc-kr");	//
			String 	used_2	= new String(Str.CheckNullString(req.getParameter("hiUsed_2")).getBytes("8859_1"), "euc-kr");	//
			String 	used_3	= new String(Str.CheckNullString(req.getParameter("hiUsed_3")).getBytes("8859_1"), "euc-kr");	//
			String 	used_4	= new String(Str.CheckNullString(req.getParameter("hiUsed_4")).getBytes("8859_1"), "euc-kr");	//
			String 	used_5	= new String(Str.CheckNullString(req.getParameter("hiUsed_5")).getBytes("8859_1"), "euc-kr");	//
			String 	used_6	= new String(Str.CheckNullString(req.getParameter("hiUsed_6")).getBytes("8859_1"), "euc-kr");	//
			String 	used_7	= new String(Str.CheckNullString(req.getParameter("hiUsed_7")).getBytes("8859_1"), "euc-kr");	//
			String 	used_8	= new String(Str.CheckNullString(req.getParameter("hiUsed_8")).getBytes("8859_1"), "euc-kr");	//
			String 	used_9	= new String(Str.CheckNullString(req.getParameter("hiUsed_9")).getBytes("8859_1"), "euc-kr");	//
			String 	used_10	= new String(Str.CheckNullString(req.getParameter("hiUsed_10")).getBytes("8859_1"), "euc-kr");	//
			String 	used_11	= new String(Str.CheckNullString(req.getParameter("hiUsed_11")).getBytes("8859_1"), "euc-kr");	//
			
			String 	userID	= new String(req.getParameter("hiUserID").getBytes("8859_1"), "euc-kr");		// 로그인 ID
			
			resStr = "automaticDialing.jsp";

			SessionManager manager = SessionManager.getInstance();
			HttpSession hs = req.getSession();
			String id = hs.getId();
			BaseEntity entity = manager.getBaseEntity(id);	
			
			AutomaticDialingSNMP automaticDialingSNMP = new AutomaticDialingSNMP();
			
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.2.0", used_0, 1);		// Integer
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.2.1", used_1, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.2.2", used_2, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.2.3", used_3, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.2.4", used_4, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.2.5", used_5, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.2.6", used_6, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.2.7", used_7, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.2.8", used_8, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.2.9", used_9, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.2.10", used_10, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.2.11", used_11, 1);
			
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.5.0", number_0, 3);		// OctetString
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.5.1", number_1, 3);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.5.2", number_2, 3);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.5.3", number_3, 3);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.5.4", number_4, 3);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.5.5", number_5, 3);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.5.6", number_6, 3);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.5.7", number_7, 3);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.5.8", number_8, 3);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.5.9", number_9, 3);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.5.10", number_10, 3);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.5.11", number_11, 3);
			
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.6.0", autoDial_0, 1);	// Integer
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.6.1", autoDial_1, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.6.2", autoDial_2, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.6.3", autoDial_3, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.6.4", autoDial_4, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.6.5", autoDial_5, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.6.6", autoDial_6, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.6.7", autoDial_7, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.6.8", autoDial_8, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.6.9", autoDial_9, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.6.10", autoDial_10, 1);
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.3.1.1.4.12.21.1.6.11", autoDial_11, 1);
			
			automaticDialingSNMP.snmpSet(snmp_Ip, "private", "1.3.6.1.4.1.5003.9.10.10.3.1.1.4.0", "1", 2);		// Burn OID
			
			// ############### LogHistory 처리  ###############
			String		strIp		= req.getRemoteAddr();
			LogHistory	logHistory 	= new LogHistory();
			int int_result = logHistory.LogHistorySave(userID+"|87|자동다이얼링 등록|1|"+strIp);
			// ##############################################

			res.sendRedirect("/bizportal/gateway/"+resStr);
		
		} catch (Exception e) {
			try{
				res.sendRedirect("/bizportal/errorMessage.jsp");
			} catch (Exception ee) {
			}
			e.printStackTrace();
		} finally {

		}		
		return forwardingPage;
	}
}
