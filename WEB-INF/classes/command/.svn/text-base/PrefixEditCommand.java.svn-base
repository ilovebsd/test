package command;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import acromate.ConnectionManager;
import acromate.common.StaticString;
import business.LogHistory;

import com.acromate.driver.db.DataStatement;
import com.acromate.util.Str;
import waf.BaseEntity;
import waf.SessionManager;
import webuser.ServerLogin;
import dto.system.PrefixTableDTO;
import dao.system.PrefixTableDAO;

public class PrefixEditCommand implements Command {
	public String execute(HttpServletRequest req, HttpServletResponse res) {
		DataStatement 	stmt 			= null;
		String 			forwardingPage 	= "";				
		String 			resStr 			= "";
		try {
			String 	prefixId 		= new String(Str.CheckNullString(req.getParameter("hiPrefixTableID")).getBytes("8859_1"), "euc-kr");	// 
			String 	startPrefix 	= new String(Str.CheckNullString(req.getParameter("hiStartPrefix")).getBytes("8859_1"), "euc-kr");		//  
			String 	endPrefix		= new String(Str.CheckNullString(req.getParameter("hiEndPrefix")).getBytes("8859_1"), "euc-kr");		// 
			String 	routeSelectRule = new String(Str.CheckNullString(req.getParameter("hiRouteSelectRule")).getBytes("8859_1"), "euc-kr");	// 
			String 	routeId 		= new String(Str.CheckNullString(req.getParameter("hiRouteID")).getBytes("8859_1"), "euc-kr");			// 
			String 	callType 		= new String(Str.CheckNullString(req.getParameter("hiCallType")).getBytes("8859_1"), "euc-kr");			// 
			String 	description 	= new String(Str.CheckNullString(req.getParameter("hiDescription")).getBytes("8859_1"), "euc-kr");		// 
			String 	minDigitCount 	= new String(Str.CheckNullString(req.getParameter("hiMinDigitCount")).getBytes("8859_1"), "euc-kr");	// 
			String 	maxDigitCount 	= new String(Str.CheckNullString(req.getParameter("hiMaxDigitCount")).getBytes("8859_1"), "euc-kr");	// 
			
			String 	userID			= new String(req.getParameter("hiUserID").getBytes("8859_1"), "euc-kr");		// 로그인 ID
			
			resStr = "prefixList.jsp";

			SessionManager manager = SessionManager.getInstance();
			if (manager.isLogin(req)) {
				HttpSession hs = req.getSession();
				String id = hs.getId();
				BaseEntity entity = manager.getBaseEntity(id);	
				
				PrefixTableDTO dto = new PrefixTableDTO();
				dto.setPrefixTableId(prefixId);
				dto.setStartPrefix(startPrefix);
				dto.setEndPrefix(endPrefix);
				dto.setRouteSelectRule(Integer.parseInt(routeSelectRule));
				dto.setRouteId(routeId);
				dto.setProtocol(2);
				dto.setCallType(Integer.parseInt(callType));
				dto.setChargeType(0);
				dto.setDescription(description);				
				dto.setMinDigitCount(Integer.parseInt(minDigitCount));
				dto.setMaxDigitCount(Integer.parseInt(maxDigitCount));
				dto.setRoutingEndpointType(1);
				
				stmt = ConnectionManager.allocStatement("SSW");
								
				PrefixTableDAO dao = new PrefixTableDAO();
				int insertResult = dao.update(stmt,dto);
				
				// ############### LogHistory 처리  ###############
				String		strIp		= req.getRemoteAddr();
				LogHistory	logHistory 	= new LogHistory();
				int int_result = logHistory.LogHistorySave(userID+"|86|Prefix 정책 ("+startPrefix+")|3|"+strIp);
				// ##############################################

				res.sendRedirect("/bizportal/system/"+resStr);
			} 
			else
				res.sendRedirect("/bizportal/system/"+resStr+"?session=0");
		
		} catch (Exception e) {
			try{
				res.sendRedirect("/bizportal/errorMessage.jsp");
			} catch (Exception ee) {
			}
			e.printStackTrace();
		} finally {
			//할당받은 DataStatement 객체는 반납
			if (stmt != null ) ConnectionManager.freeStatement(stmt);
		}		
		return forwardingPage;
	}
}
