package command;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import acromate.ConnectionManager;
import acromate.common.StaticString;
import com.acromate.driver.db.DataStatement;
import com.acromate.util.Str;
import waf.BaseEntity;
import waf.SessionManager;
import dto.SubscriberInfoDTO;
import dao.system.NatZoneRouteDAO;
import acromate.common.util.StringUtil;
import business.LogHistory;

public class NatZoneRouteDeleteCommand implements Command {
	public String execute(HttpServletRequest req, HttpServletResponse res) {
		String forwardingPage = "";
		DataStatement stmt = null;
		String resStr = "";

        try {
			String 	deleteStr 	= new String(Str.CheckNullString(req.getParameter("deleteStr")).getBytes("8859_1"), "euc-kr");

			String 	userID		= new String(req.getParameter("hiUserID").getBytes("8859_1"), "euc-kr");		// 로그인 ID
			
			resStr = "natRoutingList.jsp";
			
			SessionManager manager = SessionManager.getInstance();
			if (manager.isLogin(req)) {
				HttpSession hs = req.getSession();
				String id = hs.getId();
				BaseEntity entity = manager.getBaseEntity(id);	
				
				SubscriberInfoDTO scDTO = entity.getScDtoAttribute("scDTO");
				
				stmt = ConnectionManager.allocStatement("SSW");

				// 트랜잭션 시작
				stmt.stxTransaction();
				
				String[] 	dataStr = StringUtil.getParser(deleteStr, "");
				String		inzone 	= "";
				String		outzone	= "";
				
				if(dataStr != null){
					// ############### LogHistory 처리  ###############
					String		strIp		= req.getRemoteAddr();
					LogHistory	logHistory 	= new LogHistory();
					// ##############################################

					NatZoneRouteDAO dao = new NatZoneRouteDAO();
					
					for(int i=0; i < dataStr.length; i++){												
						String[] dataStr2 = StringUtil.getParser(dataStr[i], "|");
						if(dataStr != null){
							inzone  = dataStr2[0];
							outzone = dataStr2[1];
							
							//System.out.println("inzone : "+inzone);
							//System.out.println("outzone : "+outzone);
							
							int updateResult = dao.delete(stmt, inzone, outzone);
							
							// ############### LogHistory 처리  ###############
							int int_result = logHistory.LogHistorySave(userID+"|86|망간라우팅 관리 ("+inzone+")|2|"+strIp);
							// ##############################################
						}
					}
				}
								
				if (stmt != null)
					stmt.endTransaction(true);
				res.sendRedirect("/bizportal/system/"+resStr);
			} 
			else
				res.sendRedirect("/bizportal/system/"+resStr+"?session=0");
		} catch (Exception e) {
			System.out.println("에러발생 .......");
			try{
				res.sendRedirect("/bizportal/errorMessage.jsp");
			} catch (Exception ee) {
			}			
			e.printStackTrace();
		} finally {
			//할당받은 DataStatement 객체는 반납
			if (stmt != null ) ConnectionManager.freeStatement(stmt);
		}		
		return forwardingPage;
	}
}
