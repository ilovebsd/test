package command;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import business.LogHistory;

import com.acromate.driver.db.DataStatement;

import acromate.ConnectionManager;
import acromate.security.user.userlog.UserLogFunc;
import waf.BaseEntity;
import waf.SessionManager;
import webuser.*;

public class MainLogoutCommand implements Command {
	public String execute(HttpServletRequest req, HttpServletResponse res) {
		String forwardingPage = null;
		try {
			SessionManager manager = SessionManager.getInstance();
			if (manager.isLogin(req)) { // for "로그아웃-뒤로가기-로그아웃" 의 경우
				HttpSession hs = req.getSession();
				String id = hs.getId();
				BaseEntity entity = manager.getBaseEntity(id);
				DataStatement statement = entity.getStmtAttribute("statement");
				String userID = entity.getUserId();

				if (statement != null) {
					ConnectionManager.freeStatement(statement);
					manager.doLogout(req);
				}
				//forwardingPage = "/html/redirectToLogin.html";
				forwardingPage = "/index.jsp";
				
				// ############### LogHistory 처리  ###############
				String		strIp		= req.getRemoteAddr();
				LogHistory	logHistory 	= new LogHistory();
				int int_result = logHistory.LogHistorySave(userID+"|81|로그아웃|6|"+strIp);
				// ##############################################
			} else {
				//forwardingPage = "/html/redirectToLogin.html";
				forwardingPage = "/index.jsp";
			}

		} catch (Exception e) {
			e.printStackTrace();
		}

		return forwardingPage;
	}
}
