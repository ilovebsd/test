package bizportal.nasacti.ipivr.dao;

import java.sql.*;
import java.util.*;
import bizportal.nasacti.ipivr.DBPoolConnector;
import bizportal.nasacti.ipivr.dto.UsedVoiceDTO;
import bizportal.nasacti.ipivr.dto.VoiceDTO;

public class VoiceDAO extends DBPoolConnector {
	private static VoiceDAO instance = new VoiceDAO();

	public static VoiceDAO getInstance() {
		return instance;
	}

	private VoiceDAO() {
	}

	public int updateVoice(String strWName, String strWFile, String strWMemo, String strWIndex) throws Exception {
		Connection cn = null;
		PreparedStatement pstmt1 = null;
		PreparedStatement pstmt2 = null, pstmt3 = null;
		ResultSet rs = null;
		StringBuffer sb1 = new StringBuffer();
		StringBuffer sb2 = new StringBuffer();
		int iRtn = -1;
		int iRtnCnt = 0;

		try {
			cn = this.getConnection();

			sb1.append("SELECT COUNT(*) FROM NASA_WAV         \n");
			sb1.append("WHERE w_index <> ? AND w_file = ?       ");

			pstmt1 = cn.prepareStatement(sb1.toString());

			pstmt1.setInt(1, Integer.parseInt(strWIndex));
			pstmt1.setString(2, strWFile);

			rs = pstmt1.executeQuery();
			if(rs.next()) {
				if(rs.getInt(1) == 0) {
					if(strWFile == null || strWFile.equals("")) {
						sb2.append("UPDATE NASA_WAV SET          \n");
						sb2.append("w_name = ?,                  \n");
						sb2.append("w_send = 'N',                \n");
						sb2.append("w_memo = ?                   \n");
						sb2.append("WHERE w_index = ?              ");

						pstmt2 = cn.prepareStatement(sb2.toString());

						pstmt2.setString(1, strWName);
						pstmt2.setString(2, strWMemo);
						pstmt2.setInt(3, Integer.parseInt(strWIndex));
					} else {
						sb2.append("UPDATE NASA_WAV SET          \n");
						sb2.append("w_name = ?,                  \n");
						sb2.append("w_send = 'N',                \n");
						sb2.append("w_memo = ?,                  \n");
						sb2.append("w_file = ?                   \n");
						sb2.append("WHERE w_index = ?              ");

						pstmt2 = cn.prepareStatement(sb2.toString());

						pstmt2.setString(1, strWName);
						pstmt2.setString(2, strWMemo);
						pstmt2.setString(3, strWFile);
						pstmt2.setInt(4, Integer.parseInt(strWIndex));
					}

					iRtnCnt = pstmt2.executeUpdate();

					if(iRtnCnt > 0) {
						iRtn = 1;
						
						String sql = "UPDATE nasa_systemupdate SET su_check = 'Y'";
						System.out.println("sql : "+ sql);
						pstmt3 = cn.prepareStatement(sql);
						pstmt3.executeUpdate();
					}

				} else {
					iRtn = 2;
				}
			}
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(rs != null) try{ rs.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt1 != null) try{ pstmt1.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt2 != null) try{ pstmt2.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt3 != null) try{ pstmt3.close(); } catch(SQLException se) {se.printStackTrace();}
			if(cn != null) try{ cn.close(); } catch(SQLException se) {se.printStackTrace();}
		}
		return iRtn;

	}

	public int updateResponseModeVoiceReg(String strWIndex, String strWSendFile, String strNwuDefinition) throws Exception {
		Connection cn = null;
		PreparedStatement pstmt = null, pstmt2 = null;
		StringBuffer sb = new StringBuffer();
		int iRtn = -1;
		int iRtnCnt = 0;

		try {
			cn = this.getConnection();

			sb.append("UPDATE nasa_wave_use SET          \n");
			sb.append("w_index = ?,                      \n");
			sb.append("nwu_definition = ?                \n");
			sb.append("WHERE nwu_filename = ?              ");

			pstmt = cn.prepareStatement(sb.toString());

			pstmt.setInt(1, Integer.parseInt(strWIndex));
			pstmt.setString(2, strNwuDefinition);
			pstmt.setString(3, strWSendFile);

			iRtnCnt = pstmt.executeUpdate();

			if(iRtnCnt > 0) {
				iRtn = 1;
				
				String sql = "UPDATE nasa_systemupdate SET su_check = 'Y'";
				System.out.println("sql : "+ sql);
				pstmt2 = cn.prepareStatement(sql);
				pstmt2.executeUpdate();
			}
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(pstmt != null) try{ pstmt.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt2 != null) try{ pstmt2.close(); } catch(SQLException se) {se.printStackTrace();}
			if(cn != null) try{ cn.close(); } catch(SQLException se) {se.printStackTrace();}
		}
		return iRtn;

	}

	public int insertResponseModeVoiceReg(String strWKind, String strWSendFile, String strWIndex, String strNwuDefinition) throws Exception {
		Connection cn = null;
		PreparedStatement pstmt = null, pstmt2 = null;
		StringBuffer sb = new StringBuffer();
		int iRtn = -1;
		int iRtnCnt = 0;

		try {
			cn = this.getConnection();

			sb.append("insert into nasa_wave_use(nwu_idx, w_index, nwu_type, nwu_filename, nwu_definition)  ");
			sb.append("values(nextval('nasa_wave_use_nwu_idx_seq'), ?, ?, ?, ?)                             ");


			pstmt = cn.prepareStatement(sb.toString());

			pstmt.setInt(1, Integer.parseInt(strWIndex));
			pstmt.setString(2, strWKind);
			pstmt.setString(3, strWSendFile);
			pstmt.setString(4, strNwuDefinition);

			iRtnCnt = pstmt.executeUpdate();

			if(iRtnCnt > 0) {
				iRtn = 1;
				
				String sql = "UPDATE nasa_systemupdate SET su_check = 'Y'";
				System.out.println("sql : "+ sql);
				pstmt2 = cn.prepareStatement(sql);
				pstmt2.executeUpdate();
			}
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(pstmt != null) try{ pstmt.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt2 != null) try{ pstmt2.close(); } catch(SQLException se) {se.printStackTrace();}
			if(cn != null) try{ cn.close(); } catch(SQLException se) {se.printStackTrace();}
		}
		return iRtn;

	}

	public int insertAdditionalServiceVoiceReg(String strNwuType, String strWSendFile, String strWIndex, String strNsIdx) throws Exception {
		Connection cn = null;
		PreparedStatement pstmt = null, pstmt2 = null;
		StringBuffer sb = new StringBuffer();
		int iRtn = -1;
		int iRtnCnt = 0;

		try {
			cn = this.getConnection();

			sb.append("insert into nasa_wave_use(nwu_idx, w_index, nwu_type, nwu_filename, nwu_definition, ns_idx)  ");
			sb.append("values(nextval('nasa_wave_use_nwu_idx_seq'), ?, ?, ?,                                        ");
			sb.append("(select ns_definition from nasa_service where ns_idx = ?), ?)                                ");

			pstmt = cn.prepareStatement(sb.toString());

			pstmt.setInt(1, Integer.parseInt(strWIndex));
			pstmt.setString(2, strNwuType);
			pstmt.setString(3, strWSendFile);
			pstmt.setString(4, strNsIdx);
			pstmt.setInt(5, Integer.parseInt(strNsIdx));

			iRtnCnt = pstmt.executeUpdate();

			if(iRtnCnt > 0) {
				iRtn = 1;
				
				String sql = "UPDATE nasa_systemupdate SET su_check = 'Y'";
				System.out.println("sql : "+ sql);
				pstmt2 = cn.prepareStatement(sql);
				pstmt2.executeUpdate();
			}
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(pstmt != null) try{ pstmt.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt2 != null) try{ pstmt2.close(); } catch(SQLException se) {se.printStackTrace();}
			if(cn != null) try{ cn.close(); } catch(SQLException se) {se.printStackTrace();}
		}
		return iRtn;

	}

	public int updateVoiceFileSend(String strWKind, String strWSendFile, String strWIndex) throws Exception {
		Connection cn = null;
		PreparedStatement pstmt = null, pstmt2 = null;
		StringBuffer sb = new StringBuffer();
		int iRtn = -1;
		int iRtnCnt = 0;

		try {
			cn = this.getConnection();

			sb.append("UPDATE NASA_WAV SET          \n");
			sb.append("w_kind = ?,                  \n");
			sb.append("w_sendfile = ?               \n");
			sb.append("WHERE w_index = ?              ");

			pstmt = cn.prepareStatement(sb.toString());

			pstmt.setString(1, strWKind);
			pstmt.setString(2, strWSendFile);
			pstmt.setInt(3, Integer.parseInt(strWIndex));

			iRtnCnt = pstmt.executeUpdate();

			if(iRtnCnt > 0) {
				iRtn = 1;
				
				String sql = "UPDATE nasa_systemupdate SET su_check = 'Y'";
				System.out.println("sql : "+ sql);
				pstmt2 = cn.prepareStatement(sql);
				pstmt2.executeUpdate();
			}
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(pstmt != null) try{ pstmt.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt2 != null) try{ pstmt2.close(); } catch(SQLException se) {se.printStackTrace();}
			if(cn != null) try{ cn.close(); } catch(SQLException se) {se.printStackTrace();}
		}
		return iRtn;

	}

	public int updateVoice(String strWName, String strWFile, String strWIndex) throws Exception {
		Connection cn = null;
		PreparedStatement pstmt1 = null;
		PreparedStatement pstmt2 = null, pstmt3 = null;
		ResultSet rs = null;
		StringBuffer sb1 = new StringBuffer();
		StringBuffer sb2 = new StringBuffer();
		int iRtn = -1;
		int iRtnCnt = 0;

		try {
			cn = this.getConnection();

			sb1.append("SELECT COUNT(*) FROM NASA_WAV         \n");
			sb1.append("WHERE w_index <> ? AND w_file = ?       ");

			pstmt1 = cn.prepareStatement(sb1.toString());

			pstmt1.setInt(1, Integer.parseInt(strWIndex));
			pstmt1.setString(2, strWFile);

			rs = pstmt1.executeQuery();
			if(rs.next()) {
				if(rs.getInt(1) == 0) {
					if(strWFile == null || strWFile.equals("")) {
						sb2.append("UPDATE NASA_WAV SET          \n");
						sb2.append("w_name = ?,                  \n");
						sb2.append("w_send = ''                  \n");
						sb2.append("WHERE w_index = ?              ");

						pstmt2 = cn.prepareStatement(sb2.toString());

						pstmt2.setString(1, strWName);
						pstmt2.setInt(2, Integer.parseInt(strWIndex));
					} else {
						sb2.append("UPDATE NASA_WAV SET          \n");
						sb2.append("w_name = ?,                  \n");
						sb2.append("w_file = ?,                  \n");
						sb2.append("w_send = ''                  \n");
						sb2.append("WHERE w_index = ?              ");

						pstmt2 = cn.prepareStatement(sb2.toString());

						pstmt2.setString(1, strWName);
						pstmt2.setString(2, strWFile);
						pstmt2.setInt(3, Integer.parseInt(strWIndex));
					}

					iRtnCnt = pstmt2.executeUpdate();

					if(iRtnCnt > 0) {
						iRtn = 1;
						
						String sql = "UPDATE nasa_systemupdate SET su_check = 'Y'";
						System.out.println("sql : "+ sql);
						pstmt3 = cn.prepareStatement(sql);
						pstmt3.executeUpdate();
					}

				} else {
					iRtn = 2;
				}
			}
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(rs != null) try{ rs.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt1 != null) try{ pstmt1.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt2 != null) try{ pstmt2.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt3 != null) try{ pstmt3.close(); } catch(SQLException se) {se.printStackTrace();}
			if(cn != null) try{ cn.close(); } catch(SQLException se) {se.printStackTrace();}
		}
		return iRtn;

	}

	public int updateAcceptDate(String strWIndex) throws Exception {
		Connection cn = null;
		PreparedStatement pstmt = null;
		StringBuffer sb = new StringBuffer();
		int iRtn = -1;
		int iRtnCnt = 0;

		try {
			cn = this.getConnection();

			sb.append("UPDATE NASA_WAV SET                                      \n");
			sb.append("w_acceptdate = to_char(now(),'YYYY-MM-DD hh24:mi:ss')    \n");
			sb.append("WHERE w_index = ?                                          ");

			pstmt = cn.prepareStatement(sb.toString());

			pstmt.setInt(1, Integer.parseInt(strWIndex));

			iRtnCnt = pstmt.executeUpdate();

			if(iRtnCnt > 0) iRtn = 1;
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(pstmt != null) try{ pstmt.close(); } catch(SQLException se) {se.printStackTrace();}
			if(cn != null) try{ cn.close(); } catch(SQLException se) {se.printStackTrace();}
		}
		return iRtn;

	}

	public int insertVoice(VoiceDTO vDTO) throws Exception {
		Connection cn = null;
		PreparedStatement pstmt1 = null;
		PreparedStatement pstmt2 = null, pstmt3 = null;
		ResultSet rs = null;
		StringBuffer sb1 = new StringBuffer();
		StringBuffer sb2 = new StringBuffer();
		int iRtn = -1;
		int iRtnCnt = 0;

		try {
			cn = this.getConnection();

			sb1.append("SELECT COUNT(*) FROM NASA_WAV         \n");
			sb1.append("WHERE w_file = ?                        ");

			pstmt1 = cn.prepareStatement(sb1.toString());

			pstmt1.setString(1, vDTO.getWFile());

			rs = pstmt1.executeQuery();
			if(rs.next()) {
				if(rs.getInt(1) == 0) {

					sb2.append("INSERT INTO NASA_WAV(server_ip, w_name, w_file, w_memo, w_div, w_send, w_kind, w_sendfile, w_regdate, w_acceptdate)          \n");
					sb2.append("VALUES(?,?,?,?,?,?,?,?,to_char(now(),'YYYY-MM-DD hh24:mi:ss'),?)                                                                                    ");

					pstmt2 = cn.prepareStatement(sb2.toString());

					pstmt2.setString(1, vDTO.getServerIp());
					pstmt2.setString(2, vDTO.getWName());
					pstmt2.setString(3, vDTO.getWFile());
					pstmt2.setString(4, vDTO.getWMemo());
					pstmt2.setString(5, vDTO.getWDiv());
					pstmt2.setString(6, vDTO.getWSend());
					pstmt2.setString(7, vDTO.getWKind());
					pstmt2.setString(8, vDTO.getWSendFile());
					pstmt2.setString(9, vDTO.getWAcceptDate());

					iRtnCnt = pstmt2.executeUpdate();

					if(iRtnCnt > 0) {
						iRtn = 1;
						
						String sql = "UPDATE nasa_systemupdate SET su_check = 'Y'";
						System.out.println("sql : "+ sql);
						pstmt3 = cn.prepareStatement(sql);
						pstmt3.executeUpdate();
					}

				} else {
					iRtn = 2;
				}
			}
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(rs != null) try{ rs.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt1 != null) try{ pstmt1.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt2 != null) try{ pstmt2.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt3 != null) try{ pstmt3.close(); } catch(SQLException se) {se.printStackTrace();}
			if(cn != null) try{ cn.close(); } catch(SQLException se) {se.printStackTrace();}
		}
		return iRtn;

	}

	public int deleteVoice(String strWFile, String strWName) throws Exception {
		Connection cn = null;
		PreparedStatement pstmt = null, pstmt2 = null;
		StringBuffer sb = new StringBuffer();
		int iRtn = -1;
		int iRtnCnt = 0;

		try {
			cn = this.getConnection();

			sb.append("DELETE FROM NASA_WAV                 \n");
			sb.append("WHERE w_file = ? AND w_name = ?        ");

			pstmt = cn.prepareStatement(sb.toString());

			pstmt.setString(1, strWFile);
			pstmt.setString(2, strWName);

			iRtnCnt = pstmt.executeUpdate();

			if(iRtnCnt > 0) {
				iRtn = 1;
				
				String sql = "UPDATE nasa_systemupdate SET su_check = 'Y'";
				System.out.println("sql : "+ sql);
				pstmt2 = cn.prepareStatement(sql);
				pstmt2.executeUpdate();
			}


		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(pstmt != null) try{ pstmt.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt2 != null) try{ pstmt2.close(); } catch(SQLException se) {se.printStackTrace();}
			if(cn != null) try{ cn.close(); } catch(SQLException se) {se.printStackTrace();}
		}
		return iRtn;

	}

	public int deleteVoice(String strWIndex) throws Exception {
		Connection cn = null;
		PreparedStatement pstmt = null, pstmt2 = null;
		StringBuffer sb = new StringBuffer();
		int iRtn = -1;
		int iRtnCnt = 0;

		try {
			cn = this.getConnection();

			sb.append("DELETE FROM nasa_wav    \n");
			sb.append("WHERE w_index = ?         ");

			pstmt = cn.prepareStatement(sb.toString());

			pstmt.setInt(1, Integer.parseInt(strWIndex));

			iRtnCnt = pstmt.executeUpdate();

			if(iRtnCnt > 0) {
				iRtn = 1;
				
				String sql = "UPDATE nasa_systemupdate SET su_check = 'Y'";
				System.out.println("sql : "+ sql);
				pstmt2 = cn.prepareStatement(sql);
				pstmt2.executeUpdate();
			}


		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(pstmt != null) try{ pstmt.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt2 != null) try{ pstmt2.close(); } catch(SQLException se) {se.printStackTrace();}
			if(cn != null) try{ cn.close(); } catch(SQLException se) {se.printStackTrace();}
		}
		return iRtn;

	}


	public VoiceDTO getVoice(String strWIndex) throws Exception {
		Connection cn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		StringBuffer sb = new StringBuffer();

		VoiceDTO vDTO = new VoiceDTO();

		try {
			cn = this.getConnection();

			sb.append("SELECT w_index, COALESCE(server_ip, '') as server_ip, COALESCE(w_name, '') as w_name, COALESCE(w_file, '') as w_file,          \n");
			sb.append("COALESCE(w_memo, '') as w_memo, COALESCE(w_div, '') as w_div, COALESCE(w_send, '') as w_send, COALESCE(w_kind, '') as w_kind,  \n");
			sb.append("COALESCE(w_sendfile, '') as w_sendfile, COALESCE(w_regdate, '') AS w_regdate, COALESCE(w_acceptdate, '') AS w_acceptdate       \n");
			sb.append("FROM NASA_WAV WHERE w_index = ?                                                                                                  ");

			pstmt = cn.prepareStatement(sb.toString());
			pstmt.setInt(1, Integer.parseInt(strWIndex));

			rs = pstmt.executeQuery();

			if(rs.next()) {
				vDTO.setWIndex(String.valueOf(rs.getInt("w_index")));
				vDTO.setServerIp(rs.getString("server_ip"));
				vDTO.setWName(rs.getString("w_name"));
				vDTO.setWFile(rs.getString("w_file"));
				vDTO.setWMemo(rs.getString("w_memo"));
				vDTO.setWDiv(rs.getString("w_div"));
				vDTO.setWSend(rs.getString("w_send"));
				vDTO.setWKind(rs.getString("w_kind"));
				vDTO.setWSendFile(rs.getString("w_sendfile"));
				vDTO.setWRegDate(rs.getString("w_regdate"));
				vDTO.setWAcceptDate(rs.getString("w_acceptdate"));
			}

		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(rs != null) try{ rs.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt != null) try{ pstmt.close(); } catch(SQLException se) {se.printStackTrace();}
			if(cn != null) try{ cn.close(); } catch(SQLException se) {se.printStackTrace();}
		}

		return vDTO;

	}

	public List getAllVoice(String strKey, String strValue) throws Exception {
		Connection cn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		StringBuffer sb = new StringBuffer();

		ArrayList voiceDTOList = null;

		try {
			cn = this.getConnection();

			sb.append("SELECT w_index, COALESCE(server_ip, '') as server_ip, COALESCE(w_name, '') as w_name, COALESCE(w_file, '') as w_file,          \n");
			sb.append("COALESCE(w_memo, '') as w_memo, COALESCE(w_div, '') as w_div, COALESCE(w_send, '') as w_send, COALESCE(w_kind, '') as w_kind,  \n");
			sb.append("COALESCE(w_sendfile, '') as w_sendfile, COALESCE(w_regdate, '') AS w_regdate, COALESCE(w_acceptdate, '') AS w_acceptdate       \n");
			sb.append("FROM NASA_WAV                                                                                                                  \n");
			if(strKey != null && !strKey.equals(""))
				sb.append("WHERE " + strKey + " LIKE '%" + strValue + "%'                                                                             \n");
			sb.append("order by w_index                                                                                                                 ");

			pstmt = cn.prepareStatement(sb.toString());
			rs = pstmt.executeQuery();

			voiceDTOList = new ArrayList();
			if(rs.next()) {
				do {
					VoiceDTO vDTO = new VoiceDTO();
					vDTO.setWIndex(String.valueOf(rs.getInt("w_index")));
					vDTO.setServerIp(rs.getString("server_ip"));
					vDTO.setWName(rs.getString("w_name"));
					vDTO.setWFile(rs.getString("w_file"));
					vDTO.setWMemo(rs.getString("w_memo"));
					vDTO.setWDiv(rs.getString("w_div"));
					vDTO.setWSend(rs.getString("w_send"));
					vDTO.setWKind(rs.getString("w_kind"));
					vDTO.setWSendFile(rs.getString("w_sendfile"));
					vDTO.setWRegDate(rs.getString("w_regdate"));
					vDTO.setWAcceptDate(rs.getString("w_acceptdate"));
					voiceDTOList.add(vDTO);
				} while(rs.next());
			}

		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(rs != null) try{ rs.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt != null) try{ pstmt.close(); } catch(SQLException se) {se.printStackTrace();}
			if(cn != null) try{ cn.close(); } catch(SQLException se) {se.printStackTrace();}
		}

		if(voiceDTOList != null) voiceDTOList.trimToSize();
		return voiceDTOList;
	}


	public int deleteUsedVoice(String strNwuIdx) throws Exception {
		Connection cn = null;
		PreparedStatement pstmt = null, pstmt2 = null;
		StringBuffer sb = new StringBuffer();
		int iRtn = -1;
		int iRtnCnt = 0;

		try {
			cn = this.getConnection();

			sb.append("DELETE FROM nasa_wave_use    \n");
			sb.append("WHERE nwu_idx = ?            ");

			pstmt = cn.prepareStatement(sb.toString());

			pstmt.setInt(1, Integer.parseInt(strNwuIdx));

			iRtnCnt = pstmt.executeUpdate();

			if(iRtnCnt > 0) {
				iRtn = 1;
				
				String sql = "UPDATE nasa_systemupdate SET su_check = 'Y'";
				System.out.println("sql : "+ sql);
				pstmt2 = cn.prepareStatement(sql);
				pstmt2.executeUpdate();
			}


		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(pstmt != null) try{ pstmt.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt2 != null) try{ pstmt2.close(); } catch(SQLException se) {se.printStackTrace();}
			if(cn != null) try{ cn.close(); } catch(SQLException se) {se.printStackTrace();}
		}
		return iRtn;

	}


	public UsedVoiceDTO getUsedResponseModeVoice(String strNwuFileName) throws Exception {
		UsedVoiceDTO uvDTO = null;

		Connection cn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		StringBuffer sb = new StringBuffer();

		try {
			cn = this.getConnection();
			sb.append("select nwu_idx, w_index, nwu_type, nwu_filename, nwu_definition, ns_idx from nasa_wave_use where nwu_filename = ?");
			pstmt = cn.prepareStatement(sb.toString());
			pstmt.setString(1, strNwuFileName);
			rs = pstmt.executeQuery();

			if(rs.next()) {
				uvDTO = new UsedVoiceDTO();
				uvDTO.setNwuIdx(String.valueOf(rs.getInt("nwu_idx")));
				uvDTO.setWIndex(String.valueOf(rs.getInt("w_index")));
				uvDTO.setNwuType(rs.getString("nwu_type"));
				uvDTO.setNwuFileName(rs.getString("nwu_filename"));
				uvDTO.setNwuDefinition(rs.getString("nwu_definition"));
				uvDTO.setNsIdx(String.valueOf(rs.getInt("ns_idx")));
			}

		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(rs != null) try{ rs.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt != null) try{ pstmt.close(); } catch(SQLException se) {se.printStackTrace();}
			if(cn != null) try{ cn.close(); } catch(SQLException se) {se.printStackTrace();}
		}
		return uvDTO;
	}


	public UsedVoiceDTO getUsedVoice(String strNwuIdx) throws Exception {
		UsedVoiceDTO uvDTO = null;

		Connection cn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		StringBuffer sb = new StringBuffer();

		try {
			cn = this.getConnection();
			sb.append("select nwu_idx, w_index, nwu_type, nwu_filename, nwu_definition, ns_idx from nasa_wave_use where nwu_idx = ?");
			pstmt = cn.prepareStatement(sb.toString());
			pstmt.setInt(1, Integer.parseInt(strNwuIdx));
			rs = pstmt.executeQuery();

			if(rs.next()) {
				uvDTO = new UsedVoiceDTO();
				uvDTO.setNwuIdx(String.valueOf(rs.getInt("nwu_idx")));
				uvDTO.setWIndex(String.valueOf(rs.getInt("w_index")));
				uvDTO.setNwuType(rs.getString("nwu_type"));
				uvDTO.setNwuFileName(rs.getString("nwu_filename"));
				uvDTO.setNwuDefinition(rs.getString("nwu_definition"));
				uvDTO.setNsIdx(String.valueOf(rs.getInt("ns_idx")));
			}

		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(rs != null) try{ rs.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt != null) try{ pstmt.close(); } catch(SQLException se) {se.printStackTrace();}
			if(cn != null) try{ cn.close(); } catch(SQLException se) {se.printStackTrace();}
		}
		return uvDTO;
	}

	public List getAllUsedVoice(String strWIndex) throws Exception {
		Connection cn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		StringBuffer sb = new StringBuffer();
		ArrayList usedWaveList = null;

		try {
			cn = this.getConnection();
			sb.append("select nwu_idx, w_index, nwu_type, nwu_filename, nwu_definition, ns_idx from nasa_wave_use where w_index = ? order by nwu_type");
			pstmt = cn.prepareStatement(sb.toString());
			pstmt.setInt(1, Integer.parseInt(strWIndex));
			rs = pstmt.executeQuery();

			usedWaveList = new ArrayList();
			if(rs.next()) {
				do {
					UsedVoiceDTO uvDTO = new UsedVoiceDTO();
					uvDTO.setNwuIdx(String.valueOf(rs.getInt("nwu_idx")));
					uvDTO.setWIndex(String.valueOf(rs.getInt("w_index")));
					uvDTO.setNwuType(rs.getString("nwu_type"));
					uvDTO.setNwuFileName(rs.getString("nwu_filename"));
					uvDTO.setNwuDefinition(rs.getString("nwu_definition"));
					uvDTO.setNsIdx(String.valueOf(rs.getInt("ns_idx")));
					usedWaveList.add(uvDTO);
				} while(rs.next());
			}

		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(rs != null) try{ rs.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt != null) try{ pstmt.close(); } catch(SQLException se) {se.printStackTrace();}
			if(cn != null) try{ cn.close(); } catch(SQLException se) {se.printStackTrace();}
		}



		if(usedWaveList != null) usedWaveList.trimToSize();
		return usedWaveList;

	}

}
