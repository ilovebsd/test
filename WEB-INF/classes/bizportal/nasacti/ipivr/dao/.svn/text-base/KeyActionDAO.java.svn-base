package bizportal.nasacti.ipivr.dao;

import bizportal.nasacti.ipivr.DBPoolConnector;
import bizportal.nasacti.ipivr.dto.KeyActionDTO;
import java.sql.*;
import java.util.*;


public class KeyActionDAO extends DBPoolConnector {
	public static final int IVR = 1;
	public static final int SERVICE = 2;
	public static final int IVR_SERVICE = 3;
	public static final int SIMPLE_IVR = 4;
	private static KeyActionDAO instance = new KeyActionDAO();

	public static KeyActionDAO getInstance() {
		return instance;
	}

	private KeyActionDAO() {
	}

	public List getKeyAction(int nType) throws Exception {
		Connection cn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		StringBuffer sb = new StringBuffer();

		ArrayList keyActionDTOList = null;

		try {
			cn = this.getConnection();
			switch(nType) {
				case IVR:
					sb.append("select ka_idx, ka_code, ka_name, ka_type, COALESCE(ka_description, '') as ka_description from nasa_keyaction_code where ka_type = 'I' order by ka_name");
					break;
				case SERVICE:
					sb.append("select ka_idx, ka_code, ka_name, ka_type, COALESCE(ka_description, '') as ka_description from nasa_keyaction_code where ka_type = 'S' order by ka_name");
					break;
				case IVR_SERVICE:
					sb.append("select ka_idx, ka_code, ka_name, ka_type, COALESCE(ka_description, '') as ka_description from nasa_keyaction_code order by ka_name");
					break;
				case SIMPLE_IVR:
					sb.append("select ka_idx, ka_code, ka_name, ka_type, COALESCE(ka_description, '') as ka_description from nasa_keyaction_code where ka_type = 'I' and ka_visible = '1' order by ka_name");
					break;
			}

			pstmt = cn.prepareStatement(sb.toString());
			rs = pstmt.executeQuery();

			keyActionDTOList = new ArrayList();
			if(rs.next()) {
				do {
					KeyActionDTO keyActionDTO = new KeyActionDTO();
					keyActionDTO.setKaIdx(String.valueOf(rs.getInt("ka_idx")));
					keyActionDTO.setKaCode(rs.getString("ka_code"));
					keyActionDTO.setKaName(rs.getString("ka_name"));
					keyActionDTO.setKaType("ka_type");
					keyActionDTO.setKaDescription("ka_description");
					keyActionDTOList.add(keyActionDTO);
				} while(rs.next());
			}

		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			if(rs != null) try{ rs.close(); } catch(SQLException se) {se.printStackTrace();}
			if(pstmt != null) try{ pstmt.close(); } catch(SQLException se) {se.printStackTrace();}
			if(cn != null) try{ cn.close(); } catch(SQLException se) {se.printStackTrace();}
		}

		if(keyActionDTOList != null) keyActionDTOList.trimToSize();
		return keyActionDTOList;
	}

}
