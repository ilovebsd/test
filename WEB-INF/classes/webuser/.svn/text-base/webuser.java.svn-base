package webuser;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.Properties;
import java.util.StringTokenizer;

import javax.servlet.*;
import javax.servlet.http.*;

import acromate.ConnectionManager;
import acromate.security.login.LoginBean;
import command.*;


public class webuser extends HttpServlet {

	private static final long serialVersionUID = 1L;

	ConnectionManager connectionManager;
	public ServerLogin login;
	public Properties properties;
	public ServletContext context;
	public static webuser webUser;
	public LoginBean lbean = null;

	public void init(ServletConfig conf) throws ServletException {
	        context = conf.getServletContext();
            login = ServerLogin.getServerLogin();
            login.login(context);
    		webUser = this ;
	}

	public static webuser getWebuser() {
		return webUser;
	}

	public ServletContext getServletContext() {
		return context;
	}
	
	// Process the HTTP Get request
	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doPost(request, response);
	}

	// Process the HTTP Post request
	public void doPost(HttpServletRequest req, HttpServletResponse res)	throws ServletException, IOException {
		try {
			String requestURI = req.getRequestURI();
			String contextPath = req.getContextPath();
			String contextURI = null;
			String view = null;

			System.out.println("contextPath --> " + contextPath);
			if (!contextPath.equals("")) {
				contextURI = requestURI.substring(contextPath.length());
			} else {
				contextURI = requestURI;
			}
			System.out.println("contextURI --> " + contextURI);
			
			CommandFactory commandFact = CommandFactory.getInstance();
			Command command = commandFact.createCommand(contextURI);

			view = command.execute(req, res);
			System.out.println("view 00--> " + view);
			if (view != null && view != "")
				context.getRequestDispatcher(view).forward(req, res);

		} catch (Exception e) {
			System.out.println("err : " + e.getMessage());
			req.setAttribute("ErrorMsg", e.getMessage());
			context.getRequestDispatcher("/error.jsp").forward(req, res);
		}
	}

	// Clean up resources
	public void destroy() {
		System.out.println("¼­ºí¸´ Á¾·á--------");
		login.logout();
	}

}
