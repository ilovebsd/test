package system;

import java.sql.ResultSet ;
import java.sql.Statement;
import java.util.ArrayList ;
import java.util.List ;
import acromate.common.util.Str ;
import com.acromate.driver.db.DataStatement ;

import dto.system.SystemClusterDTO;
import dto.system.SystemHardwareDTO;
import dto.system.SystemProcessDTO;

public class EmsList {
	public List getClusterList(DataStatement stmt) {		
		SystemClusterDTO 		systemClusterDTO;
        List<SystemClusterDTO> 	clusterList 		= new ArrayList<SystemClusterDTO>();
        
        String sql = "SELECT sysGroupID, clusterID, clusterName, ServiceType , ClusterType FROM table_SystemCluster ";
        sql = sql + "\n WHERE SERVICETYPE = 'HW' ";
        
        System.out.println("SQL문 : "+sql);        
        ResultSet rs = null;
        try {
            if (stmt != null) {
                rs = stmt.executeQuery(sql);
                
                while (rs.next()) {
                	systemClusterDTO = new SystemClusterDTO(
                    	Str.CheckNullString(rs.getString("sysGroupID")),                        
                    	Str.CheckNullString(rs.getString("clusterID")),
                        Str.CheckNullString(rs.getString("clusterName")),
                        Str.CheckNullString(rs.getString("ServiceType")),
                        rs.getInt("ClusterType")
                    );

                	clusterList.add(systemClusterDTO);
                }
                rs.close();
            } else            
                System.out.println("데이터베이스에 연결할 수 없습니다.");            
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return clusterList;
        } finally {
            try {
                if (rs != null)
                    rs.close();
            } catch (Exception e) {}
        }
        return clusterList;
    }
	public List getClusterList(Statement stmt) {		
		SystemClusterDTO 		systemClusterDTO;
        List<SystemClusterDTO> 	clusterList 		= new ArrayList<SystemClusterDTO>();
        
        String sql = "SELECT sysGroupID, clusterID, clusterName, ServiceType , ClusterType FROM table_SystemCluster ";
        sql = sql + "\n WHERE SERVICETYPE = 'HW' ";
        
        System.out.println("SQL문 : "+sql);        
        ResultSet rs = null;
        try {
            if (stmt != null) {
                rs = stmt.executeQuery(sql);
                
                while (rs.next()) {
                	systemClusterDTO = new SystemClusterDTO(
                    	Str.CheckNullString(rs.getString("sysGroupID")),                        
                    	Str.CheckNullString(rs.getString("clusterID")),
                        Str.CheckNullString(rs.getString("clusterName")),
                        Str.CheckNullString(rs.getString("ServiceType")),
                        rs.getInt("ClusterType")
                    );

                	clusterList.add(systemClusterDTO);
                }
                rs.close();
            } else            
                System.out.println("데이터베이스에 연결할 수 없습니다.");            
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return clusterList;
        } finally {
            try {
                if (rs != null)
                    rs.close();
            } catch (Exception e) {}
        }
        return clusterList;
    }

	public List getHardwareList(DataStatement stmt) {		
		SystemHardwareDTO 		systemHardwareDTO;
        List<SystemHardwareDTO> 	hardwareList 		= new ArrayList<SystemHardwareDTO>();
        
        String sql = "SELECT sysGroupID, hwclusterid, hwID, hwName, hwstatus, ipaddress, port, serviceline, heartbeatline, managerline, LocationX, LocationY ";
        sql = sql + "\n FROM table_SystemHardware "; 
        
        System.out.println("SQL문 : "+sql);        
        ResultSet rs = null;
        try {
            if (stmt != null) {
                rs = stmt.executeQuery(sql);
                
                while (rs.next()) {
                	systemHardwareDTO = new SystemHardwareDTO(
                    	Str.CheckNullString(rs.getString("sysGroupID")),                        
                    	Str.CheckNullString(rs.getString("hwclusterid")),
                        Str.CheckNullString(rs.getString("hwID")),
                        Str.CheckNullString(rs.getString("hwName")),
                        rs.getInt("hwstatus"),
                        Str.CheckNullString(rs.getString("ipaddress")),
                        rs.getInt("port"),
                        rs.getInt("serviceline"),
                        rs.getInt("heartbeatline"),
                        rs.getInt("managerline"),
                        rs.getInt("LocationX"),
                        rs.getInt("LocationY")
                    );

                	hardwareList.add(systemHardwareDTO);
                }
                rs.close();
            } else            
                System.out.println("데이터베이스에 연결할 수 없습니다.");            
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return hardwareList;
        } finally {
            try {
                if (rs != null)
                    rs.close();
            } catch (Exception e) {}
        }
        return hardwareList;
    }
	public List getHardwareList(Statement stmt) {		
		SystemHardwareDTO 		systemHardwareDTO;
        List<SystemHardwareDTO> 	hardwareList 		= new ArrayList<SystemHardwareDTO>();
        
        String sql = "SELECT sysGroupID, hwclusterid, hwID, hwName, hwstatus, ipaddress, port, serviceline, heartbeatline, managerline, LocationX, LocationY ";
        sql = sql + "\n FROM table_SystemHardware "; 
        
        System.out.println("SQL문 : "+sql);        
        ResultSet rs = null;
        try {
            if (stmt != null) {
                rs = stmt.executeQuery(sql);
                
                while (rs.next()) {
                	systemHardwareDTO = new SystemHardwareDTO(
                    	Str.CheckNullString(rs.getString("sysGroupID")),                        
                    	Str.CheckNullString(rs.getString("hwclusterid")),
                        Str.CheckNullString(rs.getString("hwID")),
                        Str.CheckNullString(rs.getString("hwName")),
                        rs.getInt("hwstatus"),
                        Str.CheckNullString(rs.getString("ipaddress")),
                        rs.getInt("port"),
                        rs.getInt("serviceline"),
                        rs.getInt("heartbeatline"),
                        rs.getInt("managerline"),
                        rs.getInt("LocationX"),
                        rs.getInt("LocationY")
                    );

                	hardwareList.add(systemHardwareDTO);
                }
                rs.close();
            } else            
                System.out.println("데이터베이스에 연결할 수 없습니다.");            
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return hardwareList;
        } finally {
            try {
                if (rs != null)
                    rs.close();
            } catch (Exception e) {}
        }
        return hardwareList;
    }
	
	public List getSystemProcessList(DataStatement stmt) {		
		SystemProcessDTO 		systemProcessDTO;
        List<SystemProcessDTO> 	processList 		= new ArrayList<SystemProcessDTO>();
        
        String sql = "SELECT sysGroupID, hwID, processID, HWClusterID, dbConnectionString, dbUserName, dbPassword, dbDriverClass, Status, ClusterID, DBMaxConnection ";
        sql = sql + "\n FROM table_SystemProcess "; 
        
        System.out.println("SQL문 : "+sql);        
        ResultSet rs = null;
        try {
            if (stmt != null) {
                rs = stmt.executeQuery(sql);
                
                while (rs.next()) {
                	systemProcessDTO = new SystemProcessDTO(
                    	Str.CheckNullString(rs.getString("sysGroupID")),                        
                    	Str.CheckNullString(rs.getString("HWClusterID")),
                        Str.CheckNullString(rs.getString("hwID")),
                        Str.CheckNullString(rs.getString("ClusterID")),
                        Str.CheckNullString(rs.getString("processID")),
                        Str.CheckNullString(rs.getString("dbConnectionString")),
                        Str.CheckNullString(rs.getString("dbUserName")),
                        Str.CheckNullString(rs.getString("dbPassword")),                        
                        Str.CheckNullString(rs.getString("dbDriverClass")),
                        rs.getInt("Status"),
                        rs.getInt("DBMaxConnection")
                    );

                	processList.add(systemProcessDTO);
                }
                rs.close();
            } else            
                System.out.println("데이터베이스에 연결할 수 없습니다.");            
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return processList;
        } finally {
            try {
                if (rs != null)
                    rs.close();
            } catch (Exception e) {}
        }
        return processList;
    }
	public List getSystemProcessList(Statement stmt) {		
		SystemProcessDTO 		systemProcessDTO;
        List<SystemProcessDTO> 	processList 		= new ArrayList<SystemProcessDTO>();
        
        String sql = "SELECT sysGroupID, hwID, processID, HWClusterID, dbConnectionString, dbUserName, dbPassword, dbDriverClass, Status, ClusterID, DBMaxConnection ";
        sql = sql + "\n FROM table_SystemProcess "; 
        
        System.out.println("SQL문 : "+sql);        
        ResultSet rs = null;
        try {
            if (stmt != null) {
                rs = stmt.executeQuery(sql);
                
                while (rs.next()) {
                	systemProcessDTO = new SystemProcessDTO(
                    	Str.CheckNullString(rs.getString("sysGroupID")),                        
                    	Str.CheckNullString(rs.getString("HWClusterID")),
                        Str.CheckNullString(rs.getString("hwID")),
                        Str.CheckNullString(rs.getString("ClusterID")),
                        Str.CheckNullString(rs.getString("processID")),
                        Str.CheckNullString(rs.getString("dbConnectionString")),
                        Str.CheckNullString(rs.getString("dbUserName")),
                        Str.CheckNullString(rs.getString("dbPassword")),                        
                        Str.CheckNullString(rs.getString("dbDriverClass")),
                        rs.getInt("Status"),
                        rs.getInt("DBMaxConnection")
                    );

                	processList.add(systemProcessDTO);
                }
                rs.close();
            } else            
                System.out.println("데이터베이스에 연결할 수 없습니다.");            
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return processList;
        } finally {
            try {
                if (rs != null)
                    rs.close();
            } catch (Exception e) {}
        }
        return processList;
    }
	
}
