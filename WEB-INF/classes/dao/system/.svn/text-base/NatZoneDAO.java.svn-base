package dao.system;

import java.sql.ResultSet;
import java.util.List;
import java.util.Vector;
import acromate.common.util.WebUtil;
import com.acromate.driver.db.DataStatement;
import dto.system.NatZoneDTO;
import acromate.common.util.StringUtil;
import acromate.*;

public class NatZoneDAO {

    public NatZoneDAO() {}
    
    public int insert(DataStatement stmt, NatZoneDTO natZoneDTO) {

        ResultSet rs = null;
        int nResult = 0;

        try {            
            if (stmt != null) {
            	// Transaction 시작
            	stmt.stxTransaction();            	
            	
                String sql = "\n INSERT INTO table_Zone(ZoneCode, ZoneName, DESCRIPTION) ";
            	sql = sql +  "\n                 	values (" ;
            	sql = sql + "'" + natZoneDTO.getZonecode()     	+ "' , " ;            
            	sql = sql + "'" + natZoneDTO.getZonename()  	+ "' , " ;
            	sql = sql + "'" + natZoneDTO.getDescription()   + "'" ;
            	sql = sql + ") ";
                System.out.println("insert--->"+sql);
                                        
                nResult = stmt.executeUpdate(sql);
                if (nResult >= 1)
                    System.out.println("입력 성공");
                else
                    System.out.println("입력 실패");
                
                // Transaction 종료
                stmt.endTransaction(true);			// commit 처리
                // ======================================================================
                
            } else
                System.out.println("데이터베이스에 연결할 수 없습니다.");
        } catch (Exception e) {
        	// Transaction  Rollback 처리
        	stmt.endTransaction(false);		// rollback 처리
        	
        	e.printStackTrace();
        }
        
        return nResult;
    }

    public int update(DataStatement stmt, NatZoneDTO natZoneDTO) {

        ResultSet rs = null;
        int nResult = 0;

        try {            
            if (stmt != null) {
            	// Transaction 시작
            	stmt.stxTransaction();            	
            	
                String sql = "\n UPDATE table_Zone Set ";
            	sql = sql + "\n ZoneName 		= '" + natZoneDTO.getZonename()  	+ "' , " ;
            	sql = sql + "\n DESCRIPTION 	= '" + natZoneDTO.getDescription()  + "'" ;
            	sql = sql + "\n WHERE ZoneCode	= '" + natZoneDTO.getZonecode() + "' ";
                System.out.println("insert--->"+sql);
                                        
                nResult = stmt.executeUpdate(sql);
                if (nResult >= 1)
                    System.out.println("입력 성공");
                else
                    System.out.println("입력 실패");
                
                // Transaction 종료
                stmt.endTransaction(true);			// commit 처리
                // ======================================================================
                
            } else
                System.out.println("데이터베이스에 연결할 수 없습니다.");
        } catch (Exception e) {
        	// Transaction  Rollback 처리
        	stmt.endTransaction(false);		// rollback 처리
        	
        	e.printStackTrace();
        }
        
        return nResult;
    }
  
    public int delete(DataStatement stmt, String zonecode) {
    	ResultSet rs = null;
        int nResult = 0;
        try {            
            if (stmt != null) {
                String sql = "\n Delete From table_Zone Where ZoneCode = '" + zonecode + "' ";
                
                nResult = stmt.executeUpdate(sql);
                if (nResult >= 1) {
                    System.out.println("삭제 성공"); 
                }
                else
                    System.out.println("삭제 실패");
            } else
                System.out.println("데이터베이스에 연결할 수 없습니다.");
        } catch (Exception e) {
            e.printStackTrace();
        }        
        return nResult;
    }    
}