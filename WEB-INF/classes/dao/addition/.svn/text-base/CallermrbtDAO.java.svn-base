package dao.addition;

import java.sql.ResultSet;
import java.util.List;
import java.io.File;

import acromate.common.util.Str;
import acromate.common.util.WebUtil;
import com.acromate.driver.db.DataStatement;

import dto.CallermrbtDTO;
import acromate.common.util.StringUtil;
import acromate.common.StaticString;

public class CallermrbtDAO {

    public CallermrbtDAO() {}
    	
    public int insert(DataStatement stmt, CallermrbtDTO callermrbtDTO) {

        String    sql         = "";
        int       nResult     = 0;
        try {            
            if (stmt != null) {
                sql  = "\n INSERT INTO table_callermrbt (e164, callere164, filename, description, repeatno) ";
                sql += "\n                       values (" ;
                sql += "'" + callermrbtDTO.getE164()        + "'," ;
                sql += "'" + callermrbtDTO.getCallerE164()  + "'," ;            
                sql += "'" + callermrbtDTO.getFileName()    + "'," ; 
                sql += "'" + callermrbtDTO.getDescription() + "'," ; 
                sql += " " + callermrbtDTO.getRepeatNo();
                sql += ") ";

                nResult = stmt.executeUpdate(sql);
                if (nResult >= 1)
                    System.out.println("입력 성공");
                else
                    System.out.println("입력 실패");            		

            } else
                System.out.println("데이터베이스에 연결할 수 없습니다.");
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            return nResult ;
        }
        
    }
    
    public int delete(DataStatement stmt, String e164, String deleteStr) {
        ResultSet rs     = null;
		int    nResult   = 0;
		String sql       = "";
        File   tempFile  = null;  // 파일 객체
		        
        try {            
        	String[] dataStr = StringUtil.getParser(deleteStr, "|");

    		if (stmt != null) {
				if(dataStr != null){
					// 트랜잭션 시작
					stmt.stxTransaction();
					
					for(int i=0; i < dataStr.length; i++){
						sql  = "\n SELECT filename" ;
                		sql += "\n   FROM table_callermrbt ";
                		sql += "\n  WHERE e164 = '" + e164 + "' ";
		                sql += "\n    AND callere164 = '" + dataStr[i] + "'";

                        rs = stmt.executeQuery(sql);
                        
                        while (rs.next()) {
                        	tempFile = new File(StaticString.userWavPath+"/"+rs.getString("filename"));
	                    	tempFile.delete();
                        }
                        
		                sql  = "\n DELETE FROM table_callermrbt ";
		                sql += "\n  WHERE e164       = '" + e164       + "'";
		                sql += "\n    AND callere164 = '" + dataStr[i] + "'";

		                nResult = stmt.executeUpdate(sql);
					}

					if (stmt != null)
						stmt.endTransaction(true);
				}                                        
            } else
                System.out.println("데이터베이스에 연결할 수 없습니다.");
        } catch (Exception e) {
            e.printStackTrace();
        }finally{
        	try {
                if (rs != null)
                    rs.close();
            } catch (Exception e) {}
            
    		return nResult;
        }
	}
    
   
}